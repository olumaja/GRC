using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace GrcApi.Migrations
{
    /// <inheritdoc />
    public partial class InternalAuditUpdated : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseARMShared");

            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseCTU");

            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseDigitalFinanceService");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMAgribusiness");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMAgriFinancialControlAAFML");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMAgriFinancialControlRFL");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMHillCompliance");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMHillFinancialControl");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMHillInvestmentPortfolio");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMHoldCoCompliance");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMHoldCoFinancialControl");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMHoldCoTreasuryOperation");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMIMCompliance");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMIMFinancialControl");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMIMTreasuryInvestment");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMSecurity");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMSecurityCompliance");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMSecurityFinacialControl");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMSecurityFinancialAdvisory");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMSecuritySecurityOperation");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMTAMFinancialControl");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMTAMTreasuryOperation");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMTrustee");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMTrusteeCompliance");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMTrusteeFinancialControl");

            migrationBuilder.DropTable(
                name: "ComplianceAgribusinessRating");

            migrationBuilder.DropTable(
                name: "ComplianceAgribusinessRatingFinancialControlAAFML");

            migrationBuilder.DropTable(
                name: "ComplianceAgribusinessRatingFinancialControlRFl");

            migrationBuilder.DropTable(
                name: "ComplianceBusinessTAMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "ComplianceBusinessTAMRatingTreasuryOperation");

            migrationBuilder.DropTable(
                name: "ComplianceHillRatingCompliance");

            migrationBuilder.DropTable(
                name: "ComplianceHillRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "ComplianceIMRatingCompliance");

            migrationBuilder.DropTable(
                name: "ComplianceIMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "ComplianceIMRatingTreasuryInvestment");

            migrationBuilder.DropTable(
                name: "ComplianceInvestmentPortfolio");

            migrationBuilder.DropTable(
                name: "CompliancesBusinessCompliance");

            migrationBuilder.DropTable(
                name: "CompliancesBusinessFinancialControl");

            migrationBuilder.DropTable(
                name: "CompliancesBusinessTreasuryOperation");

            migrationBuilder.DropTable(
                name: "ComplianceSecurityRating");

            migrationBuilder.DropTable(
                name: "ComplianceSecurityRatingCompliance");

            migrationBuilder.DropTable(
                name: "ComplianceSecurityRatingFinancialAdvisory");

            migrationBuilder.DropTable(
                name: "ComplianceSecurityRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "ComplianceSecurityRatingSecurityOperation");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceRating");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceRatingCTU");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceRatingDigitalFinanceService");

            migrationBuilder.DropTable(
                name: "ComplianceTrusteeRating");

            migrationBuilder.DropTable(
                name: "ComplianceTrusteeRatingCompliance");

            migrationBuilder.DropTable(
                name: "ComplianceTrusteeRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "FinacialAgribusinessRating");

            migrationBuilder.DropTable(
                name: "FinacialAgribusinessRatingFinancialControlAAFML");

            migrationBuilder.DropTable(
                name: "FinacialAgribusinessRatingFinancialControlRFl");

            migrationBuilder.DropTable(
                name: "FinacialHillRatingCompliance");

            migrationBuilder.DropTable(
                name: "FinacialHillRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "FinacialHillRatingInvestmentPortfolio");

            migrationBuilder.DropTable(
                name: "FinacialIMRatingCompliance");

            migrationBuilder.DropTable(
                name: "FinacialIMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "FinacialIMRatingTreasuryInvestment");

            migrationBuilder.DropTable(
                name: "FinacialRatingBusinessCompliance");

            migrationBuilder.DropTable(
                name: "FinacialRatingBusinessFinancialControl");

            migrationBuilder.DropTable(
                name: "FinacialRatingBusinessTreasuryOperation");

            migrationBuilder.DropTable(
                name: "FinacialSecurityRating");

            migrationBuilder.DropTable(
                name: "FinacialSecurityRatingCompliance");

            migrationBuilder.DropTable(
                name: "FinacialSecurityRatingFinancialAdvisory");

            migrationBuilder.DropTable(
                name: "FinacialSecurityRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "FinacialSecurityRatingSecurityOperation");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRating");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingAcademy");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingCTU");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingCustomerexperience");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingDigitalFinanceService");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingHCM");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingInformationSecurity");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingInternalControl");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingIT");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingLegal");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingMCC");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingRiskManagement");

            migrationBuilder.DropTable(
                name: "FinacialSharedServiceRatingTreasury");

            migrationBuilder.DropTable(
                name: "FinacialTAMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "FinacialTAMRatingTreasuryOperation");

            migrationBuilder.DropTable(
                name: "FinacialTrusteeRating");

            migrationBuilder.DropTable(
                name: "FinacialTrusteeRatingCompliance");

            migrationBuilder.DropTable(
                name: "FinacialTrusteeRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "OperationAgribusinessRating");

            migrationBuilder.DropTable(
                name: "OperationAgribusinessRatingFinancialControlAAFML");

            migrationBuilder.DropTable(
                name: "OperationAgribusinessRatingFinancialControlRFl");

            migrationBuilder.DropTable(
                name: "OperationBusinessCompliance");

            migrationBuilder.DropTable(
                name: "OperationBusinessFinancialControl");

            migrationBuilder.DropTable(
                name: "OperationBusinessTAMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "OperationBusinessTAMRatingTreasuryOperation");

            migrationBuilder.DropTable(
                name: "OperationBusinessTreasuryOperation");

            migrationBuilder.DropTable(
                name: "OperationHillRatingCompliance");

            migrationBuilder.DropTable(
                name: "OperationHillRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "OperationHillRatingInvestmentPortfolio");

            migrationBuilder.DropTable(
                name: "OperationIMRatingCompliance");

            migrationBuilder.DropTable(
                name: "OperationIMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "OperationIMRatingTreasuryInvestment");

            migrationBuilder.DropTable(
                name: "OperationSecurityRating");

            migrationBuilder.DropTable(
                name: "OperationSecurityRatingCompliance");

            migrationBuilder.DropTable(
                name: "OperationSecurityRatingFinancialAdvisory");

            migrationBuilder.DropTable(
                name: "OperationSecurityRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "OperationSecurityRatingSecurityOperation");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceRating");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceRatingCTU");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceRatingDigitalFinanceService");

            migrationBuilder.DropTable(
                name: "OperationTrusteeRating");

            migrationBuilder.DropTable(
                name: "OperationTrusteeRatingCompliance");

            migrationBuilder.DropTable(
                name: "OperationTrusteeRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategyAgribusinessRating");

            migrationBuilder.DropTable(
                name: "StrategyAgribusinessRatingFinancialControlAAFML");

            migrationBuilder.DropTable(
                name: "StrategyAgribusinessRatingFinancialControlRFl");

            migrationBuilder.DropTable(
                name: "StrategyBusinessCompliance");

            migrationBuilder.DropTable(
                name: "StrategyBusinessFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategyBusinessTAMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategyBusinessTAMRatingTreasuryOperation");

            migrationBuilder.DropTable(
                name: "StrategyBusinessTreasuryOperation");

            migrationBuilder.DropTable(
                name: "StrategyHillRatingCompliance");

            migrationBuilder.DropTable(
                name: "StrategyHillRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategyHillRatingInvestmentPortfolio");

            migrationBuilder.DropTable(
                name: "StrategyIMRatingCompliance");

            migrationBuilder.DropTable(
                name: "StrategyIMRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategyIMRatingTreasuryInvestment");

            migrationBuilder.DropTable(
                name: "StrategySecurityRating");

            migrationBuilder.DropTable(
                name: "StrategySecurityRatingCompliance");

            migrationBuilder.DropTable(
                name: "StrategySecurityRatingFinancialAdvisory");

            migrationBuilder.DropTable(
                name: "StrategySecurityRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategySecurityRatingSecurityOperation");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceRating");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceRatingCTU");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceRatingDigitalFinanceService");

            migrationBuilder.DropTable(
                name: "StrategyTrusteeRating");

            migrationBuilder.DropTable(
                name: "StrategyTrusteeRatingCompliance");

            migrationBuilder.DropTable(
                name: "StrategyTrusteeRatingFinancialControl");

            migrationBuilder.DropTable(
                name: "FinancialSharedServiceReporting");               

            migrationBuilder.DropColumn(
                name: "ARMTrustee",
                table: "TimeSinceLastTrusteeAudit");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "TimeSinceLastTrusteeAudit");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "TimeSinceLastTrusteeAudit");

            migrationBuilder.DropColumn(
                name: "ARMSecurity",
                table: "TimeSinceLastSecurityAudit");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "TimeSinceLastSecurityAudit");

            migrationBuilder.DropColumn(
                name: "FinancialAdvisory",
                table: "TimeSinceLastSecurityAudit");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "TimeSinceLastSecurityAudit");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "TimeSinceLastHillAudit");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "TimeSinceLastHillAudit");

            migrationBuilder.DropColumn(
                name: "InvestmentPortfolio",
                table: "TimeSinceLastHillAudit");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "TimeSinceLastBusinessARMTAMAudit");

            migrationBuilder.DropColumn(
                name: "TreasuryOperation",
                table: "TimeSinceLastBusinessARMTAMAudit");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "TimeSinceLastAuditIMBusinessRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "TimeSinceLastAuditIMBusinessRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo");

            migrationBuilder.DropColumn(
                name: "TreasuryOperation",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo");

            migrationBuilder.DropColumn(
                name: "ARMAgribusiness",
                table: "TimeSinceLastAgribusinessAudit");

            migrationBuilder.DropColumn(
                name: "FinancialControlAAFML",
                table: "TimeSinceLastAgribusinessAudit");

            migrationBuilder.DropColumn(
                name: "FinancialControlRFl",
                table: "TimeSinceLastAgribusinessAudit");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationTrusteeRatingPrivateTrust");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationTrusteeRatingCommercialTrust");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "EventManagement",
                table: "OperationSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSecurityRatingStockBroking");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationSecurityRatingResearch");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMUnitRating");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingRetailOperation");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingOperationSettlement");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingOperationControl");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingFundAdmin");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingFundAccount");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingBDPWMIAMIMRetail");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationIMRatingARMRegistrar");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationHillRating");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationBusinessTreasurySale");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationBusinessTAMRating");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationBusinessArmHolco");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationAgribusinessRatingRFl");

            migrationBuilder.DropColumn(
                name: "FOREXRisk",
                table: "OperationAgribusinessRatingAAFML");

            migrationBuilder.DropColumn(
                name: "ARMTrustee",
                table: "ManagementConcernBusinessUnitARMTrusteeRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMTrusteeRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMTrusteeRating");

            migrationBuilder.DropColumn(
                name: "ARMSecurity",
                table: "ManagementConcernBusinessUnitARMSecurityRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMSecurityRating");

            migrationBuilder.DropColumn(
                name: "FinancialAdvirory",
                table: "ManagementConcernBusinessUnitARMSecurityRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMIMRating");

            migrationBuilder.DropColumn(
                name: "Financialcontrol",
                table: "ManagementConcernBusinessUnitARMIMRating");

            migrationBuilder.DropColumn(
                name: "TreasuryInvestment",
                table: "ManagementConcernBusinessUnitARMIMRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMHillRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMHillRating");

            migrationBuilder.DropColumn(
                name: "InvestmentPortfolio",
                table: "ManagementConcernBusinessUnitARMHillRating");

            migrationBuilder.DropColumn(
                name: "FarmingOperation",
                table: "ManagementConcernBusinessUnitARMAgribusinessRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMAgribusinessRating");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceTrusteeRatingPrivateTrust");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceTrusteeRatingCommercialTrust");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingTreasury");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingRiskManagement");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingProcurementAndAdmin");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingMCC");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingLegal");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingIT");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingInternalControl");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingInformationSecurity");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingHCM");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingCustomerexperience");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingCorporatestrategy");

            migrationBuilder.DropColumn(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "TAT",
                table: "ComplianceSharedServiceRatingAcademy");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceSecurityRatingStockBroking");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceSecurityRatingResearch");

            migrationBuilder.DropColumn(
                name: "TheftOrFraudRisk",
                table: "CompliancesBusinessTreasurySale");

            migrationBuilder.DropColumn(
                name: "TheftOrFraudRisk",
                table: "CompliancesBusinessRiskRatingARMHoldCo");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingRetailOperation");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingOperationSettlement");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingOperationControl");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingFundAdmin");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingFundAccount");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingBDPWMIAMIMRetail");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingARMRegistrar");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRating");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceAgribusinessRatingRFl");

            migrationBuilder.DropColumn(
                name: "TheftorFraudRisk",
                table: "ComplianceAgribusinessRatingAAFML");

            migrationBuilder.DropColumn(
                name: "ARMTrustee",
                table: "ARMTrusteeEMCRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ARMTrusteeEMCRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ARMTrusteeEMCRating");

            migrationBuilder.DropColumn(
                name: "ARMSecurities",
                table: "ARMSecurityEMCRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ARMSecurityEMCRating");

            migrationBuilder.DropColumn(
                name: "FinancialAdvisory",
                table: "ARMSecurityEMCRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ARMSecurityEMCRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ARMIMEMCRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ARMIMEMCRating");

            migrationBuilder.DropColumn(
                name: "TreasuryInvestment",
                table: "ARMIMEMCRating");

            migrationBuilder.DropColumn(
                name: "FinacialControl",
                table: "ARMHoldingCompanyEMCRating");

            migrationBuilder.DropColumn(
                name: "TreasuryInvestorNote",
                table: "ARMHoldingCompanyEMCRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ARMHILLEMCRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ARMHILLEMCRating");

            migrationBuilder.DropColumn(
                name: "InvestmentPortfolio",
                table: "ARMHILLEMCRating");

            migrationBuilder.DropColumn(
                name: "FarmingOperation",
                table: "ARMAgribusinessEMCRating");

            migrationBuilder.DropColumn(
                name: "FinancialControl",
                table: "ARMAgribusinessEMCRating");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceService",
                table: "TimeSinceLastSharedServiceAudit",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "TimeSinceLastSharedServiceAudit",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "ARMSharedService",
                table: "TimeSinceLastSharedServiceAudit",
                newName: "Compliance");

            migrationBuilder.RenameColumn(
                name: "SecurityOperation",
                table: "TimeSinceLastSecurityAudit",
                newName: "InvestmentBanking");

            migrationBuilder.RenameColumn(
                name: "TreasuryInvestment",
                table: "TimeSinceLastAuditIMBusinessRating",
                newName: "ARMIM");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyTrusteeRatingPrivateTrust",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyTrusteeRatingPrivateTrust",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyTrusteeRatingCommercialTrust",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyTrusteeRatingCommercialTrust",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "HealthAndSafetyRisks",
                table: "StrategySharedServiceRatingHCM",
                newName: "HealthandSafetyRisks");

            migrationBuilder.RenameColumn(
                name: "Emergingrisks",
                table: "StrategySharedServiceRatingHCM",
                newName: "EmergingRisks");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySecurityRatingStockBroking",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySecurityRatingStockBroking",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySecurityRatingResearch",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategySecurityRatingResearch",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingRetailOperation",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingRetailOperation",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingOperationSettlement",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingOperationSettlement",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingOperationControl",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingOperationControl",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingFundAdmin",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingFundAdmin",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingFundAccount",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingFundAccount",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingBDPWMIAMIMRetail",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingBDPWMIAMIMRetail",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRatingARMRegistrar",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRatingARMRegistrar",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyIMRating",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyIMRating",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyHillRating",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyHillRating",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyBusinessTreasurySale",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyBusinessTreasurySale",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyBusinessTAMRating",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyBusinessTAMRating",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyBusinessArmHoldCo",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyBusinessArmHoldCo",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyAgribusinessRatingRFl",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyAgribusinessRatingRFl",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategyAgribusinessRatingAAFML",
                newName: "UnregulatedUnstruCTOredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunctuatingInterestRates",
                table: "StrategyAgribusinessRatingAAFML",
                newName: "FlunCTOatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationTrusteeRatingPrivateTrust",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationTrusteeRatingPrivateTrust",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationTrusteeRatingPrivateTrust",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationTrusteeRatingCommercialTrust",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationTrusteeRatingCommercialTrust",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationTrusteeRatingCommercialTrust",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingTreasury",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingTreasury",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingRiskManagement",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingRiskManagement",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingMCC",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingMCC",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingLegal",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingLegal",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingIT",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingIT",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingInternalControl",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingInternalControl",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingInformationSecurity",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingInformationSecurity",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingHCM",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingHCM",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingCustomerexperience",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingCustomerexperience",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingCorporatestrategy",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingCorporatestrategy",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSharedServiceRatingAcademy",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductivityRisk",
                table: "OperationSharedServiceRatingAcademy",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSecurityRatingStockBroking",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationSecurityRatingStockBroking",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSecurityRatingStockBroking",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationSecurityRatingResearch",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationSecurityRatingResearch",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationSecurityRatingResearch",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMUnitRating",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMUnitRating",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMUnitRating",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingRetailOperation",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingRetailOperation",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingRetailOperation",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingOperationSettlement",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingOperationSettlement",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingOperationSettlement",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingOperationControl",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingOperationControl",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingOperationControl",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingFundAdmin",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingFundAdmin",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingFundAdmin",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingFundAccount",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingFundAccount",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingFundAccount",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationIMRatingARMRegistrar",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationIMRatingARMRegistrar",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationIMRatingARMRegistrar",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationHillRating",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationHillRating",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationHillRating",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationBusinessTreasurySale",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationBusinessTreasurySale",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationBusinessTreasurySale",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationBusinessTAMRating",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationBusinessTAMRating",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationBusinessTAMRating",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationBusinessArmHolco",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationBusinessArmHolco",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationBusinessArmHolco",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationAgribusinessRatingRFl",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationAgribusinessRatingRFl",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationAgribusinessRatingRFl",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntellectualProperty",
                table: "OperationAgribusinessRatingAAFML",
                newName: "TheftLeakageorMisuseofIntelleCTOalProperty");

            migrationBuilder.RenameColumn(
                name: "ProductMisselling",
                table: "OperationAgribusinessRatingAAFML",
                newName: "InadequateProfilingOfClientsToEffectivelySellProduct");

            migrationBuilder.RenameColumn(
                name: "ITInfrastructureDowntime",
                table: "OperationAgribusinessRatingAAFML",
                newName: "ITInfrastruCTOreDowntime");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceServiceDFS",
                table: "ManagementConcernSharedServiceARTrusteeRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "ManagementConcernSharedServiceARTrusteeRating",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceServiceDFS",
                table: "ManagementConcernSharedServiceARMSecurityRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "ManagementConcernSharedServiceARMSecurityRating",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceServiceDFS",
                table: "ManagementConcernSharedServiceARMIMRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "ManagementConcernSharedServiceARMIMRating",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceServiceDFS",
                table: "ManagementConcernSharedServiceARMHillRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "ManagementConcernSharedServiceARMHillRating",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceServiceDFS",
                table: "ManagementConcernSharedServiceARMAgribusinessRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "ManagementConcernSharedServiceARMAgribusinessRating",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "SecurityOperation",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                newName: "StockBroking");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                newName: "InvestmentBanking");

            migrationBuilder.RenameColumn(
                name: "DigitalFinanceServiceOrARMONE",
                table: "ARMSharedServiceEMCRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "CTU",
                table: "ARMSharedServiceEMCRating",
                newName: "DataAnalytic");

            migrationBuilder.RenameColumn(
                name: "ARMSharedService",
                table: "ARMSharedServiceEMCRating",
                newName: "Compliance");

            migrationBuilder.RenameColumn(
                name: "SecurityOperation",
                table: "ARMSecurityEMCRating",
                newName: "InvestmentBanking");

            migrationBuilder.AlterColumn<string>(
                name: "RootCause",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Reoccurrence",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Reference",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "IssueSummary",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Impact",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ExceptionsNoted",
                table: "WorkPaper",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastTrusteeAudit",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastSharedServiceAudit",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "TimeSinceLastSharedServiceAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastSecurityAudit",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastHillAudit",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastBusinessARMTAMAudit",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastAuditIMBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastAgribusinessAudit",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategySharedService",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategySecurityBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyImBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessRatingTrustee",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessRatingARMHoldCo",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessRatingARMHill",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessARMTAM",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyAgribusiness",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationTrustee",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationSharedService",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationSecurityBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationIMBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationBusinessRatingHill",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationBusinessRatingARMHoldCo",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationBusinessARMTAM",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationAgribusiness",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "ObservationListAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Observation",
                table: "ObservationListAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ManagementResponse",
                table: "ObservationListAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Destination",
                table: "ObservationListAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "ObservationListAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Designation",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionPointToResolve",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "ManagementConcernSharedServiceARTrusteeRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARTrusteeRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMSecurityRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMSecurityRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMIMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMIMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMHillRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMHillRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMAgribusinessRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMAgribusinessRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMTrustee",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMSecurity",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMIM",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMHill",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMAgribusiness",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Team",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Summary",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "SignedBy",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ScopeLimitation",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Scope",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "RootCause",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "PotentialMaterialisedImpact",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "OverAllManagementComment",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "OtherImprovementArea",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Observation",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "IssueRating",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Impact",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "GoodPractiseInclude",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ExecutiveSummary",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DescriptionOfIssue",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AssessmentOfDigitalInitiative",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AdditionalDescription",
                table: "InternalAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "PreviousRating",
                table: "InternalAuditRatingReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "CurrentRating",
                table: "InternalAuditRatingReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditArea",
                table: "InternalAuditRatingReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ResponsibleOfficer",
                table: "InformationRequirementAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "InformationRequirementAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "InformationRequest",
                table: "InformationRequirementAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialTrusteeReporting",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialSecurityReporting",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialReportingBusinessratingARMHoldCo",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialIMBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialHillReporting",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialBusinessARMTAM",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialAgribusinessReporting",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ReportDistributionListTitle",
                table: "EngagementLetterReportDistributionList",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportDistributionListName",
                table: "EngagementLetterReportDistributionList",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportDistributionListBusinessUnit",
                table: "EngagementLetterReportDistributionList",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DurationTiming",
                table: "EngagementLetterAuditExecutionDuration",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DurationAction",
                table: "EngagementLetterAuditExecutionDuration",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ScopeLimitation",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ResponsibleExecutive",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ResponsibilityOfInternalAudit",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Mandate",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "KeyRisk",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "IssueBy",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "CommunicationProtocol",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BusinessUnit",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BusinessOwner",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BriefBackgroundObjective",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditType",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditTitle",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditScope",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditObjective",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "EMCConcernRiskRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "EntityToAction",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "WorkStream",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "UpdatedComment",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReviewType",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportingQuater",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ManagmentResponseAsAtTimeOfEngagement",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Level2",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Level1",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ImpactRating",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Evidence",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DetailedFindings",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Business",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditArea",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceSharedService",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceSecurity",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceIMBusinessRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessRatingTrustee",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessRatingHill",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessRatingARMHoldCo",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessARMTAM",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceAgribusiness",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "CommenceEngagementAuditexecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Placement",
                table: "CitationAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Description",
                table: "CitationAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "BusinessRiskRating",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Title",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "SubProcess",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "RiskDescription",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReviewProcedure",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "InformationRequired",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlObjective",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlDescription",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "StrategicObjective",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ScopeAndControlTesting",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "RiskIdentified",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "PriorAuditObservation",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ImplementationPlan",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BusinessDescription",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionToResolve",
                table: "AuditFindings",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ActionToPreventReoccurrence",
                table: "AuditFindings",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwnerUnit",
                table: "AuditFindings",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "AuditFindings",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Rating",
                table: "AuditFindingAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "NameOrRecurring",
                table: "AuditFindingAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlType",
                table: "AuditFindingAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlDesignOrEffectively",
                table: "AuditFindingAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditFinding",
                table: "AuditFindingAuditReport",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "WorkApproach",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Salutation",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Role",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditScoped",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(MAX)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(50)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "CTO",
                table: "ARMSharedServiceEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseCompliance_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseCTO",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseCTO", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseCTO_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseDataAnalytic",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseDataAnalytic", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseDataAnalytic_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseFinancialControl_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ARMTAMEMCRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    EMCConcernRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMTAM = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMTAMEMCRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMTAMEMCRating_EMCConcernRiskRating_EMCConcernRiskRatingId",
                        column: x => x.EMCConcernRiskRatingId,
                        principalTable: "EMCConcernRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMIMRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMIMAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMIMRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMIMRating_ARMIMAuditUniverse_ARMIMAuditUniverseId",
                        column: x => x.ARMIMAuditUniverseId,
                        principalTable: "ARMIMAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMSecurityInvestmentBanking",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSecurityAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMSecurityInvestmentBanking", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMSecurityInvestmentBanking_ARMSecurityAnnualAuditUniverse_ARMSecurityAnnualAuditUniverseId",
                        column: x => x.ARMSecurityAnnualAuditUniverseId,
                        principalTable: "ARMSecurityAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceIMRatingARMIM",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceIMRatingARMIM", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceIMRatingARMIM_ComplianceIMBusinessRating_ComplianceIMBusinessRatingId",
                        column: x => x.ComplianceIMBusinessRatingId,
                        principalTable: "ComplianceIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSecurityRatingInvestmentBanking",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceSecurityId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSecurityRatingInvestmentBanking", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSecurityRatingInvestmentBanking_ComplianceSecurity_ComplianceSecurityId",
                        column: x => x.ComplianceSecurityId,
                        principalTable: "ComplianceSecurity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceComplianceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceComplianceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceComplianceRating_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceDataAnalyticRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceDataAnalyticRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceDataAnalyticRating_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceFinancialControlRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceFinancialControlRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceFinancialControlRating_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceRatingCTO",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceRatingCTO", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceRatingCTO_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "DigitalFinancialServiceAuditUniverse",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AnualAuditUniverseRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    AnualAuditUniverseStatus = table.Column<int>(type: "int", nullable: false),
                    EngagementPlan = table.Column<int>(type: "int", nullable: false),
                    WorkPaper = table.Column<int>(type: "int", nullable: false),
                    Findingstatus = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DigitalFinancialServiceAuditUniverse", x => x.Id);
                    table.ForeignKey(
                        name: "FK_DigitalFinancialServiceAuditUniverse_AnualAuditUniverseRiskRating_AnualAuditUniverseRiskRatingId",
                        column: x => x.AnualAuditUniverseRiskRatingId,
                        principalTable: "AnualAuditUniverseRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "DigitalFinancialServiceBusinessRiskRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    BusinessRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Status = table.Column<int>(type: "int", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DigitalFinancialServiceBusinessRiskRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_DigitalFinancialServiceBusinessRiskRating_BusinessRiskRating_BusinessRiskRatingId",
                        column: x => x.BusinessRiskRatingId,
                        principalTable: "BusinessRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "DigitalFinancialServiceEMCRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    EMCConcernRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialService = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DigitalFinancialServiceEMCRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_DigitalFinancialServiceEMCRating_EMCConcernRiskRating_EMCConcernRiskRatingId",
                        column: x => x.EMCConcernRiskRatingId,
                        principalTable: "EMCConcernRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialARMIMRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    FinancialIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialARMIMRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialARMIMRating_FinancialIMBusinessRating_FinancialIMBusinessRatingId",
                        column: x => x.FinancialIMBusinessRatingId,
                        principalTable: "FinancialIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSecurityRatingInvestmentBanking",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    FinancialSecurityReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSecurityRatingInvestmentBanking", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSecurityRatingInvestmentBanking_FinancialSecurityReporting_FinancialSecurityReportingId",
                        column: x => x.FinancialSecurityReportingId,
                        principalTable: "FinancialSecurityReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationARMIMRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    InadequateProfilingOfClientsToEffectivelySellProduct = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationARMIMRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationARMIMRating_OperationIMBusinessRating_OperationIMBusinessRatingId",
                        column: x => x.OperationIMBusinessRatingId,
                        principalTable: "OperationIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSecurityRatingInvestmentBanking",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationSecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    InadequateProfilingOfClientsToEffectivelySellProduct = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSecurityRatingInvestmentBanking", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSecurityRatingInvestmentBanking_OperationSecurityBusinessRating_OperationSecurityBusinessRatingId",
                        column: x => x.OperationSecurityBusinessRatingId,
                        principalTable: "OperationSecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceComplianceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceComplianceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceComplianceRating_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceDataAnalyticRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceDataAnalyticRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceDataAnalyticRating_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceFinancialControlRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceFinancialControlRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceFinancialControlRating_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceRatingCTO",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceRatingCTO", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceRatingCTO_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyIMRatingARMIM",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategyImBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    FlunCTOatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstruCTOredlandscape = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyIMRatingARMIM", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyIMRatingARMIM_StrategyImBusinessRating_StrategyImBusinessRatingId",
                        column: x => x.StrategyImBusinessRatingId,
                        principalTable: "StrategyImBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySecurityRatingInvestmentBanking",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategySecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    FlunCTOatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstruCTOredlandscape = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySecurityRatingInvestmentBanking", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySecurityRatingInvestmentBanking_StrategySecurityBusinessRating_StrategySecurityBusinessRatingId",
                        column: x => x.StrategySecurityBusinessRatingId,
                        principalTable: "StrategySecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceCompliance_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceDataAnalytic",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceDataAnalytic", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceDataAnalytic_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceFinancialControl_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceRatingCTO",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceRatingCTO", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceRatingCTO_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseDigitalFinancialServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialServiceAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseDigitalFinancialServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseDigitalFinancialServiceRating_DigitalFinancialServiceAuditUniverse_DigitalFinancialServiceAuditUniverseId",
                        column: x => x.DigitalFinancialServiceAuditUniverseId,
                        principalTable: "DigitalFinancialServiceAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceDigitalFinancialService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialServiceBusinessRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Comment = table.Column<string>(type: "nvarchar(MAX)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceDigitalFinancialService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceDigitalFinancialService_DigitalFinancialServiceBusinessRiskRating_DigitalFinancialServiceBusinessRiskRatingId",
                        column: x => x.DigitalFinancialServiceBusinessRiskRatingId,
                        principalTable: "DigitalFinancialServiceBusinessRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinancialDigitalFinancialService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialServiceBusinessRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Comment = table.Column<string>(type: "nvarchar(MAX)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinancialDigitalFinancialService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinancialDigitalFinancialService_DigitalFinancialServiceBusinessRiskRating_DigitalFinancialServiceBusinessRiskRatingId",
                        column: x => x.DigitalFinancialServiceBusinessRiskRatingId,
                        principalTable: "DigitalFinancialServiceBusinessRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationDigitalFinancialService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialServiceBusinessRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Comment = table.Column<string>(type: "nvarchar(MAX)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationDigitalFinancialService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationDigitalFinancialService_DigitalFinancialServiceBusinessRiskRating_DigitalFinancialServiceBusinessRiskRatingId",
                        column: x => x.DigitalFinancialServiceBusinessRiskRatingId,
                        principalTable: "DigitalFinancialServiceBusinessRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyDigitalFinancialService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialServiceBusinessRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Comment = table.Column<string>(type: "nvarchar(MAX)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyDigitalFinancialService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyDigitalFinancialService_DigitalFinancialServiceBusinessRiskRating_DigitalFinancialServiceBusinessRiskRatingId",
                        column: x => x.DigitalFinancialServiceBusinessRiskRatingId,
                        principalTable: "DigitalFinancialServiceBusinessRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "TimeSinceLastAuditDigitalFinancialService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialServiceBusinessRiskRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    DigitalFinancialService = table.Column<int>(type: "int", nullable: false),
                    Comment = table.Column<string>(type: "nvarchar(MAX)", maxLength: 50, nullable: true),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TimeSinceLastAuditDigitalFinancialService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_TimeSinceLastAuditDigitalFinancialService_DigitalFinancialServiceBusinessRiskRating_DigitalFinancialServiceBusinessRiskRatin~",
                        column: x => x.DigitalFinancialServiceBusinessRiskRatingId,
                        principalTable: "DigitalFinancialServiceBusinessRiskRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceBusinessDigitalFinancialServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ComplianceDigitalFinancialServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceBusinessDigitalFinancialServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceBusinessDigitalFinancialServiceRating_ComplianceDigitalFinancialService_ComplianceDigitalFinancialServiceId",
                        column: x => x.ComplianceDigitalFinancialServiceId,
                        principalTable: "ComplianceDigitalFinancialService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialBusinessDigitalFinancialServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    FinancialDigitalFinancialServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialBusinessDigitalFinancialServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialBusinessDigitalFinancialServiceRating_FinancialDigitalFinancialService_FinancialDigitalFinancialServiceId",
                        column: x => x.FinancialDigitalFinancialServiceId,
                        principalTable: "FinancialDigitalFinancialService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationDigitalFinancialServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OperationDigitalFinancialServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    InadequateProfilingOfClientsToEffectivelySellProduct = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ITInfrastruCTOreDowntime = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntelleCTOalProperty = table.Column<int>(type: "int", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationDigitalFinancialServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationDigitalFinancialServiceRating_OperationDigitalFinancialService_OperationDigitalFinancialServiceId",
                        column: x => x.OperationDigitalFinancialServiceId,
                        principalTable: "OperationDigitalFinancialService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyDigitalFinancialServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategyDigitalFinancialServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    FlunCTOatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstruCTOredlandscape = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyDigitalFinancialServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyDigitalFinancialServiceRating_StrategyDigitalFinancialService_StrategyDigitalFinancialServiceId",
                        column: x => x.StrategyDigitalFinancialServiceId,
                        principalTable: "StrategyDigitalFinancialService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            
            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseCompliance_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseCompliance",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseCTO_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseCTO",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseDataAnalytic_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseDataAnalytic",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseFinancialControl_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseFinancialControl",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ARMTAMEMCRating_EMCConcernRiskRatingId",
                table: "ARMTAMEMCRating",
                column: "EMCConcernRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMIMRating_ARMIMAuditUniverseId",
                table: "AuditUniverseARMIMRating",
                column: "ARMIMAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMSecurityInvestmentBanking_ARMSecurityAnnualAuditUniverseId",
                table: "AuditUniverseARMSecurityInvestmentBanking",
                column: "ARMSecurityAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseDigitalFinancialServiceRating_DigitalFinancialServiceAuditUniverseId",
                table: "AuditUniverseDigitalFinancialServiceRating",
                column: "DigitalFinancialServiceAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceBusinessDigitalFinancialServiceRating_ComplianceDigitalFinancialServiceId",
                table: "ComplianceBusinessDigitalFinancialServiceRating",
                column: "ComplianceDigitalFinancialServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceDigitalFinancialService_DigitalFinancialServiceBusinessRiskRatingId",
                table: "ComplianceDigitalFinancialService",
                column: "DigitalFinancialServiceBusinessRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceIMRatingARMIM_ComplianceIMBusinessRatingId",
                table: "ComplianceIMRatingARMIM",
                column: "ComplianceIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSecurityRatingInvestmentBanking_ComplianceSecurityId",
                table: "ComplianceSecurityRatingInvestmentBanking",
                column: "ComplianceSecurityId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceComplianceRating_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceComplianceRating",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceDataAnalyticRating_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceDataAnalyticRating",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceFinancialControlRating_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceFinancialControlRating",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceRatingCTO_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceRatingCTO",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_DigitalFinancialServiceAuditUniverse_AnualAuditUniverseRiskRatingId",
                table: "DigitalFinancialServiceAuditUniverse",
                column: "AnualAuditUniverseRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_DigitalFinancialServiceBusinessRiskRating_BusinessRiskRatingId",
                table: "DigitalFinancialServiceBusinessRiskRating",
                column: "BusinessRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_DigitalFinancialServiceEMCRating_EMCConcernRiskRatingId",
                table: "DigitalFinancialServiceEMCRating",
                column: "EMCConcernRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialARMIMRating_FinancialIMBusinessRatingId",
                table: "FinacialARMIMRating",
                column: "FinancialIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialBusinessDigitalFinancialServiceRating_FinancialDigitalFinancialServiceId",
                table: "FinacialBusinessDigitalFinancialServiceRating",
                column: "FinancialDigitalFinancialServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSecurityRatingInvestmentBanking_FinancialSecurityReportingId",
                table: "FinacialSecurityRatingInvestmentBanking",
                column: "FinancialSecurityReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinancialDigitalFinancialService_DigitalFinancialServiceBusinessRiskRatingId",
                table: "FinancialDigitalFinancialService",
                column: "DigitalFinancialServiceBusinessRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationARMIMRating_OperationIMBusinessRatingId",
                table: "OperationARMIMRating",
                column: "OperationIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationDigitalFinancialService_DigitalFinancialServiceBusinessRiskRatingId",
                table: "OperationDigitalFinancialService",
                column: "DigitalFinancialServiceBusinessRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationDigitalFinancialServiceRating_OperationDigitalFinancialServiceId",
                table: "OperationDigitalFinancialServiceRating",
                column: "OperationDigitalFinancialServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSecurityRatingInvestmentBanking_OperationSecurityBusinessRatingId",
                table: "OperationSecurityRatingInvestmentBanking",
                column: "OperationSecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceComplianceRating_OperationSharedServiceId",
                table: "OperationSharedServiceComplianceRating",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceDataAnalyticRating_OperationSharedServiceId",
                table: "OperationSharedServiceDataAnalyticRating",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceFinancialControlRating_OperationSharedServiceId",
                table: "OperationSharedServiceFinancialControlRating",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceRatingCTO_OperationSharedServiceId",
                table: "OperationSharedServiceRatingCTO",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyDigitalFinancialService_DigitalFinancialServiceBusinessRiskRatingId",
                table: "StrategyDigitalFinancialService",
                column: "DigitalFinancialServiceBusinessRiskRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyDigitalFinancialServiceRating_StrategyDigitalFinancialServiceId",
                table: "StrategyDigitalFinancialServiceRating",
                column: "StrategyDigitalFinancialServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyIMRatingARMIM_StrategyImBusinessRatingId",
                table: "StrategyIMRatingARMIM",
                column: "StrategyImBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySecurityRatingInvestmentBanking_StrategySecurityBusinessRatingId",
                table: "StrategySecurityRatingInvestmentBanking",
                column: "StrategySecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceCompliance_StrategySharedServiceId",
                table: "StrategySharedServiceCompliance",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceDataAnalytic_StrategySharedServiceId",
                table: "StrategySharedServiceDataAnalytic",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceFinancialControl_StrategySharedServiceId",
                table: "StrategySharedServiceFinancialControl",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceRatingCTO_StrategySharedServiceId",
                table: "StrategySharedServiceRatingCTO",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_TimeSinceLastAuditDigitalFinancialService_DigitalFinancialServiceBusinessRiskRatingId",
                table: "TimeSinceLastAuditDigitalFinancialService",
                column: "DigitalFinancialServiceBusinessRiskRatingId",
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseCompliance");

            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseCTO");

            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseDataAnalytic");

            migrationBuilder.DropTable(
                name: "ARMSharedAuditUniverseFinancialControl");

            migrationBuilder.DropTable(
                name: "ARMTAMEMCRating");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMIMRating");

            migrationBuilder.DropTable(
                name: "AuditUniverseARMSecurityInvestmentBanking");

            migrationBuilder.DropTable(
                name: "AuditUniverseDigitalFinancialServiceRating");

            migrationBuilder.DropTable(
                name: "ComplianceBusinessDigitalFinancialServiceRating");

            migrationBuilder.DropTable(
                name: "ComplianceIMRatingARMIM");

            migrationBuilder.DropTable(
                name: "ComplianceSecurityRatingInvestmentBanking");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceComplianceRating");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceDataAnalyticRating");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceFinancialControlRating");

            migrationBuilder.DropTable(
                name: "ComplianceSharedServiceRatingCTO");

            migrationBuilder.DropTable(
                name: "DigitalFinancialServiceEMCRating");

            migrationBuilder.DropTable(
                name: "FinacialARMIMRating");

            migrationBuilder.DropTable(
                name: "FinacialBusinessDigitalFinancialServiceRating");

            migrationBuilder.DropTable(
                name: "FinacialSecurityRatingInvestmentBanking");

            migrationBuilder.DropTable(
                name: "OperationARMIMRating");

            migrationBuilder.DropTable(
                name: "OperationDigitalFinancialServiceRating");

            migrationBuilder.DropTable(
                name: "OperationSecurityRatingInvestmentBanking");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceComplianceRating");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceDataAnalyticRating");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceFinancialControlRating");

            migrationBuilder.DropTable(
                name: "OperationSharedServiceRatingCTO");

            migrationBuilder.DropTable(
                name: "StrategyDigitalFinancialServiceRating");

            migrationBuilder.DropTable(
                name: "StrategyIMRatingARMIM");

            migrationBuilder.DropTable(
                name: "StrategySecurityRatingInvestmentBanking");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceCompliance");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceDataAnalytic");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceFinancialControl");

            migrationBuilder.DropTable(
                name: "StrategySharedServiceRatingCTO");

            migrationBuilder.DropTable(
                name: "TimeSinceLastAuditDigitalFinancialService");

            migrationBuilder.DropTable(
                name: "DigitalFinancialServiceAuditUniverse");

            migrationBuilder.DropTable(
                name: "ComplianceDigitalFinancialService");

            migrationBuilder.DropTable(
                name: "FinancialDigitalFinancialService");

            migrationBuilder.DropTable(
                name: "OperationDigitalFinancialService");

            migrationBuilder.DropTable(
                name: "StrategyDigitalFinancialService");

            migrationBuilder.DropTable(
                name: "DigitalFinancialServiceBusinessRiskRating");

            
            
            
            
            
            migrationBuilder.DropColumn(
                name: "CTO",
                table: "TimeSinceLastSharedServiceAudit");

            migrationBuilder.DropColumn(
                name: "CTO",
                table: "ManagementConcernSharedServiceARTrusteeRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARTrusteeRating");

            migrationBuilder.DropColumn(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMSecurityRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMSecurityRating");

            migrationBuilder.DropColumn(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMIMRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMIMRating");

            migrationBuilder.DropColumn(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMHillRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMHillRating");

            migrationBuilder.DropColumn(
                name: "CTO",
                table: "ManagementConcernSharedServiceARMAgribusinessRating");

            migrationBuilder.DropColumn(
                name: "Compliance",
                table: "ManagementConcernSharedServiceARMAgribusinessRating");

            migrationBuilder.DropColumn(
                name: "CTO",
                table: "ARMSharedServiceEMCRating");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "TimeSinceLastSharedServiceAudit",
                newName: "DigitalFinanceService");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "TimeSinceLastSharedServiceAudit",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "Compliance",
                table: "TimeSinceLastSharedServiceAudit",
                newName: "ARMSharedService");

            migrationBuilder.RenameColumn(
                name: "InvestmentBanking",
                table: "TimeSinceLastSecurityAudit",
                newName: "SecurityOperation");

            migrationBuilder.RenameColumn(
                name: "ARMIM",
                table: "TimeSinceLastAuditIMBusinessRating",
                newName: "TreasuryInvestment");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyTrusteeRatingPrivateTrust",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyTrusteeRatingPrivateTrust",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyTrusteeRatingCommercialTrust",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyTrusteeRatingCommercialTrust",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "HealthandSafetyRisks",
                table: "StrategySharedServiceRatingHCM",
                newName: "HealthAndSafetyRisks");

            migrationBuilder.RenameColumn(
                name: "EmergingRisks",
                table: "StrategySharedServiceRatingHCM",
                newName: "Emergingrisks");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategySecurityRatingStockBroking",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategySecurityRatingStockBroking",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategySecurityRatingResearch",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategySecurityRatingResearch",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingRetailOperation",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingRetailOperation",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingOperationSettlement",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingOperationSettlement",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingOperationControl",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingOperationControl",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingFundAdmin",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingFundAdmin",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingFundAccount",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingFundAccount",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingBDPWMIAMIMRetail",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingBDPWMIAMIMRetail",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRatingARMRegistrar",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRatingARMRegistrar",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyIMRating",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyIMRating",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyHillRating",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyHillRating",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyBusinessTreasurySale",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyBusinessTreasurySale",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyBusinessTAMRating",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyBusinessTAMRating",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyBusinessArmHoldCo",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyBusinessArmHoldCo",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyAgribusinessRatingRFl",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyAgribusinessRatingRFl",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "UnregulatedUnstruCTOredlandscape",
                table: "StrategyAgribusinessRatingAAFML",
                newName: "UnregulatedUnstructuredlandscape");

            migrationBuilder.RenameColumn(
                name: "FlunCTOatingInterestRates",
                table: "StrategyAgribusinessRatingAAFML",
                newName: "FlunctuatingInterestRates");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationTrusteeRatingPrivateTrust",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationTrusteeRatingPrivateTrust",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationTrusteeRatingPrivateTrust",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationTrusteeRatingCommercialTrust",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationTrusteeRatingCommercialTrust",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationTrusteeRatingCommercialTrust",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingTreasury",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingTreasury",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingRiskManagement",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingRiskManagement",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingMCC",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingMCC",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingLegal",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingLegal",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingIT",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingIT",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingInternalControl",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingInternalControl",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingInformationSecurity",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingInformationSecurity",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingHCM",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingHCM",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingCustomerexperience",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingCustomerexperience",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingCorporatestrategy",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingCorporatestrategy",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSharedServiceRatingAcademy",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSharedServiceRatingAcademy",
                newName: "ProductivityRisk");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSecurityRatingStockBroking",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationSecurityRatingStockBroking",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSecurityRatingStockBroking",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationSecurityRatingResearch",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationSecurityRatingResearch",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationSecurityRatingResearch",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMUnitRating",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMUnitRating",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMUnitRating",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingRetailOperation",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingRetailOperation",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingRetailOperation",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingOperationSettlement",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingOperationSettlement",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingOperationSettlement",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingOperationControl",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingOperationControl",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingOperationControl",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingFundAdmin",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingFundAdmin",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingFundAdmin",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingFundAccount",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingFundAccount",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingFundAccount",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationIMRatingARMRegistrar",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationIMRatingARMRegistrar",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationIMRatingARMRegistrar",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationHillRating",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationHillRating",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationHillRating",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationBusinessTreasurySale",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationBusinessTreasurySale",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationBusinessTreasurySale",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationBusinessTAMRating",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationBusinessTAMRating",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationBusinessTAMRating",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationBusinessArmHolco",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationBusinessArmHolco",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationBusinessArmHolco",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationAgribusinessRatingRFl",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationAgribusinessRatingRFl",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationAgribusinessRatingRFl",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "TheftLeakageorMisuseofIntelleCTOalProperty",
                table: "OperationAgribusinessRatingAAFML",
                newName: "TheftLeakageorMisuseofIntellectualProperty");

            migrationBuilder.RenameColumn(
                name: "InadequateProfilingOfClientsToEffectivelySellProduct",
                table: "OperationAgribusinessRatingAAFML",
                newName: "ProductMisselling");

            migrationBuilder.RenameColumn(
                name: "ITInfrastruCTOreDowntime",
                table: "OperationAgribusinessRatingAAFML",
                newName: "ITInfrastructureDowntime");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ManagementConcernSharedServiceARTrusteeRating",
                newName: "DigitalFinanceServiceDFS");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "ManagementConcernSharedServiceARTrusteeRating",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ManagementConcernSharedServiceARMSecurityRating",
                newName: "DigitalFinanceServiceDFS");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "ManagementConcernSharedServiceARMSecurityRating",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ManagementConcernSharedServiceARMIMRating",
                newName: "DigitalFinanceServiceDFS");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "ManagementConcernSharedServiceARMIMRating",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ManagementConcernSharedServiceARMHillRating",
                newName: "DigitalFinanceServiceDFS");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "ManagementConcernSharedServiceARMHillRating",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ManagementConcernSharedServiceARMAgribusinessRating",
                newName: "DigitalFinanceServiceDFS");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "ManagementConcernSharedServiceARMAgribusinessRating",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "StockBroking",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                newName: "SecurityOperation");

            migrationBuilder.RenameColumn(
                name: "InvestmentBanking",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                newName: "FinancialControl");

            migrationBuilder.RenameColumn(
                name: "FinancialControl",
                table: "ARMSharedServiceEMCRating",
                newName: "DigitalFinanceServiceOrARMONE");

            migrationBuilder.RenameColumn(
                name: "DataAnalytic",
                table: "ARMSharedServiceEMCRating",
                newName: "CTU");

            migrationBuilder.RenameColumn(
                name: "Compliance",
                table: "ARMSharedServiceEMCRating",
                newName: "ARMSharedService");

            migrationBuilder.RenameColumn(
                name: "InvestmentBanking",
                table: "ARMSecurityEMCRating",
                newName: "SecurityOperation");

            migrationBuilder.AlterColumn<string>(
                name: "RootCause",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Reoccurrence",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Reference",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "IssueSummary",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Impact",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ExceptionsNoted",
                table: "WorkPaper",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastTrusteeAudit",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "ARMTrustee",
                table: "TimeSinceLastTrusteeAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "TimeSinceLastTrusteeAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "TimeSinceLastTrusteeAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastSharedServiceAudit",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastSecurityAudit",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "ARMSecurity",
                table: "TimeSinceLastSecurityAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "TimeSinceLastSecurityAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialAdvisory",
                table: "TimeSinceLastSecurityAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "TimeSinceLastSecurityAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastHillAudit",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "TimeSinceLastHillAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "TimeSinceLastHillAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentPortfolio",
                table: "TimeSinceLastHillAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastBusinessARMTAMAudit",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "TimeSinceLastBusinessARMTAMAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TreasuryOperation",
                table: "TimeSinceLastBusinessARMTAMAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastAuditIMBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "TimeSinceLastAuditIMBusinessRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "TimeSinceLastAuditIMBusinessRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TreasuryOperation",
                table: "TimeSinceLastAuditBusinessRatingARMHoldCo",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "TimeSinceLastAgribusinessAudit",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "ARMAgribusiness",
                table: "TimeSinceLastAgribusinessAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControlAAFML",
                table: "TimeSinceLastAgribusinessAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControlRFl",
                table: "TimeSinceLastAgribusinessAudit",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AllianceandPartnershipRisks",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "BCPandDRP",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CreditRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CurrencyDevaluation",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "DropinFundandFundManagerRatings",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EnvironmentalRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ErosionofStatutoryCapital",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ExitRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FailureofInvestor",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FlunctuatingInterestRates",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "HarshMacroeconomicConditionsegInflation",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Increasedleverage",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "LiquidityPressures",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "MyLegacyIssuesProperty",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PoliticalRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "PortfolioProductandFundPerformanceRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RiskofDeclineinMarketShare",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "RisktoProfitabilityorPerformance",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SocialRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "StiffCompetitionandPoorVisibilityOftheBusiness",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "SustainabilityRisk",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "UnregulatedUnstructuredlandscape",
                table: "StrategySharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategySharedService",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategySecurityBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyImBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessRatingTrustee",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessRatingARMHoldCo",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessRatingARMHill",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyBusinessARMTAM",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "StrategyAgribusiness",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationTrusteeRatingPrivateTrust",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationTrusteeRatingCommercialTrust",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationTrustee",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ConfidentialityIntegrityandAvailabilityofData",
                table: "OperationSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "EventManagement",
                table: "OperationSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ITInfrastructureDowntime",
                table: "OperationSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ProductMisselling",
                table: "OperationSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationSharedService",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSecurityRatingStockBroking",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationSecurityRatingResearch",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationSecurityBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMUnitRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingRetailOperation",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingOperationSettlement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingOperationControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingFundAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingFundAccount",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingBDPWMIAMIMRetail",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationIMRatingARMRegistrar",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationIMBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationHillRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationBusinessTreasurySale",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationBusinessTAMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationBusinessRatingHill",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationBusinessRatingARMHoldCo",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationBusinessARMTAM",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationBusinessArmHolco",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationAgribusinessRatingRFl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FOREXRisk",
                table: "OperationAgribusinessRatingAAFML",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "OperationAgribusiness",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "ObservationListAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Observation",
                table: "ObservationListAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ManagementResponse",
                table: "ObservationListAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Destination",
                table: "ObservationListAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "ObservationListAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Designation",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionPointToResolve",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "ManagementResponseAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "ARMTrustee",
                table: "ManagementConcernBusinessUnitARMTrusteeRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMTrusteeRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMTrusteeRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ARMSecurity",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialAdvirory",
                table: "ManagementConcernBusinessUnitARMSecurityRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMIMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Financialcontrol",
                table: "ManagementConcernBusinessUnitARMIMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TreasuryInvestment",
                table: "ManagementConcernBusinessUnitARMIMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ManagementConcernBusinessUnitARMHillRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMHillRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentPortfolio",
                table: "ManagementConcernBusinessUnitARMHillRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FarmingOperation",
                table: "ManagementConcernBusinessUnitARMAgribusinessRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ManagementConcernBusinessUnitARMAgribusinessRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMTrustee",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMSecurity",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMIM",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMHill",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ManagementConcernARMAgribusiness",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Team",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Summary",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "SignedBy",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ScopeLimitation",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Scope",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "RootCause",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "PotentialMaterialisedImpact",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "OverAllManagementComment",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "OtherImprovementArea",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Observation",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "IssueRating",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Impact",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "GoodPractiseInclude",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ExecutiveSummary",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DescriptionOfIssue",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AssessmentOfDigitalInitiative",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AdditionalDescription",
                table: "InternalAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "PreviousRating",
                table: "InternalAuditRatingReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "CurrentRating",
                table: "InternalAuditRatingReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditArea",
                table: "InternalAuditRatingReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ResponsibleOfficer",
                table: "InformationRequirementAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "InformationRequirementAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "InformationRequest",
                table: "InformationRequirementAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialTrusteeReporting",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialSecurityReporting",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialReportingBusinessratingARMHoldCo",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialIMBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialHillReporting",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialBusinessARMTAM",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "FinancialAgribusinessReporting",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportDistributionListTitle",
                table: "EngagementLetterReportDistributionList",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportDistributionListName",
                table: "EngagementLetterReportDistributionList",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportDistributionListBusinessUnit",
                table: "EngagementLetterReportDistributionList",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DurationTiming",
                table: "EngagementLetterAuditExecutionDuration",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DurationAction",
                table: "EngagementLetterAuditExecutionDuration",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ScopeLimitation",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ResponsibleExecutive",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ResponsibilityOfInternalAudit",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Mandate",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "KeyRisk",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "IssueBy",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "CommunicationProtocol",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BusinessUnit",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BusinessOwner",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BriefBackgroundObjective",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditType",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditTitle",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditScope",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditObjective",
                table: "EngagementLetterAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "EMCConcernRiskRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "EntityToAction",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "ConsolidatedAuditFindingActionDetail",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "WorkStream",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "UpdatedComment",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReviewType",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReportingQuater",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ManagmentResponseAsAtTimeOfEngagement",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Level2",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Level1",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ImpactRating",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Evidence",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "DetailedFindings",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Business",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditArea",
                table: "ConsolidatedAuditFinding",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceTrusteeRatingPrivateTrust",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceTrusteeRatingCommercialTrust",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingTreasury",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingRiskManagement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingProcurementAndAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingMCC",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingLegal",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingIT",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingInternalControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingInformationSecurity",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingHCM",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingCustomerexperience",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingCorporatestrategy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "AdoptionandIimplementationOfPoliciesandAdherenceToProcesses",
                table: "ComplianceSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "CorporateGovernance",
                table: "ComplianceSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TAT",
                table: "ComplianceSharedServiceRatingAcademy",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceSharedService",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceSecurityRatingStockBroking",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceSecurityRatingResearch",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceSecurity",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "TheftOrFraudRisk",
                table: "CompliancesBusinessTreasurySale",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftOrFraudRisk",
                table: "CompliancesBusinessRiskRatingARMHoldCo",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingRetailOperation",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingOperationSettlement",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingOperationControl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingFundAdmin",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingFundAccount",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingBDPWMIAMIMRetail",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRatingARMRegistrar",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceIMRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceIMBusinessRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessRatingTrustee",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessRatingHill",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessRatingARMHoldCo",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceBusinessARMTAM",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceAgribusinessRatingRFl",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TheftorFraudRisk",
                table: "ComplianceAgribusinessRatingAAFML",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "ComplianceAgribusiness",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                defaultValue: "",
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "CommenceEngagementAuditexecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Placement",
                table: "CitationAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Description",
                table: "CitationAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "BusinessRiskRating",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Title",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "SubProcess",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "RiskDescription",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReviewProcedure",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "InformationRequired",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlObjective",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlDescription",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Comment",
                table: "AuditProgramAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "StrategicObjective",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ScopeAndControlTesting",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "RiskIdentified",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "PriorAuditObservation",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ImplementationPlan",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "BusinessDescription",
                table: "AuditPlanningMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ActionToResolve",
                table: "AuditFindings",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ActionToPreventReoccurrence",
                table: "AuditFindings",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwnerUnit",
                table: "AuditFindings",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "ActionOwner",
                table: "AuditFindings",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50);

            migrationBuilder.AlterColumn<string>(
                name: "Rating",
                table: "AuditFindingAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "NameOrRecurring",
                table: "AuditFindingAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlType",
                table: "AuditFindingAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ControlDesignOrEffectively",
                table: "AuditFindingAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditFinding",
                table: "AuditFindingAuditReport",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "WorkApproach",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Unit",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Salutation",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Role",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "Recommendation",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "ReasonForRejection",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AlterColumn<string>(
                name: "AuditScoped",
                table: "AuditAnnouncementMemoAuditExecution",
                type: "nvarchar(50)",
                maxLength: 50,
                nullable: true,
                oldClrType: typeof(string),
                oldType: "nvarchar(MAX)",
                oldMaxLength: 50,
                oldNullable: true);

            migrationBuilder.AddColumn<int>(
                name: "ARMTrustee",
                table: "ARMTrusteeEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ARMTrusteeEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ARMTrusteeEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "ARMSecurities",
                table: "ARMSecurityEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ARMSecurityEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialAdvisory",
                table: "ARMSecurityEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ARMSecurityEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ARMIMEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ARMIMEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TreasuryInvestment",
                table: "ARMIMEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinacialControl",
                table: "ARMHoldingCompanyEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "TreasuryInvestorNote",
                table: "ARMHoldingCompanyEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "Compliance",
                table: "ARMHILLEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ARMHILLEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "InvestmentPortfolio",
                table: "ARMHILLEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FarmingOperation",
                table: "ARMAgribusinessEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.AddColumn<int>(
                name: "FinancialControl",
                table: "ARMAgribusinessEMCRating",
                type: "int",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseARMShared",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseARMShared", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseARMShared_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseCTU",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseCTU", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseCTU_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ARMSharedAuditUniverseDigitalFinanceService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ARMSharedAuditUniverseDigitalFinanceService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ARMSharedAuditUniverseDigitalFinanceService_ARMSharedAuditUniverse_ARMSharedAuditUniverseId",
                        column: x => x.ARMSharedAuditUniverseId,
                        principalTable: "ARMSharedAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMAgribusiness",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMAgribusinessAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMAgribusiness", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMAgribusiness_ARMAgribusinessAuditUniverse_ARMAgribusinessAuditUniverseId",
                        column: x => x.ARMAgribusinessAuditUniverseId,
                        principalTable: "ARMAgribusinessAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMAgriFinancialControlAAFML",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMAgribusinessAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMAgriFinancialControlAAFML", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMAgriFinancialControlAAFML_ARMAgribusinessAuditUniverse_ARMAgribusinessAuditUniverseId",
                        column: x => x.ARMAgribusinessAuditUniverseId,
                        principalTable: "ARMAgribusinessAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMAgriFinancialControlRFL",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMAgribusinessAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMAgriFinancialControlRFL", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMAgriFinancialControlRFL_ARMAgribusinessAuditUniverse_ARMAgribusinessAuditUniverseId",
                        column: x => x.ARMAgribusinessAuditUniverseId,
                        principalTable: "ARMAgribusinessAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMHillCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMHillAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMHillCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMHillCompliance_ARMHillAuditUniverse_ARMHillAuditUniverseId",
                        column: x => x.ARMHillAuditUniverseId,
                        principalTable: "ARMHillAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMHillFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMHillAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMHillFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMHillFinancialControl_ARMHillAuditUniverse_ARMHillAuditUniverseId",
                        column: x => x.ARMHillAuditUniverseId,
                        principalTable: "ARMHillAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMHillInvestmentPortfolio",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMHillAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMHillInvestmentPortfolio", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMHillInvestmentPortfolio_ARMHillAuditUniverse_ARMHillAuditUniverseId",
                        column: x => x.ARMHillAuditUniverseId,
                        principalTable: "ARMHillAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMHoldCoCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMHoldingCompanyAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMHoldCoCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMHoldCoCompliance_ARMHoldingCompanyAnnualAuditUniverse_ARMHoldingCompanyAnnualAuditUniverseId",
                        column: x => x.ARMHoldingCompanyAnnualAuditUniverseId,
                        principalTable: "ARMHoldingCompanyAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMHoldCoFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMHoldingCompanyAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMHoldCoFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMHoldCoFinancialControl_ARMHoldingCompanyAnnualAuditUniverse_ARMHoldingCompanyAnnualAuditUniverseId",
                        column: x => x.ARMHoldingCompanyAnnualAuditUniverseId,
                        principalTable: "ARMHoldingCompanyAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMHoldCoTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMHoldingCompanyAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMHoldCoTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMHoldCoTreasuryOperation_ARMHoldingCompanyAnnualAuditUniverse_ARMHoldingCompanyAnnualAuditUniverseId",
                        column: x => x.ARMHoldingCompanyAnnualAuditUniverseId,
                        principalTable: "ARMHoldingCompanyAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMIMCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMIMAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMIMCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMIMCompliance_ARMIMAuditUniverse_ARMIMAuditUniverseId",
                        column: x => x.ARMIMAuditUniverseId,
                        principalTable: "ARMIMAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMIMFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMIMAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMIMFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMIMFinancialControl_ARMIMAuditUniverse_ARMIMAuditUniverseId",
                        column: x => x.ARMIMAuditUniverseId,
                        principalTable: "ARMIMAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMIMTreasuryInvestment",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMIMAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMIMTreasuryInvestment", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMIMTreasuryInvestment_ARMIMAuditUniverse_ARMIMAuditUniverseId",
                        column: x => x.ARMIMAuditUniverseId,
                        principalTable: "ARMIMAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMSecurity",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSecurityAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMSecurity", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMSecurity_ARMSecurityAnnualAuditUniverse_ARMSecurityAnnualAuditUniverseId",
                        column: x => x.ARMSecurityAnnualAuditUniverseId,
                        principalTable: "ARMSecurityAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMSecurityCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSecurityAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMSecurityCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMSecurityCompliance_ARMSecurityAnnualAuditUniverse_ARMSecurityAnnualAuditUniverseId",
                        column: x => x.ARMSecurityAnnualAuditUniverseId,
                        principalTable: "ARMSecurityAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMSecurityFinacialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSecurityAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMSecurityFinacialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMSecurityFinacialControl_ARMSecurityAnnualAuditUniverse_ARMSecurityAnnualAuditUniverseId",
                        column: x => x.ARMSecurityAnnualAuditUniverseId,
                        principalTable: "ARMSecurityAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMSecurityFinancialAdvisory",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSecurityAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMSecurityFinancialAdvisory", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMSecurityFinancialAdvisory_ARMSecurityAnnualAuditUniverse_ARMSecurityAnnualAuditUniverseId",
                        column: x => x.ARMSecurityAnnualAuditUniverseId,
                        principalTable: "ARMSecurityAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMSecuritySecurityOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSecurityAnnualAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMSecuritySecurityOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMSecuritySecurityOperation_ARMSecurityAnnualAuditUniverse_ARMSecurityAnnualAuditUniverseId",
                        column: x => x.ARMSecurityAnnualAuditUniverseId,
                        principalTable: "ARMSecurityAnnualAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMTAMFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMTAMAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMTAMFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMTAMFinancialControl_ARMTAMAuditUniverse_ARMTAMAuditUniverseId",
                        column: x => x.ARMTAMAuditUniverseId,
                        principalTable: "ARMTAMAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMTAMTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMTAMAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMTAMTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMTAMTreasuryOperation_ARMTAMAuditUniverse_ARMTAMAuditUniverseId",
                        column: x => x.ARMTAMAuditUniverseId,
                        principalTable: "ARMTAMAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMTrustee",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMTrusteeAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMTrustee", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMTrustee_ARMTrusteeAuditUniverse_ARMTrusteeAuditUniverseId",
                        column: x => x.ARMTrusteeAuditUniverseId,
                        principalTable: "ARMTrusteeAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMTrusteeCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMTrusteeAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMTrusteeCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMTrusteeCompliance_ARMTrusteeAuditUniverse_ARMTrusteeAuditUniverseId",
                        column: x => x.ARMTrusteeAuditUniverseId,
                        principalTable: "ARMTrusteeAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AuditUniverseARMTrusteeFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMTrusteeAuditUniverseId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    April = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    August = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    BusinessManagerConcern = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    December = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DirectorConcern = table.Column<int>(type: "int", nullable: false),
                    February = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    January = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    July = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    June = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    March = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    May = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    November = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    October = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    OldRiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Recommentation = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequesterName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskRating = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RiskScore = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    September = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditUniverseARMTrusteeFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AuditUniverseARMTrusteeFinancialControl_ARMTrusteeAuditUniverse_ARMTrusteeAuditUniverseId",
                        column: x => x.ARMTrusteeAuditUniverseId,
                        principalTable: "ARMTrusteeAuditUniverse",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceAgribusinessRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceAgribusinessRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceAgribusinessRating_ComplianceAgribusiness_ComplianceAgribusinessId",
                        column: x => x.ComplianceAgribusinessId,
                        principalTable: "ComplianceAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceAgribusinessRatingFinancialControlAAFML",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceAgribusinessRatingFinancialControlAAFML", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceAgribusinessRatingFinancialControlAAFML_ComplianceAgribusiness_ComplianceAgribusinessId",
                        column: x => x.ComplianceAgribusinessId,
                        principalTable: "ComplianceAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceAgribusinessRatingFinancialControlRFl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceAgribusinessRatingFinancialControlRFl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceAgribusinessRatingFinancialControlRFl_ComplianceAgribusiness_ComplianceAgribusinessId",
                        column: x => x.ComplianceAgribusinessId,
                        principalTable: "ComplianceAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceBusinessTAMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceBusinessTAMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceBusinessTAMRatingFinancialControl_ComplianceBusinessARMTAM_ComplianceBusinessARMTAMId",
                        column: x => x.ComplianceBusinessARMTAMId,
                        principalTable: "ComplianceBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceBusinessTAMRatingTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceBusinessTAMRatingTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceBusinessTAMRatingTreasuryOperation_ComplianceBusinessARMTAM_ComplianceBusinessARMTAMId",
                        column: x => x.ComplianceBusinessARMTAMId,
                        principalTable: "ComplianceBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceHillRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceHillRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceHillRatingCompliance_ComplianceBusinessRatingHill_ComplianceBusinessRatingHillId",
                        column: x => x.ComplianceBusinessRatingHillId,
                        principalTable: "ComplianceBusinessRatingHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceHillRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceHillRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceHillRatingFinancialControl_ComplianceBusinessRatingHill_ComplianceBusinessRatingHillId",
                        column: x => x.ComplianceBusinessRatingHillId,
                        principalTable: "ComplianceBusinessRatingHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceIMRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceIMRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceIMRatingCompliance_ComplianceIMBusinessRating_ComplianceIMBusinessRatingId",
                        column: x => x.ComplianceIMBusinessRatingId,
                        principalTable: "ComplianceIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceIMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceIMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceIMRatingFinancialControl_ComplianceIMBusinessRating_ComplianceIMBusinessRatingId",
                        column: x => x.ComplianceIMBusinessRatingId,
                        principalTable: "ComplianceIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceIMRatingTreasuryInvestment",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceIMRatingTreasuryInvestment", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceIMRatingTreasuryInvestment_ComplianceIMBusinessRating_ComplianceIMBusinessRatingId",
                        column: x => x.ComplianceIMBusinessRatingId,
                        principalTable: "ComplianceIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceInvestmentPortfolio",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceInvestmentPortfolio", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceInvestmentPortfolio_ComplianceBusinessRatingHill_ComplianceBusinessRatingHillId",
                        column: x => x.ComplianceBusinessRatingHillId,
                        principalTable: "ComplianceBusinessRatingHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "CompliancesBusinessCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftOrFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CompliancesBusinessCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CompliancesBusinessCompliance_ComplianceBusinessRatingARMHoldCo_ComplianceBusinessRatingARMHoldCoId",
                        column: x => x.ComplianceBusinessRatingARMHoldCoId,
                        principalTable: "ComplianceBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "CompliancesBusinessFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftOrFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CompliancesBusinessFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CompliancesBusinessFinancialControl_ComplianceBusinessRatingARMHoldCo_ComplianceBusinessRatingARMHoldCoId",
                        column: x => x.ComplianceBusinessRatingARMHoldCoId,
                        principalTable: "ComplianceBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "CompliancesBusinessTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftOrFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CompliancesBusinessTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CompliancesBusinessTreasuryOperation_ComplianceBusinessRatingARMHoldCo_ComplianceBusinessRatingARMHoldCoId",
                        column: x => x.ComplianceBusinessRatingARMHoldCoId,
                        principalTable: "ComplianceBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSecurityRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSecurityId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSecurityRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSecurityRating_ComplianceSecurity_ComplianceSecurityId",
                        column: x => x.ComplianceSecurityId,
                        principalTable: "ComplianceSecurity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSecurityRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSecurityId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSecurityRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSecurityRatingCompliance_ComplianceSecurity_ComplianceSecurityId",
                        column: x => x.ComplianceSecurityId,
                        principalTable: "ComplianceSecurity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSecurityRatingFinancialAdvisory",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSecurityId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSecurityRatingFinancialAdvisory", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSecurityRatingFinancialAdvisory_ComplianceSecurity_ComplianceSecurityId",
                        column: x => x.ComplianceSecurityId,
                        principalTable: "ComplianceSecurity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSecurityRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSecurityId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSecurityRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSecurityRatingFinancialControl_ComplianceSecurity_ComplianceSecurityId",
                        column: x => x.ComplianceSecurityId,
                        principalTable: "ComplianceSecurity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSecurityRatingSecurityOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSecurityId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSecurityRatingSecurityOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSecurityRatingSecurityOperation_ComplianceSecurity_ComplianceSecurityId",
                        column: x => x.ComplianceSecurityId,
                        principalTable: "ComplianceSecurity",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceRating_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceRatingCTU",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceRatingCTU", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceRatingCTU_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceSharedServiceRatingDigitalFinanceService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceSharedServiceRatingDigitalFinanceService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceSharedServiceRatingDigitalFinanceService_ComplianceSharedService_ComplianceSharedServiceId",
                        column: x => x.ComplianceSharedServiceId,
                        principalTable: "ComplianceSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceTrusteeRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceTrusteeRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceTrusteeRating_ComplianceBusinessRatingTrustee_ComplianceBusinessRatingTrusteeId",
                        column: x => x.ComplianceBusinessRatingTrusteeId,
                        principalTable: "ComplianceBusinessRatingTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceTrusteeRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceTrusteeRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceTrusteeRatingCompliance_ComplianceBusinessRatingTrustee_ComplianceBusinessRatingTrusteeId",
                        column: x => x.ComplianceBusinessRatingTrusteeId,
                        principalTable: "ComplianceBusinessRatingTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ComplianceTrusteeRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AMLCFT = table.Column<int>(type: "int", nullable: false),
                    AdoptionandIimplementationOfPoliciesandAdherenceToProcesses = table.Column<int>(type: "int", nullable: false),
                    ChangingRegulations = table.Column<int>(type: "int", nullable: false),
                    ComplianceBusinessRatingTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CorporateGovernance = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureRisk = table.Column<int>(type: "int", nullable: false),
                    GDPROrNDPR = table.Column<int>(type: "int", nullable: false),
                    InaccurateComputationofRegulatoryRemittancesDelayedFilings = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    KYCChecks = table.Column<int>(type: "int", nullable: false),
                    LitigationRisk = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    NonComplianceWithContracts = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ComplianceTrusteeRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_ComplianceTrusteeRatingFinancialControl_ComplianceBusinessRatingTrustee_ComplianceBusinessRatingTrusteeId",
                        column: x => x.ComplianceBusinessRatingTrusteeId,
                        principalTable: "ComplianceBusinessRatingTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialAgribusinessRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialAgribusinessReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialAgribusinessRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialAgribusinessRating_FinancialAgribusinessReporting_FinancialAgribusinessReportingId",
                        column: x => x.FinancialAgribusinessReportingId,
                        principalTable: "FinancialAgribusinessReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialAgribusinessRatingFinancialControlAAFML",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialAgribusinessReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialAgribusinessRatingFinancialControlAAFML", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialAgribusinessRatingFinancialControlAAFML_FinancialAgribusinessReporting_FinancialAgribusinessReportingId",
                        column: x => x.FinancialAgribusinessReportingId,
                        principalTable: "FinancialAgribusinessReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialAgribusinessRatingFinancialControlRFl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialAgribusinessReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialAgribusinessRatingFinancialControlRFl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialAgribusinessRatingFinancialControlRFl_FinancialAgribusinessReporting_FinancialAgribusinessReportingId",
                        column: x => x.FinancialAgribusinessReportingId,
                        principalTable: "FinancialAgribusinessReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialHillRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialHillReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialHillRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialHillRatingCompliance_FinancialHillReporting_FinancialHillReportingId",
                        column: x => x.FinancialHillReportingId,
                        principalTable: "FinancialHillReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialHillRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialHillReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialHillRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialHillRatingFinancialControl_FinancialHillReporting_FinancialHillReportingId",
                        column: x => x.FinancialHillReportingId,
                        principalTable: "FinancialHillReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialHillRatingInvestmentPortfolio",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialHillReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialHillRatingInvestmentPortfolio", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialHillRatingInvestmentPortfolio_FinancialHillReporting_FinancialHillReportingId",
                        column: x => x.FinancialHillReportingId,
                        principalTable: "FinancialHillReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialIMRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialIMRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialIMRatingCompliance_FinancialIMBusinessRating_FinancialIMBusinessRatingId",
                        column: x => x.FinancialIMBusinessRatingId,
                        principalTable: "FinancialIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialIMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialIMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialIMRatingFinancialControl_FinancialIMBusinessRating_FinancialIMBusinessRatingId",
                        column: x => x.FinancialIMBusinessRatingId,
                        principalTable: "FinancialIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialIMRatingTreasuryInvestment",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialIMRatingTreasuryInvestment", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialIMRatingTreasuryInvestment_FinancialIMBusinessRating_FinancialIMBusinessRatingId",
                        column: x => x.FinancialIMBusinessRatingId,
                        principalTable: "FinancialIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialRatingBusinessCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialReportingBusinessratingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialRatingBusinessCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialRatingBusinessCompliance_FinancialReportingBusinessratingARMHoldCo_FinancialReportingBusinessratingARMHoldCoId",
                        column: x => x.FinancialReportingBusinessratingARMHoldCoId,
                        principalTable: "FinancialReportingBusinessratingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialRatingBusinessFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialReportingBusinessratingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialRatingBusinessFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialRatingBusinessFinancialControl_FinancialReportingBusinessratingARMHoldCo_FinancialReportingBusinessratingARMHoldCoId",
                        column: x => x.FinancialReportingBusinessratingARMHoldCoId,
                        principalTable: "FinancialReportingBusinessratingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialRatingBusinessTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialReportingBusinessratingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialRatingBusinessTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialRatingBusinessTreasuryOperation_FinancialReportingBusinessratingARMHoldCo_FinancialReportingBusinessratingARMHoldCoId",
                        column: x => x.FinancialReportingBusinessratingARMHoldCoId,
                        principalTable: "FinancialReportingBusinessratingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSecurityRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSecurityReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSecurityRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSecurityRating_FinancialSecurityReporting_FinancialSecurityReportingId",
                        column: x => x.FinancialSecurityReportingId,
                        principalTable: "FinancialSecurityReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSecurityRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSecurityReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSecurityRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSecurityRatingCompliance_FinancialSecurityReporting_FinancialSecurityReportingId",
                        column: x => x.FinancialSecurityReportingId,
                        principalTable: "FinancialSecurityReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSecurityRatingFinancialAdvisory",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSecurityReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSecurityRatingFinancialAdvisory", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSecurityRatingFinancialAdvisory_FinancialSecurityReporting_FinancialSecurityReportingId",
                        column: x => x.FinancialSecurityReportingId,
                        principalTable: "FinancialSecurityReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSecurityRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSecurityReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSecurityRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSecurityRatingFinancialControl_FinancialSecurityReporting_FinancialSecurityReportingId",
                        column: x => x.FinancialSecurityReportingId,
                        principalTable: "FinancialSecurityReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSecurityRatingSecurityOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSecurityReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSecurityRatingSecurityOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSecurityRatingSecurityOperation_FinancialSecurityReporting_FinancialSecurityReportingId",
                        column: x => x.FinancialSecurityReportingId,
                        principalTable: "FinancialSecurityReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialTAMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialTAMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialTAMRatingFinancialControl_FinancialBusinessARMTAM_FinancialBusinessARMTAMId",
                        column: x => x.FinancialBusinessARMTAMId,
                        principalTable: "FinancialBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialTAMRatingTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialTAMRatingTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialTAMRatingTreasuryOperation_FinancialBusinessARMTAM_FinancialBusinessARMTAMId",
                        column: x => x.FinancialBusinessARMTAMId,
                        principalTable: "FinancialBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialTrusteeRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialTrusteeReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialTrusteeRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialTrusteeRating_FinancialTrusteeReporting_FinancialTrusteeReportingId",
                        column: x => x.FinancialTrusteeReportingId,
                        principalTable: "FinancialTrusteeReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialTrusteeRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialTrusteeReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialTrusteeRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialTrusteeRatingCompliance_FinancialTrusteeReporting_FinancialTrusteeReportingId",
                        column: x => x.FinancialTrusteeReportingId,
                        principalTable: "FinancialTrusteeReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialTrusteeRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialTrusteeReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialTrusteeRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialTrusteeRatingFinancialControl_FinancialTrusteeReporting_FinancialTrusteeReportingId",
                        column: x => x.FinancialTrusteeReportingId,
                        principalTable: "FinancialTrusteeReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinancialSharedServiceReporting",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    ARMSharedServiceRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Comment = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinancialSharedServiceReporting", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinancialSharedServiceReporting_ARMSharedServiceRating_ARMSharedServiceRatingId",
                        column: x => x.ARMSharedServiceRatingId,
                        principalTable: "ARMSharedServiceRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationAgribusinessRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationAgribusinessRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationAgribusinessRating_OperationAgribusiness_OperationAgribusinessId",
                        column: x => x.OperationAgribusinessId,
                        principalTable: "OperationAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationAgribusinessRatingFinancialControlAAFML",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationAgribusinessRatingFinancialControlAAFML", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationAgribusinessRatingFinancialControlAAFML_OperationAgribusiness_OperationAgribusinessId",
                        column: x => x.OperationAgribusinessId,
                        principalTable: "OperationAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationAgribusinessRatingFinancialControlRFl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationAgribusinessRatingFinancialControlRFl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationAgribusinessRatingFinancialControlRFl_OperationAgribusiness_OperationAgribusinessId",
                        column: x => x.OperationAgribusinessId,
                        principalTable: "OperationAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationBusinessCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationBusinessCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationBusinessCompliance_OperationBusinessRatingARMHoldCo_OperationBusinessRatingARMHoldCoId",
                        column: x => x.OperationBusinessRatingARMHoldCoId,
                        principalTable: "OperationBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationBusinessFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationBusinessFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationBusinessFinancialControl_OperationBusinessRatingARMHoldCo_OperationBusinessRatingARMHoldCoId",
                        column: x => x.OperationBusinessRatingARMHoldCoId,
                        principalTable: "OperationBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationBusinessTAMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationBusinessTAMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationBusinessTAMRatingFinancialControl_OperationBusinessARMTAM_OperationBusinessARMTAMId",
                        column: x => x.OperationBusinessARMTAMId,
                        principalTable: "OperationBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationBusinessTAMRatingTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationBusinessTAMRatingTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationBusinessTAMRatingTreasuryOperation_OperationBusinessARMTAM_OperationBusinessARMTAMId",
                        column: x => x.OperationBusinessARMTAMId,
                        principalTable: "OperationBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationBusinessTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationBusinessTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationBusinessTreasuryOperation_OperationBusinessRatingARMHoldCo_OperationBusinessRatingARMHoldCoId",
                        column: x => x.OperationBusinessRatingARMHoldCoId,
                        principalTable: "OperationBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationHillRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessRatingHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationHillRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationHillRatingCompliance_OperationBusinessRatingHill_OperationBusinessRatingHillId",
                        column: x => x.OperationBusinessRatingHillId,
                        principalTable: "OperationBusinessRatingHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationHillRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessRatingHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationHillRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationHillRatingFinancialControl_OperationBusinessRatingHill_OperationBusinessRatingHillId",
                        column: x => x.OperationBusinessRatingHillId,
                        principalTable: "OperationBusinessRatingHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationHillRatingInvestmentPortfolio",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationBusinessRatingHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationHillRatingInvestmentPortfolio", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationHillRatingInvestmentPortfolio_OperationBusinessRatingHill_OperationBusinessRatingHillId",
                        column: x => x.OperationBusinessRatingHillId,
                        principalTable: "OperationBusinessRatingHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationIMRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationIMRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationIMRatingCompliance_OperationIMBusinessRating_OperationIMBusinessRatingId",
                        column: x => x.OperationIMBusinessRatingId,
                        principalTable: "OperationIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationIMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationIMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationIMRatingFinancialControl_OperationIMBusinessRating_OperationIMBusinessRatingId",
                        column: x => x.OperationIMBusinessRatingId,
                        principalTable: "OperationIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationIMRatingTreasuryInvestment",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationIMBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationIMRatingTreasuryInvestment", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationIMRatingTreasuryInvestment_OperationIMBusinessRating_OperationIMBusinessRatingId",
                        column: x => x.OperationIMBusinessRatingId,
                        principalTable: "OperationIMBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSecurityRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationSecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSecurityRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSecurityRating_OperationSecurityBusinessRating_OperationSecurityBusinessRatingId",
                        column: x => x.OperationSecurityBusinessRatingId,
                        principalTable: "OperationSecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSecurityRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationSecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSecurityRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSecurityRatingCompliance_OperationSecurityBusinessRating_OperationSecurityBusinessRatingId",
                        column: x => x.OperationSecurityBusinessRatingId,
                        principalTable: "OperationSecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSecurityRatingFinancialAdvisory",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationSecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSecurityRatingFinancialAdvisory", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSecurityRatingFinancialAdvisory_OperationSecurityBusinessRating_OperationSecurityBusinessRatingId",
                        column: x => x.OperationSecurityBusinessRatingId,
                        principalTable: "OperationSecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSecurityRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationSecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSecurityRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSecurityRatingFinancialControl_OperationSecurityBusinessRating_OperationSecurityBusinessRatingId",
                        column: x => x.OperationSecurityBusinessRatingId,
                        principalTable: "OperationSecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSecurityRatingSecurityOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationSecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSecurityRatingSecurityOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSecurityRatingSecurityOperation_OperationSecurityBusinessRating_OperationSecurityBusinessRatingId",
                        column: x => x.OperationSecurityBusinessRatingId,
                        principalTable: "OperationSecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    EventManagement = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceRating_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceRatingCTU",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    EventManagement = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceRatingCTU", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceRatingCTU_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationSharedServiceRatingDigitalFinanceService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    AssentMaintenance = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ChangeNoticeManagement = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DisclosureCorruptionOfSensitiveData = table.Column<int>(type: "int", nullable: false),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    EventManagement = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    ObsoleteTechnology = table.Column<int>(type: "int", nullable: false),
                    OperationSharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    QualityManagament = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false),
                    VendorManagement = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationSharedServiceRatingDigitalFinanceService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationSharedServiceRatingDigitalFinanceService_OperationSharedService_OperationSharedServiceId",
                        column: x => x.OperationSharedServiceId,
                        principalTable: "OperationSharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationTrusteeRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationTrusteeRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationTrusteeRating_OperationTrustee_OperationTrusteeId",
                        column: x => x.OperationTrusteeId,
                        principalTable: "OperationTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationTrusteeRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationTrusteeRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationTrusteeRatingCompliance_OperationTrustee_OperationTrusteeId",
                        column: x => x.OperationTrusteeId,
                        principalTable: "OperationTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OperationTrusteeRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdoptionandImplementationofPolicies = table.Column<int>(type: "int", nullable: false),
                    BudgetOverruns = table.Column<int>(type: "int", nullable: false),
                    ConfidentialityIntegrityandAvailabilityofData = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErroneousDataEntry = table.Column<int>(type: "int", nullable: false),
                    ErrorDetectionRisk = table.Column<int>(type: "int", nullable: false),
                    FOREXRisk = table.Column<int>(type: "int", nullable: false),
                    ITInfrastructureDowntime = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    MalwareorVirusorWebsiteAttacks = table.Column<int>(type: "int", nullable: false),
                    Miscommunication = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    OperationTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    OverorUnderpaymentofClient = table.Column<int>(type: "int", nullable: false),
                    PoorCustomerService = table.Column<int>(type: "int", nullable: false),
                    ProductMisselling = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    RecruitmentRisk = table.Column<int>(type: "int", nullable: false),
                    RelevanceandRecencyofModelToolsandTechniques = table.Column<int>(type: "int", nullable: false),
                    StrategyMonitoringRisk = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftLeakageorMisuseofIntellectualProperty = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    ThirdpartyRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnauthorizedAccess = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OperationTrusteeRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OperationTrusteeRatingFinancialControl_OperationTrustee_OperationTrusteeId",
                        column: x => x.OperationTrusteeId,
                        principalTable: "OperationTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyAgribusinessRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyAgribusinessRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyAgribusinessRating_StrategyAgribusiness_StrategyAgribusinessId",
                        column: x => x.StrategyAgribusinessId,
                        principalTable: "StrategyAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyAgribusinessRatingFinancialControlAAFML",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyAgribusinessRatingFinancialControlAAFML", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyAgribusinessRatingFinancialControlAAFML_StrategyAgribusiness_StrategyAgribusinessId",
                        column: x => x.StrategyAgribusinessId,
                        principalTable: "StrategyAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyAgribusinessRatingFinancialControlRFl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyAgribusinessId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyAgribusinessRatingFinancialControlRFl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyAgribusinessRatingFinancialControlRFl_StrategyAgribusiness_StrategyAgribusinessId",
                        column: x => x.StrategyAgribusinessId,
                        principalTable: "StrategyAgribusiness",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyBusinessCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategyBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyBusinessCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyBusinessCompliance_StrategyBusinessRatingARMHoldCo_StrategyBusinessRatingARMHoldCoId",
                        column: x => x.StrategyBusinessRatingARMHoldCoId,
                        principalTable: "StrategyBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyBusinessFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    StrategyBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyBusinessFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyBusinessFinancialControl_StrategyBusinessRatingARMHoldCo_StrategyBusinessRatingARMHoldCoId",
                        column: x => x.StrategyBusinessRatingARMHoldCoId,
                        principalTable: "StrategyBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyBusinessTAMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyBusinessTAMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyBusinessTAMRatingFinancialControl_StrategyBusinessARMTAM_StrategyBusinessARMTAMId",
                        column: x => x.StrategyBusinessARMTAMId,
                        principalTable: "StrategyBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyBusinessTAMRatingTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessARMTAMId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyBusinessTAMRatingTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyBusinessTAMRatingTreasuryOperation_StrategyBusinessARMTAM_StrategyBusinessARMTAMId",
                        column: x => x.StrategyBusinessARMTAMId,
                        principalTable: "StrategyBusinessARMTAM",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyBusinessTreasuryOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingARMHoldCoId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyBusinessTreasuryOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyBusinessTreasuryOperation_StrategyBusinessRatingARMHoldCo_StrategyBusinessRatingARMHoldCoId",
                        column: x => x.StrategyBusinessRatingARMHoldCoId,
                        principalTable: "StrategyBusinessRatingARMHoldCo",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyHillRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingARMHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyHillRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyHillRatingCompliance_StrategyBusinessRatingARMHill_StrategyBusinessRatingARMHillId",
                        column: x => x.StrategyBusinessRatingARMHillId,
                        principalTable: "StrategyBusinessRatingARMHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyHillRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingARMHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyHillRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyHillRatingFinancialControl_StrategyBusinessRatingARMHill_StrategyBusinessRatingARMHillId",
                        column: x => x.StrategyBusinessRatingARMHillId,
                        principalTable: "StrategyBusinessRatingARMHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyHillRatingInvestmentPortfolio",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingARMHillId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyHillRatingInvestmentPortfolio", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyHillRatingInvestmentPortfolio_StrategyBusinessRatingARMHill_StrategyBusinessRatingARMHillId",
                        column: x => x.StrategyBusinessRatingARMHillId,
                        principalTable: "StrategyBusinessRatingARMHill",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyIMRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyImBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyIMRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyIMRatingCompliance_StrategyImBusinessRating_StrategyImBusinessRatingId",
                        column: x => x.StrategyImBusinessRatingId,
                        principalTable: "StrategyImBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyIMRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyImBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyIMRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyIMRatingFinancialControl_StrategyImBusinessRating_StrategyImBusinessRatingId",
                        column: x => x.StrategyImBusinessRatingId,
                        principalTable: "StrategyImBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyIMRatingTreasuryInvestment",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyImBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyIMRatingTreasuryInvestment", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyIMRatingTreasuryInvestment_StrategyImBusinessRating_StrategyImBusinessRatingId",
                        column: x => x.StrategyImBusinessRatingId,
                        principalTable: "StrategyImBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySecurityRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySecurityRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySecurityRating_StrategySecurityBusinessRating_StrategySecurityBusinessRatingId",
                        column: x => x.StrategySecurityBusinessRatingId,
                        principalTable: "StrategySecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySecurityRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySecurityRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySecurityRatingCompliance_StrategySecurityBusinessRating_StrategySecurityBusinessRatingId",
                        column: x => x.StrategySecurityBusinessRatingId,
                        principalTable: "StrategySecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySecurityRatingFinancialAdvisory",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySecurityRatingFinancialAdvisory", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySecurityRatingFinancialAdvisory_StrategySecurityBusinessRating_StrategySecurityBusinessRatingId",
                        column: x => x.StrategySecurityBusinessRatingId,
                        principalTable: "StrategySecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySecurityRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySecurityRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySecurityRatingFinancialControl_StrategySecurityBusinessRating_StrategySecurityBusinessRatingId",
                        column: x => x.StrategySecurityBusinessRatingId,
                        principalTable: "StrategySecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySecurityRatingSecurityOperation",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySecurityBusinessRatingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySecurityRatingSecurityOperation", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySecurityRatingSecurityOperation_StrategySecurityBusinessRating_StrategySecurityBusinessRatingId",
                        column: x => x.StrategySecurityBusinessRatingId,
                        principalTable: "StrategySecurityBusinessRating",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceRating_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceRatingCTU",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceRatingCTU", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceRatingCTU_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategySharedServiceRatingDigitalFinanceService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategySharedServiceId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategySharedServiceRatingDigitalFinanceService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategySharedServiceRatingDigitalFinanceService_StrategySharedService_StrategySharedServiceId",
                        column: x => x.StrategySharedServiceId,
                        principalTable: "StrategySharedService",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyTrusteeRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyTrusteeRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyTrusteeRating_StrategyBusinessRatingTrustee_StrategyBusinessRatingTrusteeId",
                        column: x => x.StrategyBusinessRatingTrusteeId,
                        principalTable: "StrategyBusinessRatingTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyTrusteeRatingCompliance",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyTrusteeRatingCompliance", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyTrusteeRatingCompliance_StrategyBusinessRatingTrustee_StrategyBusinessRatingTrusteeId",
                        column: x => x.StrategyBusinessRatingTrusteeId,
                        principalTable: "StrategyBusinessRatingTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "StrategyTrusteeRatingFinancialControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AllianceandPartnershipRisks = table.Column<int>(type: "int", nullable: false),
                    BCPandDRP = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    CreditRisk = table.Column<int>(type: "int", nullable: false),
                    CurrencyDevaluation = table.Column<int>(type: "int", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    DropinFundandFundManagerRatings = table.Column<int>(type: "int", nullable: false),
                    EmergingRisks = table.Column<int>(type: "int", nullable: false),
                    EnvironmentalRisk = table.Column<int>(type: "int", nullable: false),
                    ErosionofStatutoryCapital = table.Column<int>(type: "int", nullable: false),
                    ExitRisk = table.Column<int>(type: "int", nullable: false),
                    FailureofInvestor = table.Column<int>(type: "int", nullable: false),
                    FluidityofTechnologicalSolutions = table.Column<int>(type: "int", nullable: false),
                    FlunctuatingInterestRates = table.Column<int>(type: "int", nullable: false),
                    HarshMacroeconomicConditionsegInflation = table.Column<int>(type: "int", nullable: false),
                    HealthandSafetyRisks = table.Column<int>(type: "int", nullable: false),
                    Increasedleverage = table.Column<int>(type: "int", nullable: false),
                    InformationSecurityRisk = table.Column<int>(type: "int", nullable: false),
                    InvestmentRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    LiquidityPressures = table.Column<int>(type: "int", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    MyLegacyIssuesProperty = table.Column<int>(type: "int", nullable: false),
                    PeopleRetentionRisk = table.Column<int>(type: "int", nullable: false),
                    PoliticalRisk = table.Column<int>(type: "int", nullable: false),
                    PortfolioProductandFundPerformanceRisk = table.Column<int>(type: "int", nullable: false),
                    ProductivityRisk = table.Column<int>(type: "int", nullable: false),
                    ProjectManagementRisk = table.Column<int>(type: "int", nullable: false),
                    ReputationalRisk = table.Column<int>(type: "int", nullable: false),
                    RiskofDeclineinMarketShare = table.Column<int>(type: "int", nullable: false),
                    RisktoProfitabilityorPerformance = table.Column<int>(type: "int", nullable: false),
                    SocialRisk = table.Column<int>(type: "int", nullable: false),
                    StiffCompetitionandPoorVisibilityOftheBusiness = table.Column<int>(type: "int", nullable: false),
                    StrategyBusinessRatingTrusteeId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    SustainabilityRisk = table.Column<int>(type: "int", nullable: false),
                    TechnologicalRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false),
                    UnregulatedUnstructuredlandscape = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StrategyTrusteeRatingFinancialControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_StrategyTrusteeRatingFinancialControl_StrategyBusinessRatingTrustee_StrategyBusinessRatingTrusteeId",
                        column: x => x.StrategyBusinessRatingTrusteeId,
                        principalTable: "StrategyBusinessRatingTrustee",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRating",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRating", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRating_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingAcademy",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingAcademy", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingAcademy_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingCorporatestrategy",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingCorporatestrategy", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingCorporatestrategy_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingCTU",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingCTU", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingCTU_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingCustomerexperience",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingCustomerexperience", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingCustomerexperience_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingDigitalFinanceService",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingDigitalFinanceService", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingDigitalFinanceService_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingHCM",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingHCM", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingHCM_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingInformationSecurity",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingInformationSecurity", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingInformationSecurity_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingInternalControl",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingInternalControl", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingInternalControl_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingIT",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingIT", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingIT_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingLegal",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingLegal", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingLegal_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingMCC",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingMCC", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingMCC_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingProcurementAndAdmin",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingProcurementAndAdmin", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingProcurementAndAdmin_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingRiskManagement",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingRiskManagement", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingRiskManagement_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FinacialSharedServiceRatingTreasury",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    AdherencetoFinancialStandards = table.Column<int>(type: "int", nullable: false),
                    AdoptionandImplementationofPoliciesAdherence = table.Column<int>(type: "int", nullable: false),
                    CreatedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: false),
                    DeletedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ErrororControlRisk = table.Column<int>(type: "int", nullable: false),
                    FinancialSharedServiceReportingId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IncomeAssuranceRisk = table.Column<int>(type: "int", nullable: false),
                    IsDeleted = table.Column<bool>(type: "bit", nullable: false),
                    ModifiedBy = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    ModifiedOnUtc = table.Column<DateTime>(type: "datetime2", nullable: true),
                    StatutoryDeductionsandTaxes = table.Column<int>(type: "int", nullable: false),
                    TAT = table.Column<int>(type: "int", nullable: false),
                    TheftorFraudRisk = table.Column<int>(type: "int", nullable: false),
                    Total = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FinacialSharedServiceRatingTreasury", x => x.Id);
                    table.ForeignKey(
                        name: "FK_FinacialSharedServiceRatingTreasury_FinancialSharedServiceReporting_FinancialSharedServiceReportingId",
                        column: x => x.FinancialSharedServiceReportingId,
                        principalTable: "FinancialSharedServiceReporting",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });
                      
            
            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseARMShared_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseARMShared",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseCTU_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseCTU",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ARMSharedAuditUniverseDigitalFinanceService_ARMSharedAuditUniverseId",
                table: "ARMSharedAuditUniverseDigitalFinanceService",
                column: "ARMSharedAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMAgribusiness_ARMAgribusinessAuditUniverseId",
                table: "AuditUniverseARMAgribusiness",
                column: "ARMAgribusinessAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMAgriFinancialControlAAFML_ARMAgribusinessAuditUniverseId",
                table: "AuditUniverseARMAgriFinancialControlAAFML",
                column: "ARMAgribusinessAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMAgriFinancialControlRFL_ARMAgribusinessAuditUniverseId",
                table: "AuditUniverseARMAgriFinancialControlRFL",
                column: "ARMAgribusinessAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMHillCompliance_ARMHillAuditUniverseId",
                table: "AuditUniverseARMHillCompliance",
                column: "ARMHillAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMHillFinancialControl_ARMHillAuditUniverseId",
                table: "AuditUniverseARMHillFinancialControl",
                column: "ARMHillAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMHillInvestmentPortfolio_ARMHillAuditUniverseId",
                table: "AuditUniverseARMHillInvestmentPortfolio",
                column: "ARMHillAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMHoldCoCompliance_ARMHoldingCompanyAnnualAuditUniverseId",
                table: "AuditUniverseARMHoldCoCompliance",
                column: "ARMHoldingCompanyAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMHoldCoFinancialControl_ARMHoldingCompanyAnnualAuditUniverseId",
                table: "AuditUniverseARMHoldCoFinancialControl",
                column: "ARMHoldingCompanyAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMHoldCoTreasuryOperation_ARMHoldingCompanyAnnualAuditUniverseId",
                table: "AuditUniverseARMHoldCoTreasuryOperation",
                column: "ARMHoldingCompanyAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMIMCompliance_ARMIMAuditUniverseId",
                table: "AuditUniverseARMIMCompliance",
                column: "ARMIMAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMIMFinancialControl_ARMIMAuditUniverseId",
                table: "AuditUniverseARMIMFinancialControl",
                column: "ARMIMAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMIMTreasuryInvestment_ARMIMAuditUniverseId",
                table: "AuditUniverseARMIMTreasuryInvestment",
                column: "ARMIMAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMSecurity_ARMSecurityAnnualAuditUniverseId",
                table: "AuditUniverseARMSecurity",
                column: "ARMSecurityAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMSecurityCompliance_ARMSecurityAnnualAuditUniverseId",
                table: "AuditUniverseARMSecurityCompliance",
                column: "ARMSecurityAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMSecurityFinacialControl_ARMSecurityAnnualAuditUniverseId",
                table: "AuditUniverseARMSecurityFinacialControl",
                column: "ARMSecurityAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMSecurityFinancialAdvisory_ARMSecurityAnnualAuditUniverseId",
                table: "AuditUniverseARMSecurityFinancialAdvisory",
                column: "ARMSecurityAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMSecuritySecurityOperation_ARMSecurityAnnualAuditUniverseId",
                table: "AuditUniverseARMSecuritySecurityOperation",
                column: "ARMSecurityAnnualAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMTAMFinancialControl_ARMTAMAuditUniverseId",
                table: "AuditUniverseARMTAMFinancialControl",
                column: "ARMTAMAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMTAMTreasuryOperation_ARMTAMAuditUniverseId",
                table: "AuditUniverseARMTAMTreasuryOperation",
                column: "ARMTAMAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMTrustee_ARMTrusteeAuditUniverseId",
                table: "AuditUniverseARMTrustee",
                column: "ARMTrusteeAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMTrusteeCompliance_ARMTrusteeAuditUniverseId",
                table: "AuditUniverseARMTrusteeCompliance",
                column: "ARMTrusteeAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AuditUniverseARMTrusteeFinancialControl_ARMTrusteeAuditUniverseId",
                table: "AuditUniverseARMTrusteeFinancialControl",
                column: "ARMTrusteeAuditUniverseId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceAgribusinessRating_ComplianceAgribusinessId",
                table: "ComplianceAgribusinessRating",
                column: "ComplianceAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceAgribusinessRatingFinancialControlAAFML_ComplianceAgribusinessId",
                table: "ComplianceAgribusinessRatingFinancialControlAAFML",
                column: "ComplianceAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceAgribusinessRatingFinancialControlRFl_ComplianceAgribusinessId",
                table: "ComplianceAgribusinessRatingFinancialControlRFl",
                column: "ComplianceAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceBusinessTAMRatingFinancialControl_ComplianceBusinessARMTAMId",
                table: "ComplianceBusinessTAMRatingFinancialControl",
                column: "ComplianceBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceBusinessTAMRatingTreasuryOperation_ComplianceBusinessARMTAMId",
                table: "ComplianceBusinessTAMRatingTreasuryOperation",
                column: "ComplianceBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceHillRatingCompliance_ComplianceBusinessRatingHillId",
                table: "ComplianceHillRatingCompliance",
                column: "ComplianceBusinessRatingHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceHillRatingFinancialControl_ComplianceBusinessRatingHillId",
                table: "ComplianceHillRatingFinancialControl",
                column: "ComplianceBusinessRatingHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceIMRatingCompliance_ComplianceIMBusinessRatingId",
                table: "ComplianceIMRatingCompliance",
                column: "ComplianceIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceIMRatingFinancialControl_ComplianceIMBusinessRatingId",
                table: "ComplianceIMRatingFinancialControl",
                column: "ComplianceIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceIMRatingTreasuryInvestment_ComplianceIMBusinessRatingId",
                table: "ComplianceIMRatingTreasuryInvestment",
                column: "ComplianceIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceInvestmentPortfolio_ComplianceBusinessRatingHillId",
                table: "ComplianceInvestmentPortfolio",
                column: "ComplianceBusinessRatingHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_CompliancesBusinessCompliance_ComplianceBusinessRatingARMHoldCoId",
                table: "CompliancesBusinessCompliance",
                column: "ComplianceBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_CompliancesBusinessFinancialControl_ComplianceBusinessRatingARMHoldCoId",
                table: "CompliancesBusinessFinancialControl",
                column: "ComplianceBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_CompliancesBusinessTreasuryOperation_ComplianceBusinessRatingARMHoldCoId",
                table: "CompliancesBusinessTreasuryOperation",
                column: "ComplianceBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSecurityRating_ComplianceSecurityId",
                table: "ComplianceSecurityRating",
                column: "ComplianceSecurityId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSecurityRatingCompliance_ComplianceSecurityId",
                table: "ComplianceSecurityRatingCompliance",
                column: "ComplianceSecurityId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSecurityRatingFinancialAdvisory_ComplianceSecurityId",
                table: "ComplianceSecurityRatingFinancialAdvisory",
                column: "ComplianceSecurityId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSecurityRatingFinancialControl_ComplianceSecurityId",
                table: "ComplianceSecurityRatingFinancialControl",
                column: "ComplianceSecurityId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSecurityRatingSecurityOperation_ComplianceSecurityId",
                table: "ComplianceSecurityRatingSecurityOperation",
                column: "ComplianceSecurityId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceRating_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceRating",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceRatingCTU_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceRatingCTU",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceSharedServiceRatingDigitalFinanceService_ComplianceSharedServiceId",
                table: "ComplianceSharedServiceRatingDigitalFinanceService",
                column: "ComplianceSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceTrusteeRating_ComplianceBusinessRatingTrusteeId",
                table: "ComplianceTrusteeRating",
                column: "ComplianceBusinessRatingTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceTrusteeRatingCompliance_ComplianceBusinessRatingTrusteeId",
                table: "ComplianceTrusteeRatingCompliance",
                column: "ComplianceBusinessRatingTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_ComplianceTrusteeRatingFinancialControl_ComplianceBusinessRatingTrusteeId",
                table: "ComplianceTrusteeRatingFinancialControl",
                column: "ComplianceBusinessRatingTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialAgribusinessRating_FinancialAgribusinessReportingId",
                table: "FinacialAgribusinessRating",
                column: "FinancialAgribusinessReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialAgribusinessRatingFinancialControlAAFML_FinancialAgribusinessReportingId",
                table: "FinacialAgribusinessRatingFinancialControlAAFML",
                column: "FinancialAgribusinessReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialAgribusinessRatingFinancialControlRFl_FinancialAgribusinessReportingId",
                table: "FinacialAgribusinessRatingFinancialControlRFl",
                column: "FinancialAgribusinessReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialHillRatingCompliance_FinancialHillReportingId",
                table: "FinacialHillRatingCompliance",
                column: "FinancialHillReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialHillRatingFinancialControl_FinancialHillReportingId",
                table: "FinacialHillRatingFinancialControl",
                column: "FinancialHillReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialHillRatingInvestmentPortfolio_FinancialHillReportingId",
                table: "FinacialHillRatingInvestmentPortfolio",
                column: "FinancialHillReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialIMRatingCompliance_FinancialIMBusinessRatingId",
                table: "FinacialIMRatingCompliance",
                column: "FinancialIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialIMRatingFinancialControl_FinancialIMBusinessRatingId",
                table: "FinacialIMRatingFinancialControl",
                column: "FinancialIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialIMRatingTreasuryInvestment_FinancialIMBusinessRatingId",
                table: "FinacialIMRatingTreasuryInvestment",
                column: "FinancialIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialRatingBusinessCompliance_FinancialReportingBusinessratingARMHoldCoId",
                table: "FinacialRatingBusinessCompliance",
                column: "FinancialReportingBusinessratingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialRatingBusinessFinancialControl_FinancialReportingBusinessratingARMHoldCoId",
                table: "FinacialRatingBusinessFinancialControl",
                column: "FinancialReportingBusinessratingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialRatingBusinessTreasuryOperation_FinancialReportingBusinessratingARMHoldCoId",
                table: "FinacialRatingBusinessTreasuryOperation",
                column: "FinancialReportingBusinessratingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSecurityRating_FinancialSecurityReportingId",
                table: "FinacialSecurityRating",
                column: "FinancialSecurityReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSecurityRatingCompliance_FinancialSecurityReportingId",
                table: "FinacialSecurityRatingCompliance",
                column: "FinancialSecurityReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSecurityRatingFinancialAdvisory_FinancialSecurityReportingId",
                table: "FinacialSecurityRatingFinancialAdvisory",
                column: "FinancialSecurityReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSecurityRatingFinancialControl_FinancialSecurityReportingId",
                table: "FinacialSecurityRatingFinancialControl",
                column: "FinancialSecurityReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSecurityRatingSecurityOperation_FinancialSecurityReportingId",
                table: "FinacialSecurityRatingSecurityOperation",
                column: "FinancialSecurityReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRating_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRating",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingAcademy_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingAcademy",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingCorporatestrategy_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingCorporatestrategy",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingCTU_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingCTU",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingCustomerexperience_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingCustomerexperience",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingDigitalFinanceService_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingDigitalFinanceService",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingHCM_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingHCM",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingInformationSecurity_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingInformationSecurity",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingInternalControl_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingInternalControl",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingIT_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingIT",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingLegal_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingLegal",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingMCC_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingMCC",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingProcurementAndAdmin_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingProcurementAndAdmin",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingRiskManagement_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingRiskManagement",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialSharedServiceRatingTreasury_FinancialSharedServiceReportingId",
                table: "FinacialSharedServiceRatingTreasury",
                column: "FinancialSharedServiceReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialTAMRatingFinancialControl_FinancialBusinessARMTAMId",
                table: "FinacialTAMRatingFinancialControl",
                column: "FinancialBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialTAMRatingTreasuryOperation_FinancialBusinessARMTAMId",
                table: "FinacialTAMRatingTreasuryOperation",
                column: "FinancialBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialTrusteeRating_FinancialTrusteeReportingId",
                table: "FinacialTrusteeRating",
                column: "FinancialTrusteeReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialTrusteeRatingCompliance_FinancialTrusteeReportingId",
                table: "FinacialTrusteeRatingCompliance",
                column: "FinancialTrusteeReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinacialTrusteeRatingFinancialControl_FinancialTrusteeReportingId",
                table: "FinacialTrusteeRatingFinancialControl",
                column: "FinancialTrusteeReportingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_FinancialSharedServiceReporting_ARMSharedServiceRatingId",
                table: "FinancialSharedServiceReporting",
                column: "ARMSharedServiceRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationAgribusinessRating_OperationAgribusinessId",
                table: "OperationAgribusinessRating",
                column: "OperationAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationAgribusinessRatingFinancialControlAAFML_OperationAgribusinessId",
                table: "OperationAgribusinessRatingFinancialControlAAFML",
                column: "OperationAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationAgribusinessRatingFinancialControlRFl_OperationAgribusinessId",
                table: "OperationAgribusinessRatingFinancialControlRFl",
                column: "OperationAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationBusinessCompliance_OperationBusinessRatingARMHoldCoId",
                table: "OperationBusinessCompliance",
                column: "OperationBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationBusinessFinancialControl_OperationBusinessRatingARMHoldCoId",
                table: "OperationBusinessFinancialControl",
                column: "OperationBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationBusinessTAMRatingFinancialControl_OperationBusinessARMTAMId",
                table: "OperationBusinessTAMRatingFinancialControl",
                column: "OperationBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationBusinessTAMRatingTreasuryOperation_OperationBusinessARMTAMId",
                table: "OperationBusinessTAMRatingTreasuryOperation",
                column: "OperationBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationBusinessTreasuryOperation_OperationBusinessRatingARMHoldCoId",
                table: "OperationBusinessTreasuryOperation",
                column: "OperationBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationHillRatingCompliance_OperationBusinessRatingHillId",
                table: "OperationHillRatingCompliance",
                column: "OperationBusinessRatingHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationHillRatingFinancialControl_OperationBusinessRatingHillId",
                table: "OperationHillRatingFinancialControl",
                column: "OperationBusinessRatingHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationHillRatingInvestmentPortfolio_OperationBusinessRatingHillId",
                table: "OperationHillRatingInvestmentPortfolio",
                column: "OperationBusinessRatingHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationIMRatingCompliance_OperationIMBusinessRatingId",
                table: "OperationIMRatingCompliance",
                column: "OperationIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationIMRatingFinancialControl_OperationIMBusinessRatingId",
                table: "OperationIMRatingFinancialControl",
                column: "OperationIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationIMRatingTreasuryInvestment_OperationIMBusinessRatingId",
                table: "OperationIMRatingTreasuryInvestment",
                column: "OperationIMBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSecurityRating_OperationSecurityBusinessRatingId",
                table: "OperationSecurityRating",
                column: "OperationSecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSecurityRatingCompliance_OperationSecurityBusinessRatingId",
                table: "OperationSecurityRatingCompliance",
                column: "OperationSecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSecurityRatingFinancialAdvisory_OperationSecurityBusinessRatingId",
                table: "OperationSecurityRatingFinancialAdvisory",
                column: "OperationSecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSecurityRatingFinancialControl_OperationSecurityBusinessRatingId",
                table: "OperationSecurityRatingFinancialControl",
                column: "OperationSecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSecurityRatingSecurityOperation_OperationSecurityBusinessRatingId",
                table: "OperationSecurityRatingSecurityOperation",
                column: "OperationSecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceRating_OperationSharedServiceId",
                table: "OperationSharedServiceRating",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceRatingCTU_OperationSharedServiceId",
                table: "OperationSharedServiceRatingCTU",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationSharedServiceRatingDigitalFinanceService_OperationSharedServiceId",
                table: "OperationSharedServiceRatingDigitalFinanceService",
                column: "OperationSharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationTrusteeRating_OperationTrusteeId",
                table: "OperationTrusteeRating",
                column: "OperationTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationTrusteeRatingCompliance_OperationTrusteeId",
                table: "OperationTrusteeRatingCompliance",
                column: "OperationTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_OperationTrusteeRatingFinancialControl_OperationTrusteeId",
                table: "OperationTrusteeRatingFinancialControl",
                column: "OperationTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyAgribusinessRating_StrategyAgribusinessId",
                table: "StrategyAgribusinessRating",
                column: "StrategyAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyAgribusinessRatingFinancialControlAAFML_StrategyAgribusinessId",
                table: "StrategyAgribusinessRatingFinancialControlAAFML",
                column: "StrategyAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyAgribusinessRatingFinancialControlRFl_StrategyAgribusinessId",
                table: "StrategyAgribusinessRatingFinancialControlRFl",
                column: "StrategyAgribusinessId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyBusinessCompliance_StrategyBusinessRatingARMHoldCoId",
                table: "StrategyBusinessCompliance",
                column: "StrategyBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyBusinessFinancialControl_StrategyBusinessRatingARMHoldCoId",
                table: "StrategyBusinessFinancialControl",
                column: "StrategyBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyBusinessTAMRatingFinancialControl_StrategyBusinessARMTAMId",
                table: "StrategyBusinessTAMRatingFinancialControl",
                column: "StrategyBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyBusinessTAMRatingTreasuryOperation_StrategyBusinessARMTAMId",
                table: "StrategyBusinessTAMRatingTreasuryOperation",
                column: "StrategyBusinessARMTAMId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyBusinessTreasuryOperation_StrategyBusinessRatingARMHoldCoId",
                table: "StrategyBusinessTreasuryOperation",
                column: "StrategyBusinessRatingARMHoldCoId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyHillRatingCompliance_StrategyBusinessRatingARMHillId",
                table: "StrategyHillRatingCompliance",
                column: "StrategyBusinessRatingARMHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyHillRatingFinancialControl_StrategyBusinessRatingARMHillId",
                table: "StrategyHillRatingFinancialControl",
                column: "StrategyBusinessRatingARMHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyHillRatingInvestmentPortfolio_StrategyBusinessRatingARMHillId",
                table: "StrategyHillRatingInvestmentPortfolio",
                column: "StrategyBusinessRatingARMHillId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyIMRatingCompliance_StrategyImBusinessRatingId",
                table: "StrategyIMRatingCompliance",
                column: "StrategyImBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyIMRatingFinancialControl_StrategyImBusinessRatingId",
                table: "StrategyIMRatingFinancialControl",
                column: "StrategyImBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyIMRatingTreasuryInvestment_StrategyImBusinessRatingId",
                table: "StrategyIMRatingTreasuryInvestment",
                column: "StrategyImBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySecurityRating_StrategySecurityBusinessRatingId",
                table: "StrategySecurityRating",
                column: "StrategySecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySecurityRatingCompliance_StrategySecurityBusinessRatingId",
                table: "StrategySecurityRatingCompliance",
                column: "StrategySecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySecurityRatingFinancialAdvisory_StrategySecurityBusinessRatingId",
                table: "StrategySecurityRatingFinancialAdvisory",
                column: "StrategySecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySecurityRatingFinancialControl_StrategySecurityBusinessRatingId",
                table: "StrategySecurityRatingFinancialControl",
                column: "StrategySecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySecurityRatingSecurityOperation_StrategySecurityBusinessRatingId",
                table: "StrategySecurityRatingSecurityOperation",
                column: "StrategySecurityBusinessRatingId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceRating_StrategySharedServiceId",
                table: "StrategySharedServiceRating",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceRatingCTU_StrategySharedServiceId",
                table: "StrategySharedServiceRatingCTU",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategySharedServiceRatingDigitalFinanceService_StrategySharedServiceId",
                table: "StrategySharedServiceRatingDigitalFinanceService",
                column: "StrategySharedServiceId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyTrusteeRating_StrategyBusinessRatingTrusteeId",
                table: "StrategyTrusteeRating",
                column: "StrategyBusinessRatingTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyTrusteeRatingCompliance_StrategyBusinessRatingTrusteeId",
                table: "StrategyTrusteeRatingCompliance",
                column: "StrategyBusinessRatingTrusteeId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_StrategyTrusteeRatingFinancialControl_StrategyBusinessRatingTrusteeId",
                table: "StrategyTrusteeRatingFinancialControl",
                column: "StrategyBusinessRatingTrusteeId",
                unique: true);
        }
    }
}
