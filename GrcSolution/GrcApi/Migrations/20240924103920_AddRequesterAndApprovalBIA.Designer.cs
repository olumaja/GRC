// <auto-generated />
using System;
using Arm.GrcApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrcApi.Migrations
{
    [DbContext(typeof(GrcToolDbContext))]
    [Migration("20240924103920_AddRequesterAndApprovalBIA")]
    partial class AddRequesterAndApprovalBIA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CTO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfManagerOrMD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RCNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceBusines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8fda6fb-0e8a-4621-bae1-16f26d40f345"),
                            BusinessName = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(4854),
                            DateUpdated = new DateTime(2024, 9, 24, 11, 39, 18, 950, DateTimeKind.Local).AddTicks(4840),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c767a782-a495-4b96-988c-22e8e16c33d9"),
                            BusinessName = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(4858),
                            DateUpdated = new DateTime(2024, 9, 24, 11, 39, 18, 950, DateTimeKind.Local).AddTicks(4857),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("70c25108-c4c7-4221-b444-2a98bddbba7b"),
                            BusinessName = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(4860),
                            DateUpdated = new DateTime(2024, 9, 24, 11, 39, 18, 950, DateTimeKind.Local).AddTicks(4859),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("803dcb0e-6a10-4e3b-9c73-35f1c7c4a265"),
                            BusinessName = "ARM Capital Partner",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(4871),
                            DateUpdated = new DateTime(2024, 9, 24, 11, 39, 18, 950, DateTimeKind.Local).AddTicks(4871),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessId");

                    b.HasIndex("ComplianceDepartmentId");

                    b.ToTable("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmToSubmit")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameOfReport");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ComplianceCalendar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceDepartment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9443293c-a893-41de-8317-264444c8bbc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8277),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("4c9b0a56-52dc-4b33-af2b-5c999308a0ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8280),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("4f52f84c-20cf-459e-8c9c-48d7072f30c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8281),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("da0bcbe0-9dad-4f4a-822f-3c0f9005cae8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8282),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("8f9dfe1b-0ca1-4722-b2a1-09609ee3bb0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8283),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2f10b305-b9da-4801-9188-133c042b276a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8284),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("d969cbf1-7f32-40bf-9e68-74f71a2d23d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8285),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("ebde322f-5df1-4af1-aeb8-870df4c58b3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8286),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("9686c1aa-690e-4efb-a6f0-e48c838ec238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8287),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("766dfecd-8db0-4cc4-981e-43ae1f9f9265"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8288),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("c08f04f7-5e1c-42f9-8247-cb902cd62f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8289),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("469e97db-72af-49ed-84dd-c11d425263cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8295),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("a8e77619-5129-4a88-b234-386f64840215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8297),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("30c73a8b-1b74-4732-802d-e97b7ea2a404"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8298),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("037b9ff2-504e-404f-b329-8dffcc2c5e94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8299),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("113da9be-b174-48a0-98cf-7573f8f344f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8300),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("dc1ab4ae-db59-420b-aade-49c9c0225b21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8301),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("86b47b0a-c3e1-45b6-97ef-5dead8955745"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8302),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("4108d577-9409-498b-9822-bbdd9f9b1e6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8302),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("581ed77e-2e05-42fd-8b92-d001a96909a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8304),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("732911ea-38e8-4104-a9c9-8101c7ec2748"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8305),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("7cc52d32-76d1-4537-b418-7418d09f28f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8306),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("0b760d1e-9eb3-4758-93d8-beade293f5d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8307),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("48cc7b70-9efa-4125-b448-6a957d2041f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8308),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("51c62493-240a-4122-8ac8-ee1fe16e3ee2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8309),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8acebf76-21e6-4e74-9f8c-b0d1db9f3753"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8310),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("aa8efd00-7cc1-4fa6-b9e0-b24e06e8a0a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8310),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("f2b1a942-b22c-4c66-9929-513ba1867053"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8311),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("fad581c6-2f33-46de-b1c4-25d3873f23f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8312),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("a50412b5-65ff-4002-8da4-a45c5bf4bf2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8313),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("3d7857e6-8875-477f-a962-247326e2c92d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8314),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("dfc65214-67c8-47eb-aeeb-3146ae489e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8315),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("eefa7c57-98b1-44f8-aba7-549399321114"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8316),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4fae7da7-6ddd-48d0-9400-1126815fb4d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8316),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("1e534470-a920-457d-b5d3-ca8882de81ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8317),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1c2370db-3244-4bf2-9b56-57d98bb3b5e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8318),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("1b5cbd9d-3a11-4ae2-8350-f208d37bcbb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8319),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("413c704d-af7b-4b17-bd98-9eea7b16ff03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("9e94023e-ce76-490c-8f1f-e46f4117b1a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8321),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d071e04-9a34-4c6b-aaa0-ef9f11470990"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8321),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("8ef60bcb-a795-4141-bab6-38e5863e14a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8322),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("c3de97f2-ef7c-40ad-94ef-f88738c71c07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8323),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("1ac36092-da7b-4b32-bdac-a97fc23164cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8324),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4e7f8112-d6bf-4619-b41e-236fba1eb541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8325),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("93427ce2-6640-44ed-a078-320ac73e4dc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8325),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("9ae1d479-e587-4d46-95ba-b8e72851fc75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8326),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("199f9de0-d08b-47eb-a96a-5b2526eb31ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8327),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("022aa7d5-7c0a-4fb3-9c8d-ff2278b289fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8328),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("3ddc0333-f27a-4ced-9599-6ef1ee92c3c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8329),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("affceba9-38dc-4e5f-afb0-8b2d9edf5efa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8330),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("97c9b380-ad8f-4f41-944b-dc37b82fe85f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8330),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("5e885e75-f8b3-4b3a-9017-b2e7a1122d83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8331),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2fd39529-b005-4293-8b8f-12ed3ff87807"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8332),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("7165d5c6-dc08-4471-99b9-4c60dd76ec8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8333),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("a66bea4e-f461-476f-9af7-61a91c69af99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8334),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("55772580-4c93-435d-8c31-685b80b9bd3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8334),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("dd059d83-0706-425f-aa33-c8d32294f7b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8335),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("58662c2e-5a9c-43f8-8d42-fc2e93a50eb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8336),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("040acaf6-ccdc-4302-bae9-95bbe7175fa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8337),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("f155216a-9fc1-4d29-ac25-060c116d0e1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8338),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("9d10fb74-ed81-42ec-a109-072ca0ddfde3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8338),
                            IsDeleted = false,
                            Name = "Securities Operations "
                        },
                        new
                        {
                            Id = new Guid("f0748176-df02-49af-8565-520f9c59c9a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8339),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("5203f4dc-ab02-4dc8-85b1-b293ff9ffcbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8340),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("82355662-28d3-45c9-bbf4-51be40c368d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8341),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("80921fb2-5762-4149-98a1-7a990efb2428"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8342),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("da9c707e-ff33-455b-973e-ff2928d41aca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8343),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("ca9277c7-59d1-4f5f-adbf-bd036440e602"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8344),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("e98b0111-935c-41ba-bfed-00ae9ce3814f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8345),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("193306a0-16ce-4c4b-99a1-8765a8032cac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8345),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("f8360ffe-e1be-4d14-99a8-db3a2e840f41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8346),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("9cb7a2c2-4d91-47c1-9c6f-17540afa0c44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(8347),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegulatorTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulator");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b7b8e7-ebfb-4e30-a35c-ef0cc4878188"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7258),
                            IsDeleted = false,
                            RegulatorTitle = "LABOUR ACT"
                        },
                        new
                        {
                            Id = new Guid("3454dc14-648d-4c68-8279-0b82585618ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7262),
                            IsDeleted = false,
                            RegulatorTitle = "PENSION REFORM ACT 2004"
                        },
                        new
                        {
                            Id = new Guid("885c060b-eea9-4d86-b163-f28c60e66736"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7264),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES AND ALLIED MATTERS ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("a28cac7e-cbe2-4950-83ad-cbadc060c86c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7265),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHOLDING TAX) REGULATIONS 1977"
                        },
                        new
                        {
                            Id = new Guid("c83f0df5-a41b-4296-a185-14b423473122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7274),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("92508225-4b55-4fd1-b32c-e069d107a554"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7275),
                            IsDeleted = false,
                            RegulatorTitle = "EMPLOYEES COMPENSATION ACT"
                        },
                        new
                        {
                            Id = new Guid("1ad9ae19-60ce-4712-84dc-fe55e1b88c3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7276),
                            IsDeleted = false,
                            RegulatorTitle = "FINANCIAL REPORTINNG COUNCIL OF NIGERIA ACT 2011"
                        },
                        new
                        {
                            Id = new Guid("f3eab0ba-f3fd-4e89-8716-ab23699e1159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7278),
                            IsDeleted = false,
                            RegulatorTitle = "INVESTMENT & SECURITIES ACT 2007"
                        },
                        new
                        {
                            Id = new Guid("9171c80a-d862-4254-b6e7-a488124a2979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7279),
                            IsDeleted = false,
                            RegulatorTitle = "NATIONAL YOUTH SERVICE CORPS ACT"
                        },
                        new
                        {
                            Id = new Guid("1b244041-2bfb-4158-8251-6599f66d3302"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7280),
                            IsDeleted = false,
                            RegulatorTitle = "PAY AS YOU EARN (PAYE)"
                        },
                        new
                        {
                            Id = new Guid("c5dae39f-b49d-4a24-86f4-e83544fc5e47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7289),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHHOLDING TAX REGULATION) 1997"
                        },
                        new
                        {
                            Id = new Guid("57c7047e-c1c5-4323-9b26-72d8560499f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7290),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("2163d6c4-f924-4698-839f-654ec59e7284"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7293),
                            IsDeleted = false,
                            RegulatorTitle = "VALUE ADDED TAX LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("bf3b070f-2883-40ea-b573-cecabbeb77f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7294),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON MINIMUM REQUIREMENTS FOR OPENING BRANCHES"
                        },
                        new
                        {
                            Id = new Guid("43cf07e6-8956-4b21-9b13-4d931e6a77b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7296),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON PAYMENT OF ACCRUED PRE-PENSION REFORM BENEFITS MAY 2011"
                        },
                        new
                        {
                            Id = new Guid("59138bb0-e094-48eb-b5ec-4cd2aa3f9db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7297),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON REQUIREMENTS FOR PFAs WITH FUNDS UNDER MANAGEMENT OF N100 BILLION & ABOVE AND NEW REQUIREMENTS FOR APPOINTMENTS TO BOARD AND TOP MANAGEMENT POSITIONS OF ALL PFAs"
                        },
                        new
                        {
                            Id = new Guid("10de3a4e-49f8-4e67-a513-6219d087e747"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7298),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON SERVICE DELIVERY BY PENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("189a4456-930e-4a59-b721-b698d448775c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7299),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON STANDARDIZATION OF ANNUAL TOTAL EMOLUMENTS FOR THE COMPUTATION OF RETIREMENT BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("191ca6ae-a827-4b40-8798-af53ff64e14f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7300),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON THE IMPORTANCE OF TRAINING FOR STAFF OF PENSION FUND OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("17488d81-13f9-4cf1-bfb9-931191142061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7301),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF CORPORATE GOVERNANCE"
                        },
                        new
                        {
                            Id = new Guid("bf3c448d-5602-4aa9-b94e-3e36cdcb337b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7304),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF ETHICS & BUSINESS PRACTICES"
                        },
                        new
                        {
                            Id = new Guid("12418cf1-0592-49ac-96b2-eb27bf63ca96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7305),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINE FOR APPOINTMENT TO BOARD AND TOP MANAGEMENT POSITIONS IN PFAs AND PFCs"
                        },
                        new
                        {
                            Id = new Guid("3e58ddd8-da9b-47b5-800c-f97a606c438f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7309),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR CROSS BOARDER ARRANGEMENTS UNDER PENSION REFORM ACT"
                        },
                        new
                        {
                            Id = new Guid("9b6f45a5-744b-43eb-aaf5-5dcc65974fa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7311),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR LIFE INSURANCE POLICY FOR EMPLOYEES"
                        },
                        new
                        {
                            Id = new Guid("f3e71ebf-7fcf-4af3-90ed-332de74e9601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7312),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR RISK MANAGEMENT FRAMEWORK FOR LICENSED OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("596f7f2e-0e82-46ff-b11e-7b8a27e03983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7314),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE ADMINISTRATION OF STATE FUNDS DEDUCTED AT SOURCE UNDER THE CONTRIBUTORY PENSION SCHEME"
                        },
                        new
                        {
                            Id = new Guid("ed229bfb-b639-401f-95f8-a267adceefff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7315),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND ADMINISTRATORS AND CUSTODIANS FOR EXISTING PENSION SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("2a93b173-23a6-4530-b447-98b1ce499bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7318),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND CUSTODIANS FOR STATE GOVERNMENT AND RETIREE FUNDS"
                        },
                        new
                        {
                            Id = new Guid("91525b64-1cb5-42e9-82eb-034ed057d7e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7320),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION FUND CUSTODIANS"
                        },
                        new
                        {
                            Id = new Guid("30c07d3f-8f36-41de-87e9-bc1071d434d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7321),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION TRANSITIONAL ARRANGEMENT DEPARTMENTS"
                        },
                        new
                        {
                            Id = new Guid("9deda427-c40d-4e08-9cba-227444dedbde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7323),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PFAS"
                        },
                        new
                        {
                            Id = new Guid("a55cdcc2-aef2-40bb-97ed-97ed0cd31909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7324),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE PUBLICATION OF RATES OF RETURN ON RSA FUNDS BYPENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("27688539-e496-4a50-89a8-8b842aeacfd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7325),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE TRANSFER OF NSITF CONTRIBUTIONS INTO EMPLOYEES RETIREMENT SAVINGS ACCOUNT"
                        },
                        new
                        {
                            Id = new Guid("6abca7e0-03cf-40f8-831e-1f3503322e42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7326),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR TRANSITIONAL CONTRIBUTIONS FUND"
                        },
                        new
                        {
                            Id = new Guid("21c301ca-73a5-4def-800b-27987416b42c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7327),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON DIRECT REAL ESTATE INVESTMENTS BY CLOSED PENSION FUND ADMINISTRATORS AND APPROVED EXISTING SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("0902e170-5fc5-49ca-9e31-9da612ed2547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7328),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON FUND ACCOUNTING"
                        },
                        new
                        {
                            Id = new Guid("63d58047-074e-439a-b244-b50a2d216c88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7331),
                            IsDeleted = false,
                            RegulatorTitle = "INCLUSION OF GROUP LIFE INSURANCE POLICY FOR EMPLOYEES: FURTHER STEPS TO IMPROVE COMPLIANCE"
                        },
                        new
                        {
                            Id = new Guid("3d03d9e4-4026-41f4-98e0-ee15d5d37907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7332),
                            IsDeleted = false,
                            RegulatorTitle = "MINIMUM INFORMATION TO BE POSTED ON A PFAs WEBSITE"
                        },
                        new
                        {
                            Id = new Guid("5c923578-67d4-4e86-ae34-a28036056a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7334),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATION ON INVESTMENT OF PENSION FUND ASSETS"
                        },
                        new
                        {
                            Id = new Guid("66ad68b7-2f5e-4be4-9f7c-e30695022ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7335),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR AUDITING PENSION FUNDS"
                        },
                        new
                        {
                            Id = new Guid("e7563613-5933-4c0a-bded-728e3e2b9835"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7336),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR THE ADMINISTRATION OF RETIREMENT AND TERMINAL BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("53e6317c-f579-4ca4-a6dd-77dce9473d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7337),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS ON COMPLIANCE OFFICERS"
                        },
                        new
                        {
                            Id = new Guid("594b2f82-13d1-4a70-b45a-47b85daffb8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7338),
                            IsDeleted = false,
                            RegulatorTitle = "SECURITIES AND EXCHANGE COMMISSION RULES AND REGULATIONS 2013"
                        },
                        new
                        {
                            Id = new Guid("d72c7077-df45-4f41-95b2-b1f48a25de30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 951, DateTimeKind.Utc).AddTicks(7340),
                            IsDeleted = false,
                            RegulatorTitle = "WHISTLE BLOWING GUIDELINES FOR PENSIONS"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulatoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessEntity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MeansOfPaymentAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentAttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulatoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRegulatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deadline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesOrFillingOrReturn")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Penalty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Responsibilities")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceRegulatorId");

                    b.ToTable("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ComplianceRuleId");

                    b.ToTable("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.ComplianceStatutoryPayment.ComplianceStatutoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessEntity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CashRemittanceStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayingUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentFrequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatutoryPayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubmissionToStatutoryBody")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceStatutoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFL")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHILL")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHILLEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasurySales")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<int>("ARMRegisterar")
                        .HasColumnType("int");

                    b.Property<int>("BDOrIMRetail")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("Fundaccount")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSetlement")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperations")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvestmentBanking")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCustomerExperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InfoSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTAM")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditScoped")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsAuditAnnouncementMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Salutation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkApproach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditAnnouncementMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDesignOrEffectively")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOrRecurring")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AuditFindingAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditPlanningMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImplementationPlan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriorAuditObservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskIdentified")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeAndControlTesting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditPlanningMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditProgramCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FindingStatus")
                        .HasColumnType("int");

                    b.Property<string>("InformationRequired")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkPaperInitiated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReviewProcedure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RiskDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("WorkpaperStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessRFL");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldingCompany");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMIMUnit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteePrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEMCRated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagementRated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverAllComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("CitationAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId");

                    b.ToTable("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessRiskRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFindingRaised")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DetailedFindings")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Evidence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Level2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ManagmentResponseAsAtTimeOfEngagement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OPRStatus")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportingQuater")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("RevisedDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusLevel")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkStream")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("ConsolidatedAuditFindingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityToAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidatedAuditFindingId");

                    b.ToTable("ConsolidatedAuditFindingActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinancialService")
                        .HasColumnType("int");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmcRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("EMCConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditScope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BriefBackgroundObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CommunicationProtocol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("KeyRisk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Mandate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibilityOfInternalAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ResponsibleExecutive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DurationAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DurationTiming")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterAuditExecutionDuration");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDistributionListBusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialAgribusinessReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("FinancialHillReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialReportingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("FinancialSecurityReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("FinancialTrusteeReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("InformationRequest")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool?>("InformationRequirementCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PreviousRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("InternalAuditRatingReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AssessmentOfDigitalInitiative")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutiveSummary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("GoodPractiseInclude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OtherImprovementArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OverAllManagementComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Scope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SignedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFL")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDOrIMRetail")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvestmentBanking")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementConcernRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionPointToResolve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ManagementResponseAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHoldingCompanyRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHoldingCompanyRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ObservationListAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessArmHolco");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMUnitRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("OperationSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("OperationTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("RatedBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessArmHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyImBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("StrategySharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFl")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAgribusinessAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasurySale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinancialService")
                        .HasColumnType("int");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDPWMIAMIMRetail")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTAM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastBusinessARMTAMAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastHillAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvestmentBanking")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSecurityAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("Corporatestrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customerexperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmind")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSharedServiceAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastTrusteeAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductOwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductRiskAssementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductRiskCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductRiskAssementId");

                    b.ToTable("ProductAssessRisk", (string)null);
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuestionOrRecomendation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReseasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductRiskAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BusinessEntity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7413),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7427),
                            IsDeleted = false,
                            Name = "ARMIM"
                        },
                        new
                        {
                            Id = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7429),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7430),
                            IsDeleted = false,
                            Name = "ARM Trustees"
                        },
                        new
                        {
                            Id = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7432),
                            IsDeleted = false,
                            Name = "ARM Harith Infracstrure Investement Limited"
                        },
                        new
                        {
                            Id = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7433),
                            IsDeleted = false,
                            Name = "Shared Services"
                        },
                        new
                        {
                            Id = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7435),
                            IsDeleted = false,
                            Name = "ARM AgriBusiness"
                        },
                        new
                        {
                            Id = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7436),
                            IsDeleted = false,
                            Name = "Mixta Nigeria"
                        },
                        new
                        {
                            Id = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 936, DateTimeKind.Utc).AddTicks(7438),
                            IsDeleted = false,
                            Name = "ARM Digital Financial Services"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlternativeWorkarounds")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyNonElectronicVitalRecords")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationsUsedToRunProcess")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessProcessDescriptionSummary")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerExperience")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinancialImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyVendors")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAllowableOutage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MinimumBusinessContinuityObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherProcessesOrPeople")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryRecoverStrategyAndSolution")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecoveryPointObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecoveryTimeObjective")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegulatoryOrLegal")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteWorking")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reputation")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPartyImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BIAUnitProcessDetails", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BIAUnitProcessDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BIAUnitProcessDetailsId");

                    b.HasIndex("UnitId");

                    b.ToTable("BIAUnitProcessDetailsBusinessUnitToRunProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("BusinessImpactAnalysis", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessImpactAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisId");

                    b.HasIndex("UnitId");

                    b.ToTable("BusinessImpactAnalysisUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessImpactAnalysisUnitJson")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BusinessImpactAnalysisUnitLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessEntityId", "Name")
                        .IsUnique();

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4703),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4708),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4710),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4712),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4721),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4723),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4725),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4733),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4735),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4737),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4755),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4762),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4764),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4766),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4767),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4770),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4772),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4775),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4776),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4778),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4779),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4781),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4783),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4786),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4787),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4789),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4791),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4793),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4794),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4796),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4797),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4801),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4802),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4804),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4806),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4808),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4809),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4811),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4813),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4816),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4818),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4819),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4821),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4823),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4824),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4826),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4828),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4835),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4837),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4839),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4841),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4842),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4844),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4846),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4848),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4850),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4852),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4854),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4855),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4857),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4859),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4861),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4862),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4865),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4867),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4869),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4870),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4872),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4874),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4875),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4877),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4880),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4882),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4884),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4885),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4887),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4888),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4890),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4892),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4895),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4896),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4898),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4900),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4901),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4903),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4905),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4906),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4909),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4911),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4913),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4920),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4921),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4923),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4925),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4926),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4929),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4931),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4932),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4934),
                            IsDeleted = false,
                            Name = "ARM Agricbusiness Fund Manager Ltd"
                        },
                        new
                        {
                            Id = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4936),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4937),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4939),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4941),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4944),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4945),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4947),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4949),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4950),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4952),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4954),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4955),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4958),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4960),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4962),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4964),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4966),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4968),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4969),
                            IsDeleted = false,
                            Name = "Design & Construction"
                        },
                        new
                        {
                            Id = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4971),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4974),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4976),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4978),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4979),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4981),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4983),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4984),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4986),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4989),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4991),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4992),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4994),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(4996),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5001),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5003),
                            IsDeleted = false,
                            Name = "Corporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5004),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5007),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5009),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5011),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5012),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5014),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5016),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5017),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5019),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5022),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5023),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5025),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5027),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5029),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5030),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5032),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5033),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5037),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5038),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5040),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5041),
                            IsDeleted = false,
                            Name = "Legal and Compliance"
                        },
                        new
                        {
                            Id = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 939, DateTimeKind.Utc).AddTicks(5043),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("RiskEventType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5703),
                            IsDeleted = false,
                            Name = "Internal Fraud"
                        },
                        new
                        {
                            Id = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5707),
                            IsDeleted = false,
                            Name = "External Fraud"
                        },
                        new
                        {
                            Id = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5708),
                            IsDeleted = false,
                            Name = "Employment Practices and Workplace Safety"
                        },
                        new
                        {
                            Id = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5710),
                            IsDeleted = false,
                            Name = "Clients, Products and Business Practices"
                        },
                        new
                        {
                            Id = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5711),
                            IsDeleted = false,
                            Name = "Disasters and Other Events"
                        },
                        new
                        {
                            Id = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5715),
                            IsDeleted = false,
                            Name = "Business Disruption and System Failures"
                        },
                        new
                        {
                            Id = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(5717),
                            IsDeleted = false,
                            Name = "Execution, Delivery and Process Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("NAME");

                    b.Property<Guid>("RiskEventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeId");

                    b.ToTable("RiskEventTypeCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3930),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3935),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3938),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("3429aad4-e734-44ac-919c-af9758979aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3941),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3947),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3949),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3951),
                            IsDeleted = false,
                            Name = "Safe Environment",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3953),
                            IsDeleted = false,
                            Name = "Diversity and discrimination",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3955),
                            IsDeleted = false,
                            Name = "Employee relations",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3957),
                            IsDeleted = false,
                            Name = "Suitability, disclosure and fiduciary",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3958),
                            IsDeleted = false,
                            Name = "Improper business or market practices",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3960),
                            IsDeleted = false,
                            Name = "Product flaws",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3963),
                            IsDeleted = false,
                            Name = "Selection, sponsorship and exposure",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3970),
                            IsDeleted = false,
                            Name = "Consulting/Advisory Activities",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3979),
                            IsDeleted = false,
                            Name = "Mismanagement of classified company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("5e969527-3694-477a-8f17-40e53039966c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3981),
                            IsDeleted = false,
                            Name = "Misrepresentation of company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("635ca6d7-708f-4349-a483-ecf00679c489"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3983),
                            IsDeleted = false,
                            Name = "Poor Quality of Media Production",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3984),
                            IsDeleted = false,
                            Name = "Natural causes",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("611b88d4-5289-4da1-a78d-420f236257dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3986),
                            IsDeleted = false,
                            Name = "Accidents and public safety",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3988),
                            IsDeleted = false,
                            Name = "Retroactive effects and improper activities by third parties",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3992),
                            IsDeleted = false,
                            Name = "Human Acts",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3993),
                            IsDeleted = false,
                            Name = "Disputes with Regulatory Authorities or other Governmental Bodies",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3995),
                            IsDeleted = false,
                            Name = "Interruption in services provided by external providers",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3997),
                            IsDeleted = false,
                            Name = "Inadequacy Inefficiency Malfunction or Block of Technology Systems",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(3998),
                            IsDeleted = false,
                            Name = "Transaction capture, execution and maintenance",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(4000),
                            IsDeleted = false,
                            Name = "Monitoring and reporting",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("81f7e998-9b34-4092-8590-a551647de2c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(4002),
                            IsDeleted = false,
                            Name = "Customer intake and documentation",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(4004),
                            IsDeleted = false,
                            Name = "Customer account management",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(4007),
                            IsDeleted = false,
                            Name = "Non-client counterparty breaches",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(4009),
                            IsDeleted = false,
                            Name = "Vendors and suppliers",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(4011),
                            IsDeleted = false,
                            Name = "Other Process breakdown",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("RiskEventTypeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeCategoryId");

                    b.ToTable("RiskEventTypeSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a3d1716-716e-4a56-b660-3a22a8c2c21a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1634),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("265be792-fa72-416e-9000-1803fbf3402c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1638),
                            IsDeleted = false,
                            Name = "Theft",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("05a32a94-71a6-4290-93c9-dbae85cba9c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1639),
                            IsDeleted = false,
                            Name = "Cash management shortages",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("2c875ff4-deeb-4075-9411-576cec0cee81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1641),
                            IsDeleted = false,
                            Name = "Extortion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("970a3d69-9c70-423c-b6eb-795c0249bd20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1642),
                            IsDeleted = false,
                            Name = "Embezzlement",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("7ad9a889-75d4-4e9c-89aa-8ebe154e41c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1644),
                            IsDeleted = false,
                            Name = "Forgery",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("a6766046-f0d9-43a2-9cc1-ff7d2a349ede"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1645),
                            IsDeleted = false,
                            Name = "Cash suppression",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("94ef4321-22b6-4e2e-a76a-ebf0ab45d7ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1646),
                            IsDeleted = false,
                            Name = "Cheque conversion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("ae3f7285-ca96-4ccf-b895-aa319a02a0f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1649),
                            IsDeleted = false,
                            Name = "Manipulation of source documents",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("52befbec-9be1-4bbf-9155-fd6162950275"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1650),
                            IsDeleted = false,
                            Name = "Manipulation of customer accounts",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("0659e234-0411-4c74-8d06-743b561bc1af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1652),
                            IsDeleted = false,
                            Name = "Teaming",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("e8838437-18a5-440a-958d-1334b8bbb415"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1653),
                            IsDeleted = false,
                            Name = "Illegal sales of securities from Clients portfolio",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("8ab6c9f6-b930-40d7-85ee-9d888b6ad13d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1654),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("81a0f86f-ef2a-4077-8fcc-27ba0e998f22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1655),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("1cf140ab-ab1e-4795-9e3d-216df15f4e32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1657),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("f76ad70b-ce65-420a-9f53-6fd160530a3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1664),
                            IsDeleted = false,
                            Name = "Misappropriation of company assets",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("5ae43f87-9d17-4cba-b2e6-8696da7802ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1667),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("6ad093a3-c1b7-4229-b49f-06ce6a2d27d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1668),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("15573e10-03e7-4664-b207-49f60b1f785c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1669),
                            IsDeleted = false,
                            Name = "Intentional mispricing of products",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("51c68307-e95d-4c97-b406-e3c6829dff7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1670),
                            IsDeleted = false,
                            Name = "Destruction of source documents",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("03753c55-c24b-4605-a496-5268a8bec489"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1672),
                            IsDeleted = false,
                            Name = "Unauthorised income waivers",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("ce324d7b-d04d-4b89-a6db-1818ca3c7f33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1673),
                            IsDeleted = false,
                            Name = "Granting unauthorised credit",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("7e7cec55-d21f-4340-93c2-93260fa531b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1674),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("a2b265bf-2d83-41af-961a-f6736e263c52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1675),
                            IsDeleted = false,
                            Name = "Cash theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("67ff9545-8528-41cf-ae5d-09796c86b9c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1678),
                            IsDeleted = false,
                            Name = "Pool car theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("e6f8add2-a59d-4747-ab51-0990110f0ae3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1679),
                            IsDeleted = false,
                            Name = "Cheque forgery",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("1c2a2e61-e9e9-4973-a36b-b941cdb06240"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1680),
                            IsDeleted = false,
                            Name = "Cheque fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("26d25387-a367-4566-a8f7-505fb3a2350f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1681),
                            IsDeleted = false,
                            Name = "Cheque kiting",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("2432bd21-95f5-4dba-903a-561c6b17605c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1683),
                            IsDeleted = false,
                            Name = "Fake currency fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("d9dd58f6-a1b7-4a0e-8380-dc43e05dc531"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1684),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("d44ee998-6076-4242-b1d9-9764e8b9d94a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1685),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("0f8f52c7-b51d-4010-a398-e9ad3e603be4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1686),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("bdf66080-64b8-4b7d-96ba-03de6aa04321"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1689),
                            IsDeleted = false,
                            Name = "Account take over / impersonation",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("c70e18c4-f504-460f-8c67-f891ae26c8b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1690),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("9bdddc84-3b11-4df9-8094-54935d2b35ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1691),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("a693c3b1-c893-4e65-8e99-618cbbde6b08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1693),
                            IsDeleted = false,
                            Name = "Employee health and safety violations",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("09117c44-d4b4-4126-865d-aead68ae151d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1694),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("73975804-e5b7-4736-8c49-5b5ebe2e3ed4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1695),
                            IsDeleted = false,
                            Name = "Discrimination on account of religion, nationality, race",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("cc490d86-7b4e-4b4d-b5f5-37188f4f0491"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1696),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("04cd1247-af02-4357-95de-ad2e2f39a0d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1698),
                            IsDeleted = false,
                            Name = "Employee disputes and investigations",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("37be42c8-1780-4911-9dcf-8b0bec524bad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1700),
                            IsDeleted = false,
                            Name = "Mistakes in the administration of employee compensation, benefits, or termination",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("6807aec3-b656-4ae6-8dd5-763b6053b12a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1702),
                            IsDeleted = false,
                            Name = "Organised labour activities",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("fabd3a9c-28b6-4532-af4e-798364cc1c92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1703),
                            IsDeleted = false,
                            Name = "Fighting between staff",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("b6c6f010-f4b0-4b38-a213-d5729d6449bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1704),
                            IsDeleted = false,
                            Name = "Fiduciary breaches and guideline violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("e0dca6ac-a0c0-48c5-b3e0-5f31c5f8525e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1705),
                            IsDeleted = false,
                            Name = "Customer suitability violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("39d8174c-6bd9-4714-9025-33f429a495ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1707),
                            IsDeleted = false,
                            Name = "Disclosure / misuse of confidential client data",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("c5ead2a0-2613-4dd4-8533-52a99a13aff0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1708),
                            IsDeleted = false,
                            Name = "Breach of regulatory guidelines on foreign exchange transactions / suspicious transactions",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("130fafde-fc06-4fd7-a18e-e9aa4e469b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1709),
                            IsDeleted = false,
                            Name = "Aggressive selling",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("44d430de-6e0d-4f0a-bf27-0913ce099fc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1712),
                            IsDeleted = false,
                            Name = "Account churning",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("a1193445-a82d-4cd9-9de6-1de29d7ad21e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1713),
                            IsDeleted = false,
                            Name = "Unlicensed activities",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("b33d13a6-8af7-4317-9fdf-4f6e30cd01bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1714),
                            IsDeleted = false,
                            Name = "Money laundering",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("7d2c6bc8-d898-474b-8ee2-fc70fcadebff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1715),
                            IsDeleted = false,
                            Name = "Tax non-remittance",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("84058602-0943-4c03-9e71-394d6a796783"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1716),
                            IsDeleted = false,
                            Name = "Product defects (e.g. Marketing of unauthorised products)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("77beb5f1-397b-447d-a18d-29c0aaac729e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1717),
                            IsDeleted = false,
                            Name = "Model errors (e.g. product conception, methodology, or pricing errors)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("52e44a91-d611-4337-942a-705ae1f87f36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1718),
                            IsDeleted = false,
                            Name = "Non - compliance with internal guidelines when investigating a client",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("88eb4629-4b15-4cb2-a169-5161422f5e67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1720),
                            IsDeleted = false,
                            Name = "Client exposure (loan) limits exceeded",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("d6e3ac05-834d-4234-ba85-0714666259a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1723),
                            IsDeleted = false,
                            Name = "Penalties / Fees incurred for contractual disputes / transgressions",
                            RiskEventTypeCategoryId = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b")
                        },
                        new
                        {
                            Id = new Guid("72c8be32-4f2c-4fb3-af62-893625b255c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1724),
                            IsDeleted = false,
                            Name = "Competitors obtaining information about the firm's initiatives and business strategy",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("8406c3aa-523e-41f0-9771-2e4c4839e86a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1725),
                            IsDeleted = false,
                            Name = "Misplacement of client information and correspondence",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("51e5735b-2c0b-4c57-ae3a-e8825b3dd08b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1726),
                            IsDeleted = false,
                            Name = "Errors in ARM's publications and annual reports",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("c1090688-3565-4575-bcb5-acc35f39d187"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1727),
                            IsDeleted = false,
                            Name = "Misquotes by public media sources",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("1778f455-852d-4db2-8c46-a1e4f831aa07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1729),
                            IsDeleted = false,
                            Name = "Inferior production of corporate gifts",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("dec07fca-5ade-4b76-92ce-a5fa788bf14a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1730),
                            IsDeleted = false,
                            Name = "Substandard /Offensive advertisements and promotional activities",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("69ef180c-5128-4e5f-944d-d555ef979ec2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1731),
                            IsDeleted = false,
                            Name = "Poor quality of Annual Reports prints",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("b21244ec-93c1-414b-9b14-6bad7072e64a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1734),
                            IsDeleted = false,
                            Name = "Fire",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("e497e315-9a71-42ca-a315-5caafcff0e95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1735),
                            IsDeleted = false,
                            Name = "floods",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("ed2fba02-2c09-485c-90b8-5f49437bfdc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1736),
                            IsDeleted = false,
                            Name = "hail damage",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("810a1657-c81d-43da-8c12-79a98eb136a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1738),
                            IsDeleted = false,
                            Name = "General responsibility for injuries caused to third parties eg. company Vehicle accidents",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("63029185-3afa-4bf5-badf-46a2bb0c263c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1739),
                            IsDeleted = false,
                            Name = "Electrical surges",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("80f434ab-f194-4872-9985-39c76d8e81ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1748),
                            IsDeleted = false,
                            Name = "Fire outbreak",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("95a912c1-9740-4ccf-9735-e2f5d2eb7e36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1749),
                            IsDeleted = false,
                            Name = "Water spillage",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("3c31353b-0ed4-42e3-b1c0-919a3e12e5a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1750),
                            IsDeleted = false,
                            Name = "Smoke detectors not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("940a7e83-f279-442a-b1eb-d27abf4ffce2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1752),
                            IsDeleted = false,
                            Name = "Fire alarms not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("18bd78cb-b80a-46cb-9ee4-55e58437b0eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1754),
                            IsDeleted = false,
                            Name = "Political interference in the companys operations",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("d1e8308c-3968-4ae5-95a5-3ad673800c15"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1755),
                            IsDeleted = false,
                            Name = "Launch of competitive products by agents",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("10de052a-0592-4631-a563-220d0c009f6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1756),
                            IsDeleted = false,
                            Name = "Court debt judgements",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("17c69531-754a-456c-9849-f22f04e237a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1757),
                            IsDeleted = false,
                            Name = "Out-of-court settlement costs",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("2016de53-960f-4edc-aa77-b2199ec1d334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1758),
                            IsDeleted = false,
                            Name = "Litigation expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("da75f25c-e66b-4219-b236-cf2c4871d877"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1760),
                            IsDeleted = false,
                            Name = "Debt recovery expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("1051b92f-e449-4e30-8a6b-aa812465c6ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1761),
                            IsDeleted = false,
                            Name = "Fines & penalties",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("a60a1e86-8873-41e1-b2a6-13c771f958f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1763),
                            IsDeleted = false,
                            Name = "Loan writeoff expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("bc5699a2-bb15-4faf-99ec-19a7a20033be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1765),
                            IsDeleted = false,
                            Name = "Vandalisation of company property",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("631f134e-fbc4-4de4-b99d-cedd335ade8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1766),
                            IsDeleted = false,
                            Name = "Sabotage",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("c8ba5396-57bc-437f-b7f1-0369c2be87a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1768),
                            IsDeleted = false,
                            Name = "Robberies",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("317dd429-8d2d-4c72-a14d-994dd3d44ba7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1769),
                            IsDeleted = false,
                            Name = "Missed deadlines",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("ac13e173-8261-43ed-b43a-56291434e3bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1770),
                            IsDeleted = false,
                            Name = "undeserved fines and licence supensions",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("3302714d-e024-4c3b-94df-3ced4e50f095"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1771),
                            IsDeleted = false,
                            Name = "Interruption in communications",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("fb12a4a9-7ae0-4ae1-969f-2c644c7cc213"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1772),
                            IsDeleted = false,
                            Name = "Power outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("ee096c93-176e-46d3-be55-ba3b3a08240e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1775),
                            IsDeleted = false,
                            Name = "Inability to process transactions",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("ed155638-e0cb-4624-bda0-ad22b4043a9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1776),
                            IsDeleted = false,
                            Name = "Telecommunication link outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("b6d489a1-4dbd-4266-9e10-07d6bab42a3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1777),
                            IsDeleted = false,
                            Name = "CCTV outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("5a39f7ff-78c5-4c2f-855f-5250528bec67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1779),
                            IsDeleted = false,
                            Name = "System downtime",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("25bdeb18-01c9-493c-a64a-827d57754f1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1780),
                            IsDeleted = false,
                            Name = "Automated data processing errors",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("59713f12-6d04-469c-9df4-04619f8effa5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1782),
                            IsDeleted = false,
                            Name = "Errors in the maintenance of information",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("36f60e3f-89b7-4245-9fa0-f82f6c4b7beb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1783),
                            IsDeleted = false,
                            Name = "Data entry errors (payment instructions, rates)",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("051817ef-ba06-4de4-beb0-e93ff751e186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1784),
                            IsDeleted = false,
                            Name = "Transaction not booked",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("c7b91750-01ad-49b9-943b-a62c926f9909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1787),
                            IsDeleted = false,
                            Name = "Alteration not countersigned",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("2f8a005e-e613-493f-840d-69708f714599"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1788),
                            IsDeleted = false,
                            Name = "Transaction not registered",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("f2dec0c6-432a-41b9-b43d-48a2a65a6ff7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1789),
                            IsDeleted = false,
                            Name = "Amount in words different from figures",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("f7f54f06-6be4-465a-a19d-8d11544b068d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1791),
                            IsDeleted = false,
                            Name = "Application of wrong interest or exchange rates",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("88182958-de74-4ce5-bbf8-ebb5e44d3868"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1792),
                            IsDeleted = false,
                            Name = "Failure to regularise customer instructions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("53f83286-b520-406b-9363-3f13e335587f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1793),
                            IsDeleted = false,
                            Name = "Data entry errors",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("ca16a471-463a-45f8-8087-3491f8ba5d0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1794),
                            IsDeleted = false,
                            Name = "Processing undated transactions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("fcb6cad6-f402-48d6-8c99-9f0c0e632c41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1795),
                            IsDeleted = false,
                            Name = "Improper identification of beneficiaries",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("93b51a5e-b1f9-4724-b30b-0ea7684b8952"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1798),
                            IsDeleted = false,
                            Name = "Wrong classification of accounts",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("55dd9e7a-2824-4668-87b9-9dc4479b6b38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1799),
                            IsDeleted = false,
                            Name = "Incorrect client records",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("aa23e57b-c798-4c25-881c-b844ddef5702"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1800),
                            IsDeleted = false,
                            Name = "Inaccurate information sent to clients / external parties",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("5ba0f06e-be5e-4da9-b427-9372c1db880f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1801),
                            IsDeleted = false,
                            Name = "Client permissions/disclaimers missing",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("945eb0d7-ab3a-44e8-a91a-7a513310aa34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1803),
                            IsDeleted = false,
                            Name = "Contractual documents missing / incomplete / erroneous",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("a3be81a8-d1e7-414d-b2c5-6c2b0ce9a8b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1804),
                            IsDeleted = false,
                            Name = "Improper account setup",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("7014929c-4031-4c7c-9280-e20a1942c1b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1805),
                            IsDeleted = false,
                            Name = "Incomplete account opening documentation",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("560f9143-12cf-4cc9-879a-bae56a8ac2e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1806),
                            IsDeleted = false,
                            Name = "Failure to upload mandates",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("dbec8ae5-9a09-4b65-8638-0c1d8f9d3b4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1809),
                            IsDeleted = false,
                            Name = "Unapproved access given to accounts",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("a414bc64-a49a-48c2-bf4c-c43b88d6e9dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1810),
                            IsDeleted = false,
                            Name = "Negligent loss or damage of client assets",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("14c733d3-fa1e-4619-94f4-4b478a65779c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1811),
                            IsDeleted = false,
                            Name = "Failure of counter-party company to repay inter-company lending amounts on demand",
                            RiskEventTypeCategoryId = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472")
                        },
                        new
                        {
                            Id = new Guid("17da06df-b187-4ff5-81c9-f2604ba45adb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1812),
                            IsDeleted = false,
                            Name = "Failure of vendors to deliver on contractual obligations",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("7bfa8afe-7b16-4e3b-9e4c-280fc4a13741"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1813),
                            IsDeleted = false,
                            Name = "Disagreements over terms of outsourcing contracts",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("f6b01c97-8dba-42b7-b033-6b74d890a40b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1814),
                            IsDeleted = false,
                            Name = "Errors in Human Resources/ Administration processes",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("39d733fe-be53-4f04-aeaa-c3e7fe7777af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1816),
                            IsDeleted = false,
                            Name = "Procurement not authorised",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("ad32973f-791e-492c-a562-c8f1643296b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 953, DateTimeKind.Utc).AddTicks(1817),
                            IsDeleted = false,
                            Name = "Disposal of Fixed asset not approved",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RCSAStage")
                        .HasColumnType("int");

                    b.Property<Guid>("RiskControlSelfAssessmentUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RiskControlSelfAssessmentUnitId")
                        .IsUnique();

                    b.ToTable("DocumentRSCAProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRSCAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentRSCAProcessJsonDump")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRSCAProcessId");

                    b.ToTable("DocumentRSCAProcessLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<string>("ColourEffectiveness")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Control")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRCSAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InherentRisk")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResidualRiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ResidualRiskRating")
                        .HasColumnType("int");

                    b.Property<string>("ResidualRisks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestResultAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<string>("TestToApply")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeLine")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRCSAProcessId");

                    b.ToTable("ProcessInherentRiskControl", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("RSCAProcess", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7af8f75f-e0ec-4223-b1b1-111b60b96177"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7672),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("45db0b07-19b6-4ff9-9f9c-648af73d643a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7675),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("ccc9cd60-872e-4a20-9c43-4e13436ff33a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7676),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("8be8d049-651e-4f43-9be9-c5fefa0fe269"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7678),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("561ea5ed-82aa-4349-a053-2547b5d78068"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7679),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("b02f8a37-9097-4f5b-a39d-1c975e1d7913"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7681),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("36f0b844-0b18-427d-82a4-d463ebffe1a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7686),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("5081aeda-cd8f-4b9d-a3cf-238f6a7bf70e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7687),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("f78d344e-f20c-49ea-9489-982975f4bed6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7689),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("7fdfd3d6-ee8a-4621-bd1d-0e569ae06b58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7690),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("917c9126-3aaf-4324-be2a-30aed0e36007"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7691),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("77d03105-1163-400d-8493-c19ee0f4abcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7692),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("b950053d-3418-4417-af56-8c4d00e93e75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7694),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("227593c7-e0f4-4803-8535-730c3b5b25ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7695),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("b1bc3dfd-7e79-405a-8132-15b6b796a204"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7698),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("1ecf13d5-67f3-493e-a4f2-9810aaf2fc80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7699),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("ec779a33-561d-4618-9cf5-d9f406aba246"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7701),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("a0a45cdb-2a67-4d04-8b1d-a5cf32c0d826"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7702),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("90f08031-011c-4112-82dc-47bc865d4533"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7703),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("fcd00d33-eb77-4f29-a7aa-f824e2853c52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7705),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("3b125044-53f8-4784-b84f-cb0389238356"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7706),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("0e5e4d80-d80d-49a0-8ad2-7c41e06e6bbd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7707),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("690dc041-3990-4eee-b78a-701f30916369"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7710),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("d37ea09f-ed5c-4f92-ac98-8b54dd450948"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7711),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("d69c9818-4345-4ce4-a8eb-64a0b173d381"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7718),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("e7f2f492-4e87-41f5-80d7-510280ce52c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7719),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("31f33b06-eb83-451c-80e5-718ffc0cf33f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7721),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("90640a3f-2d3e-4fa1-bb80-a0686ea25cb0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7722),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("380a8152-f17e-491f-bb1f-3acde0ca220a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7724),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("f32b15be-70ce-4025-baff-e1b0fd1612a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7725),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("1daf36a2-29d7-4b37-972e-9944ec01c0ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7727),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("b5d0d5fa-ba2f-4ff8-8135-7554ce8940a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7729),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("ac61482a-cb90-4270-b272-3d2b98145582"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7730),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("b93b2b76-c565-42b9-86ce-6d23bdb6c37d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7731),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("62784bb1-3331-49d8-bac5-8dadfb6214cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7732),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("9b3660af-8890-47c8-84e6-78e6711053a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7733),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("ef84b984-a724-4e16-ba6e-5c0559e5064d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7735),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("b53db408-2a12-4cbf-99a4-5149e93958ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7736),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("442737ac-dca9-4dd9-8a2d-b074f307e482"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7738),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("8d9975a9-49cc-4d0f-a8d0-3713b8a89b2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7740),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("d302b93d-e4b0-47c6-a76e-444d5946c0d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7742),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("1d9c3544-3db0-4744-a3e5-9afb78fa94f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7743),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("9e54d9b2-d445-4273-a63d-a2d3afca5e64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7744),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("447cda5b-3172-4416-9607-80512904ae34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7746),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("c89da895-0c83-4c81-9ba2-ce9d95b6d1cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7747),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("b66f4cef-41b7-4a11-8292-9963cb8d992f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7749),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("4fe02764-33b8-411c-834b-805aef55bba1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7752),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("5713256f-1943-4c5d-a48c-fd5f03a9b267"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7753),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("6672abc3-3154-4c0c-b329-1c1a47933ed4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7754),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("3550755a-4e05-4240-8e6a-97303f269e57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7755),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("b9bb1a7d-76f5-4579-b693-91523f8ccb10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7756),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("d93bf3f6-2dc6-46f3-bf06-b31de5724bb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7758),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("35907fa3-20f2-4dab-aed3-a10ccea5a03a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7759),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("931357fd-c05a-4635-b04d-4c9bee2504ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7761),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("6073f255-2b87-44bc-a779-063da8e2d06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7763),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("d3501e9f-4a59-4491-a802-5a14ff5bc144"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7764),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("45447f4e-b4b1-4d00-a6fb-28923d0b2c15"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7765),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("5877402b-2302-481d-afde-eb757d90e211"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7767),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("4827189a-a03c-4878-b6ef-aaa577726cc7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7769),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("24b7e947-4152-41dd-952d-456a083f1944"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7770),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("f2fa5823-0a9a-4311-8ff2-ec4f7c07a505"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7771),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("249851c2-2a76-4748-8d9b-5f8f0515b5eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7772),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("b85ab97d-d4b4-4004-b4f8-8ce6d4412cf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7775),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("0aef0839-3708-4a25-ae8e-cc27ba3fd38e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7776),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("1fa9f695-48b7-48b8-8ad7-d0ac097ef4e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7778),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("20776855-e06b-4214-8c91-3009c94e2e27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7779),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("e7550d98-96de-413f-8116-7a65be30be2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7780),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("797b1b75-72b3-4af1-8096-e670eb88d9d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7781),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("72e9d1a1-2dc1-4191-857a-f4415c40fce2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7783),
                            IsDeleted = false,
                            Name = "Redemption/Withdrawals/Other Payments",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("407a3dc2-d4f5-41b1-8c69-325f9cf397b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7784),
                            IsDeleted = false,
                            Name = "Subscriptions",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("379c2521-c001-4a48-bb40-f714b3fdcdf6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7787),
                            IsDeleted = false,
                            Name = "Reference Letters",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("c3526c91-7542-4fbb-ae2d-63b5e32723f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7788),
                            IsDeleted = false,
                            Name = "Statement/Valuation Requests & Quarterly Portfolio Reviews",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("0c68f1e4-5330-4234-8936-0a2e12f726d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7789),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("1bd36d25-4e37-4e7f-8c7b-6f44f8f45c17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7791),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("9c2bdf85-b97e-44c6-a330-fb905f5ba079"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7792),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("96736180-3c19-43cc-ab7e-10e29ac7f952"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7793),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("8ac6a1f1-4e82-4a4c-b7f5-4c8e9771254d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7794),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("11b03119-35f4-4954-b3f9-0869fc876a38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7800),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("a88eefda-b33b-404b-8692-d8f51da95d4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7803),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("f25e44b0-88dd-4af9-ac1b-719e3e86e46f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7804),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("7180b0e3-e4b2-450b-813e-7bcc99071223"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7805),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("162d2c0e-83d6-4d07-a646-fcb2734ce18f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7806),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("d4977db2-e0ba-4972-9168-2637e4b4707a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7807),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("8becad2b-02f4-47fa-bf18-831220b8e415"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7809),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("2fc9ac13-0c2f-44b4-9d4c-a1e21e0216e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7810),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("d45d08c8-9310-42dc-8fb7-08f3e419eb6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7811),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("e7e92206-2ef2-49c8-b3ab-e7e94efba192"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7814),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("97055181-4601-4286-a2c9-8561c6e9876c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7815),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("1ce22054-cc8e-4b2f-b8f9-b2b10aa59bbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7816),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("86401974-95c0-4e37-ba4e-b5b152f719bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7818),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("c90e4b3b-dd01-4835-a954-7dab95936618"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7819),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("e309a72f-d1ee-41b0-ae40-c9650ac4f4c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7821),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("1acac81e-3623-4820-a1c7-5f97b24e2c16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7822),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("583bdb78-b05b-476a-a131-4d3d988f11d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7823),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("837cc8b9-3277-4e77-a8d8-6e971cd1c5fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7826),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("1ebe01d7-db35-4fd5-97e3-880acec8fd0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7827),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("50db9f67-9f24-4604-b62c-0133b7d51c69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7828),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("f047adee-c3a9-4608-b074-c5650019efee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7829),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("de216649-93f7-4e34-bc49-7c1a6b9cd818"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7831),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("e2858224-35ec-43bd-82aa-5ba89ac1af7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7832),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("6a4c37a1-2117-401a-ba3a-a17faf12b76a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7833),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("6a0e5dfd-33fa-43e7-8f9f-af46c6ffbb81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7834),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("1ba3e704-170d-4509-bfeb-6cf14ce4ff36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7837),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("0ad95c02-e555-4472-a8e1-28ea5efc64bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7838),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("8bb2d280-e6f9-4df1-8a3f-7b875a3f00d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7839),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("d677e197-2cef-41fd-a0c6-54e888375309"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7840),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("a8aee026-2490-45c6-aa65-5136265ddba5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7841),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("1db7666b-eb4a-40fe-8be6-df66bea41c86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7843),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("f4c2db3e-fc0c-4fde-80d7-2a1452545e57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7844),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("ba54696c-1dfa-4f24-ba9b-985a308adac3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7845),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("58176879-3110-4352-8a72-32be38f28e57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7847),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("598409e7-2bcf-4e5b-b8b5-26945efc47ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7849),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("f859baff-5fb5-4dd8-828e-b1bd71f79e30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7850),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("0bf03152-12c3-428d-9052-5a36935fab18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7851),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("7d691153-bc20-40dd-addf-3d0eab417e19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7852),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("4e0347ae-1f80-424f-a5e4-d6ab1ef47703"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7853),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("7b1131c5-a31d-49c4-a3ea-6a7f5987948f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7854),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("bb9ee993-ada6-4b1a-a533-b52579d72b9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7855),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("badce8ac-0a43-4eba-ac5b-0fd4c4d3ea5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7858),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("5fd31f38-b7d4-4869-b169-e86648a3d523"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7859),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("766ff269-f05e-4db0-8dad-512e63d1fd0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7860),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("30126124-3c5e-4afe-af7a-c269bc7ad19a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7861),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("96d372d4-31bb-475c-b687-74ea231fc6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7862),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("f943b195-2e07-4d02-91f7-4bef6a12041b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7863),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("082851dc-a0a3-4611-bd0c-9d69afb0ff36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7865),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("157d5e31-7f22-4353-9f82-040fa11de0ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7866),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("9828ea22-ac2a-4d17-8ccd-8f6331448852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7868),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("c839dfd9-485b-4f81-bb42-70a165a3b242"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7869),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("91b4e9e0-39e8-42bd-9e70-54421c16f679"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7872),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("4f7de89d-55d4-4df7-8107-a5553208744d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7873),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("917bf62b-2962-401e-ab53-c430355eb7b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7874),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("c4e11012-fa08-420e-9f6e-014ede2dc743"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7881),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("df3eb312-edc4-47d2-b6a5-ade3a66ad92a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7882),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("5ce7be02-3755-409c-8268-c2b6a1e97805"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7883),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("71cae472-949b-4276-bb4d-ba831bb46982"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7886),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("26b19aae-0191-4ae5-a3c8-5ada97ae17a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7887),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("95c35259-2d78-44a9-a974-39915479f888"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7889),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("1f3bb82b-64ed-4cd8-b0a4-b24184ac617f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7890),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("baf72672-ea96-40bc-acaa-2285dec98fde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7891),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("973ab53c-4c6b-4ab4-a7a6-1405f991ddfb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7892),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("1a02c960-89cd-4b97-8398-34fa489d7a71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7894),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e240179e-9d81-4441-8de7-bbd8bd62bc0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7895),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("53bde111-b1c1-4542-849b-d7239765f220"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7898),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("c35d77cf-309d-48b0-91aa-1eb4b762dfc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7899),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("fd3f3d08-e48c-4a00-a51a-011851ff474e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7901),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("82d7bcc6-fec9-407c-92aa-74c57bf5be0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7902),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("47cb5834-d265-40c5-9ef3-2dfd7734bc71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7903),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("534f76b4-a8c5-4e07-a5ce-c86f9c8a60b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7904),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("91786e33-63c0-403f-9703-fd28222c5d93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7905),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("c6176948-baf6-452a-9901-629af64676ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7906),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("69ab47f9-0ba9-4a62-9b58-f98ff3791409"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7909),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("237983bc-7a50-4c4d-9da1-dc05b0bb8157"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7910),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("cfe25ca4-6fdc-43a9-bd11-3d072ea1d605"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7911),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("41bf7a1f-b93b-45f8-a828-78ef8f4ff3f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7913),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("b27a4fdf-64df-45d8-8bbb-68d2e1ab3c17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7914),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("9f09b3e5-3a33-4e20-b23d-827f446e7b92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7916),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("9afca6f6-3651-4d86-ab44-e3cfc0efa82a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7917),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("6d40a57e-e1f3-46aa-84f3-d3566f1c14ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7918),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("f0db50bb-a226-4ee9-993f-5b9f724d544e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7921),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("5b527b87-0fc7-45fd-b90f-2fefe42cd065"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7922),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("4f8cbc3f-f23a-46b5-9492-bdf7d313a7fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7923),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("7f324457-f962-4ff9-b4bb-a10bd644efed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7924),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("ad9269fa-c54e-40c1-8c43-f48609fd6a9f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7925),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("a4f6a7af-f038-405e-9806-9c011e42de49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7926),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("4a421471-7042-48ff-b87a-83a03d1b62d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7928),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("5dc213cc-d479-45a1-bd3d-6b4c626790e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7929),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("6d73add9-23f9-438a-a3b4-1073083290a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7933),
                            IsDeleted = false,
                            Name = "Reconciliation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("a677188d-0e3b-416c-806e-f92c04d1a138"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7934),
                            IsDeleted = false,
                            Name = "Call over",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("8d39e239-18a2-4a94-9b04-196f31418557"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7935),
                            IsDeleted = false,
                            Name = "Fee accrual validation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("ddf28703-a67a-4f11-8668-1797323766df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7936),
                            IsDeleted = false,
                            Name = "GL reconciliation and review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("8d80183b-493c-4331-a3e3-3c16850b1fe5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7937),
                            IsDeleted = false,
                            Name = "Valuation and pricing review, EOD activities review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("ca1dbb4c-0d5c-4b73-957d-175c02fdea96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7940),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("09ffad75-d9d1-47df-ad8a-5dab3038b400"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7941),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("657aee5a-363f-4ade-9d5e-09e1b721d4b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7942),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("7d28e1c1-e3c3-4bbc-985a-6eb166a15d57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7945),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("c8bee4c5-a4c3-4afa-96e9-08654a9434c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7946),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("4a39c7d3-756c-4808-a6f3-043f6b49e796"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7947),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("1041694a-a595-44f1-9499-be447c54b740"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7948),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("6f7436a1-0360-41e6-ac0b-674953cec645"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7949),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("43ebf5d4-c659-43e3-9aec-b6e3351df88e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7950),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("dedd8d88-5163-4d8b-b61b-5033f5d47ce8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7952),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("3ce13ded-6fc4-4550-a54e-1173ec008dc7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7953),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("1b61e5e5-6854-4eeb-904c-ff8a2db51414"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7956),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("14ece182-0a49-4cd2-8729-b94b7b15657b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7957),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("a303e739-d9ca-41a6-aa13-049babae7ccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7958),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("94a9898e-23ea-414a-8886-c18d06d43539"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7963),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("4270c344-4189-486c-bba5-7895408abc68"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7965),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("7490eb6b-893e-4e0e-bf16-93ddb478819e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7966),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("a3d35ca4-bc7b-4040-b29b-3ab87f60775b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7967),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("dee6fb03-d728-4465-9bb1-3ac0f7b63b19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7968),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("0f07e2ca-1391-49e7-a267-8b8b76a4e74d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7971),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("561229f5-11d1-4ac7-a634-0a6dc4ce4849"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7972),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("fb421683-c516-455f-9648-8b49351ffd54"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7974),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("e29df5eb-85b6-456f-b23a-0c1f5a2c8424"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7975),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("2da48ed2-3926-460d-9843-fe1444947e66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7976),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("8941b6dc-ab86-4b26-b4ca-ac05decbee4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7977),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("0493b4e9-559b-482d-9102-77224cce1009"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7978),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("9cf3f480-36a6-4185-b016-84f1f6934cdf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7979),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("b05bf4d6-0b08-4281-b078-4553de0f94d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7982),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("3c04cf25-7215-4ffd-aa65-5aa28f37cdbe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7983),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("7a014885-3325-49ae-9bec-f9c17e6d7b61"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7984),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("6927c9be-ee27-4faf-9483-9a4ab56cd53f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7985),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("1c399632-236c-4826-b250-41cc371ac5f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7986),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("1aedf293-a153-4718-bcee-ae572e0f2ad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7987),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("b6ca77b2-67ce-4476-a028-c0f5eb436aec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7988),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("38fabff0-b512-433b-bfca-d4c228974809"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7990),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("324fd761-ebeb-44aa-8bcd-1a270156a8ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7992),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("922b7aec-5c6f-4f09-b54e-0ac631ec2351"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7993),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("fc057a72-6f4e-40d6-a5fa-2b01eb20c5ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7994),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("6060d389-71b8-4520-8559-b0cdc850c1c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7996),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("0370613a-9397-4f66-a775-1f67776efea1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7997),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("cfeedd78-7016-4614-8620-df47512981e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7998),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("38a6a84b-cd8f-475c-842f-76a6393cbcef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(7999),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("cb2b7980-990e-4a74-8aa4-7f31169de0de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8000),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("9db0c2f5-cf52-460b-acda-3948bd666572"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8003),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("3a488f62-8fd8-44b9-a8bd-dd1bcfe6dd54"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8004),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("d06cd914-3254-410f-9e59-8914d35d28fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8005),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("0a5358d2-688f-4b2a-8b13-86267f4fc42c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8006),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("65a83032-9a8d-4e78-852d-ab9deaf54d6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8007),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("970f74ea-2bee-4c8b-b600-c522eb111980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8008),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("45551bf6-2274-4efb-9dba-854754c700e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8010),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("8c7a6083-97ca-47f9-8fc4-f0a50bb13e93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8011),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("0794fcbe-00f3-468f-b20e-9e6bbd5a1130"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8014),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("77b9f45b-9c99-423a-bf2c-b015b6c90cec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8015),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("8c4e891f-6760-40bb-8e28-3bf666a8d4fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8016),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("62810331-c037-46f1-8f8b-a7185ea536e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8017),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("d288a1b3-9231-4718-b001-8723006608a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8018),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("7587cc0d-b7fd-45a9-8762-ab80b38e32ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8019),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("f0a2a6bf-4588-4ff4-ac33-d3379d0cd786"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8021),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("cafa5914-e852-4958-a478-55f7d2088a25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8022),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("f10aaeb8-0acd-428b-a041-45aafbb27ee1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8024),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("fe3e4666-f713-4a83-9127-420cf14e17a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8026),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("1c647d43-cde5-48c3-9468-9da9bacd8b96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8027),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("39b265be-f3bc-48a4-80b9-b0cc72aa5ef2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8028),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("458fbd0f-bceb-4e40-9324-1415bfeb0f50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8029),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("5653654e-ae6e-4d2d-aebe-8e8f3246723b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8030),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("eac7be87-f045-4958-b2a6-803a603fa259"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8032),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("f6da8848-a370-4d49-9267-6e35a1c8e4eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8033),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("ff755809-6946-4557-a3e5-b99d89ea5eeb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8036),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("47b593f1-53ba-4fc8-bbac-081ef2fd81dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8044),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("a8a53c04-906b-427d-b9f9-c19da6d3812d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8046),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("c5c0778d-3b1a-4b9e-82c5-75c4b2080d3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8047),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("5916a15e-2cbc-49cc-a1c9-49610d0f4721"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8048),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("c9d89a22-ce30-4712-834f-3379caea2de1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8050),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("3e3016dc-c5ec-47f1-a71f-682142f0c1f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8051),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("1c023bdd-c5ce-409d-9c7b-ea234ca2adc4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8052),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("1a6a01af-58b2-4caf-92ca-a09db77088c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8055),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("77964e35-8b39-4bde-a78d-0b7de0660826"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8056),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("fca44408-2715-4d62-848c-8dd41ba2d30a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8057),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("6c4bd20e-a75a-453d-8b6b-1f609de68e7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8058),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("7b803c32-109c-4956-b887-7bcff014fe4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8059),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("92bd45af-3b69-47c1-b903-4d67fa9d2b64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8060),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("ad5cf05b-10a6-46fe-a149-49d6a8425614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8061),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("4e8e1b4c-6d80-4c90-b4d8-7b70356c8152"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8063),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("9d0bbe69-da45-4f40-97a7-9a1d2af6182e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8065),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("bd348853-aced-4fc6-8568-cc4afdffa06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8067),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("5ac2d74d-78e1-4b68-a1ac-e81873957e9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8068),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("abfa6d50-bdbd-4990-a6fa-0edac7745392"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8069),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("1ee50c6b-3180-42bc-8efe-ec1e2cd55a1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8070),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("8c9db23c-d1f0-4751-9f33-feb0007abc71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8072),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("18510d22-00a6-4935-b562-a310cd5d0e20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8073),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("a42fb833-2f1d-465d-a98e-2658ccfc9413"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8074),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("51a3217b-9739-4ba7-bd3c-f6c8c4ff64c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8077),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("b28ec506-8013-45f8-9434-5fa70f67cd2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8078),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("3107f973-d30d-4619-8d12-4a2372612120"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8079),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("7c8f6934-f0c4-4efd-9e98-a5a75c3d5f6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8080),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("4805bfad-b7c0-43e2-b093-e991901472cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8081),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("7dce9f75-bd63-4167-864b-8edcbaf7f488"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8082),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("c388870a-25e1-4439-9198-21b42b73ca92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8083),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("99a0dee7-f699-4a45-a3ab-c185a83ef548"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8085),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("f86cb666-21cd-451f-a870-3a98a285a127"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8087),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("9accb255-3df8-4b4a-87d2-a9291bf79dc9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8088),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("0f2807ba-181f-4949-880c-8c7ee58f6c4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8090),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("1f512724-f6e6-4b9f-b102-86b23b60a101"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8091),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("64d60d05-6611-4e01-91ae-c8883f59d6c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8092),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("ab51aa83-6fa1-482e-a21b-6224fbae648d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8093),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("05b56815-9da8-4c8c-875e-244381bee926"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8094),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("bae2037f-0052-4cad-9cf6-5721b43ed976"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8095),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("1ac7d4cc-2b4d-4b54-baa1-41f548376418"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8098),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("34febd28-e06f-479d-8096-d8e270e7cc53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8099),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("bf8ec44b-73eb-4684-8a4c-cc42f44beb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8100),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("2e92f3d7-6c72-468f-8a59-9b95d0645f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8102),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("14050be1-b471-415e-87f3-2fa1e8e42f4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8103),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("e63f8206-7b3e-4684-8fe7-fa1975624768"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8104),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("fc9d6244-8e27-499f-92b5-e4da919756ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8105),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("48812583-5495-4706-aac8-2d00ad0e50c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8106),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("49915022-1bfe-46b2-a594-3bfbcb6a9d86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8109),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("e8b99a8f-effe-4d57-b584-d3e3b11820a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8110),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("69ad6acd-4254-484a-a36b-54342fd04314"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8111),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("a72b5feb-28d2-4733-a3ca-47e6cf1766d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8113),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("9472affb-ac96-4bc4-ad82-362b03f858d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8114),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("81396f23-6840-4aea-bd55-da47523f1ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8115),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("cb410a0d-b321-44ec-875b-a7edf9b87581"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8122),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("9888bded-af3c-474c-b459-a42a9628608a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8123),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("ffd1432a-3153-4688-a101-2996e8c03c30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8126),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("59d743c2-38b6-4cc7-94d7-c23ecdf8caf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8127),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("e15383d8-0040-4d8b-8609-e084b4175c6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8128),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("043a0dfc-81c5-4cf3-abef-14a85d6010db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8129),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("f7618fce-ab92-441d-b459-2bc31af29e8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8131),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("16b69e36-4c81-4340-b769-3ce1b11e2fbd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8132),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("d4384a82-14bd-4048-b101-29fb07ca48c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8133),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("eeef35f7-8109-4793-955c-6876e8700de8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8134),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("8f0815ec-ebbf-44f0-9d72-f6bef65e9f5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8137),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("96bec0b7-7168-45bf-9390-5eb13cc3a362"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8138),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("844111ad-2c38-455c-a3bc-0a0ff88764a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8139),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("96a04e00-8797-49bb-85d1-c8db114ec7f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8141),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("18458e73-9749-4361-92b2-7b80e783beaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8142),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("6921a737-c20f-4eb3-9c21-cd26fc8f68ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8143),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("c18a6d44-b9e3-4970-a730-3b635a58ce37"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8144),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("290d48b8-de81-4188-8a22-493c0717f061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8145),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("79eae21f-715f-4819-886e-5e3ff3857a7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8148),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("94a2dc87-aa9e-410b-9cbf-1d74f41e0cc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8149),
                            IsDeleted = false,
                            Name = "Trust Client Acquisition",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("ff962fce-5f60-40ea-8560-1483b1d92bc4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8151),
                            IsDeleted = false,
                            Name = "Client Request Processing ",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("62982acf-f54f-4b8b-b635-bd82ee33f43b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8152),
                            IsDeleted = false,
                            Name = "Client Investment Monitoring",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("09e91b5c-8e79-40f5-a9d1-1536a209a7f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8153),
                            IsDeleted = false,
                            Name = "Real estate asset management",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("ceed7610-853d-415e-9e58-3d228348d901"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8155),
                            IsDeleted = false,
                            Name = "Business Development",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("78e7cd23-f059-4c52-b81a-40d358ce894a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8156),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("564a69f1-1fe9-430b-980d-73edc0114133"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8157),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("4da44c67-c6bb-4ecd-97bf-9abfe1cdf0e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8160),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("932ec0e6-ffd2-4d5e-aae5-683b74b86a15"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8161),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("31e3bf1e-c46a-4dee-9bb1-e33af5fcf21d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8163),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("3c3faea7-b1f9-428e-b9f4-612bbdfe3275"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8164),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("76a5cc0a-d1d6-4169-86af-93ee902065bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8165),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("525c45d8-8dca-4da1-af1d-fec57c8981fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8166),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("d70de847-92af-467f-9f74-6d0179c1866b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8167),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("4c7b2e53-4a8b-48b3-b748-752f3055fc37"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8168),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("270166ab-7738-40dd-9a22-f4f5feeabb02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8171),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("9747bee4-adad-48bf-a6b3-55e5e72865ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8172),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("974ae960-e033-4260-8aef-81062c991bf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8174),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("558892c1-8f0f-482f-9615-f5e7c043f76d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8175),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("b497fbe5-3255-4f3d-a1e3-8b8912c7e104"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8176),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("abf74beb-c456-4eb3-a4f4-fbbc10fd49f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8177),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("d4ba1892-be8c-4a90-a5c2-f7196e1c1c01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8179),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("b2842ce1-3689-4ad3-8a70-02da91fc3391"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8180),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("a131ff21-6f73-4948-bdf8-68d8c2a7e1d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8183),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("a4f2ce60-f3e9-4998-ab55-36686ea9602e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8184),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("e6038a18-ac2a-4407-a34a-22f504c784f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8185),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("b40ef18a-143b-4ed4-b595-b24132752879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8186),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("d3fbd046-205d-4a6c-bf5a-4d811074843b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8187),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("c59415c0-ea07-4d4a-b03e-5e2ec73b6e89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8188),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("7261cfe1-342a-433f-970a-91f166bf134b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8190),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("fb1a0ff5-a5db-4096-892b-9e04633afe49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8191),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("9a5eb9a4-d590-4816-bee1-b1321d300bc8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8194),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("f7785116-46bd-4404-b130-3a198918497b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8195),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("55d5096d-37e2-4d6d-8a5d-b0b8f046867b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8196),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("c09b97c4-ae3a-40d2-af6b-59ff8a9e4c63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8197),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("abbbc22d-f88e-4795-b316-97cc24723022"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8205),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("6a3f660a-9d1c-4afe-a701-0aa71abef6a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8206),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("ef3efa70-7c5e-43ff-9778-16cc7e7436a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8207),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("9ffc9310-2817-4878-9a6d-d4d568ea8128"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8208),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("ba2cb37b-8b10-4848-9f56-2cab8007b244"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8211),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("7edf90ab-8d0f-40ad-8997-3b5c1ababdca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8212),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("e849fad4-dbea-45df-bb61-825ca3a783e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8214),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("1973d83f-921a-4de3-ae76-cb523202f12c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8215),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("a061e219-d97c-442b-9930-b3424757aa04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8216),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("c941bd1a-eb03-428e-9710-a9fcf587328f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8217),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("9499f8e0-b051-48c0-86e7-d0678a9e8e77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8218),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("f3a5a828-a537-4a8c-abc8-bb5ac08577d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8219),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("ed60e76e-a896-4b96-a0b0-017e65989791"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8222),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("4cfa7e59-2b93-4de9-b9cb-61c68a59c867"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8223),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("2e73d3d8-515b-450e-8870-2c3596df0750"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8224),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("1ede2500-d89c-4bcd-b84a-dbca524739ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8226),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("934d0b54-68d6-4494-9880-6ee2a230c4e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8227),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ca1cb7de-9e08-464a-af5c-2e5718a8ab49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8228),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("54bde8e8-fd68-455b-b834-925baaa197ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8229),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("a764bc23-fbd7-422b-ad16-502031633b43"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8231),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("21b5f249-7e6b-4643-ba2e-9f9bd6098f26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8233),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("b060bacc-8dab-420a-9624-170699a2fab5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8234),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("c24e8610-4e83-4bbb-b380-d2b7785a8b25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8236),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("9091eb06-3fab-49c6-b616-3b5b4dcc1ca6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8237),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("430c32eb-69f8-4f6f-9e01-13b5f5582e4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8238),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("1fc6d1f6-447c-4bca-bab6-4b43387ca030"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8239),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("1d6e8bd2-ddec-40da-828a-63dcf43aace6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8240),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("4289b4d6-c967-48cb-92db-4dee31879827"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8241),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("cfc9b2c7-ec5f-4361-ac75-846624ae2eb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8244),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("59c37e21-8658-42a7-94a5-81b57593661a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8245),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("e92f92b2-3ef0-4ead-831c-5439a4931cb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8246),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("ecacfc49-6b8f-431b-be2b-a8880e10223a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8248),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("76ad76d8-09c3-4d24-a35c-459effa00a56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8249),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("6251258c-633f-4254-847b-d4e07f5a4ad7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8250),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("42de8116-4e9c-4503-92ca-e6cd41e97ddf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8251),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("76d86dfa-8dcc-4dae-b075-d9528d319cf9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8252),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("a5e324ce-ce7f-47bf-b23c-b077b6d9bdbd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8255),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("bf11eb02-b2f9-4218-9251-dfe7547a17dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8256),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("e8c0f4a9-c890-4ec8-9697-498c9d4c198d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8257),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("6a51acf2-10ba-43d2-ab33-527288f42a6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8259),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("87fc21d9-6525-4ace-9def-7de8b7ac7ee4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8260),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("1f264902-277b-4faf-8e4a-64645846eee6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8261),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("b7d95976-9a60-4d68-8645-f3e7d7e8e092"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8262),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("df989dc8-6617-4b1c-b8ed-f50bcda3ccaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8263),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("bb618e9d-cec4-4a85-96a8-d9e8fa1097ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8266),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("f86ade55-7f9f-4a34-924c-13395c2c27ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8267),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("0e380880-7b9e-4cdb-8fd9-aea35de9f0a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8268),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("d4c86c5d-5643-4dd0-8086-54f1c12480e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8269),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("bc79d6dc-3487-4419-9080-e631c5d47e37"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8270),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("da3accf4-c8b8-4ccb-87cf-789965104687"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8272),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("4d155db9-b274-4fd3-9696-89004aba8fdd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8273),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("e9f119c1-a336-4ebb-bc73-1cd39dab997b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8274),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("973f637e-159f-4c2a-897f-c1ce912a762d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8277),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("4a24cd71-b495-4284-aa6d-ada245b90011"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8278),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("2926e6cd-e0e8-4829-b98b-dea29f5d8c8b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8284),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("a1ef50ed-53c2-40ec-98b8-70d3356eb394"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8285),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("0588dd52-ea6a-4cb5-991c-ee745dd5ed35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8286),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("f7eb940c-09ed-42a2-b05c-b33f58cb8228"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8287),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("b35ff459-199f-4823-9881-8a60b1659a03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8288),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("2ee7286e-964e-4f3f-a368-367f2e93c3a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8290),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("10fff222-1683-48c0-aa95-ac2097087078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8292),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("25e12dc2-5934-4496-8e97-6263635d25d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8294),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("8c47aaf9-f5f6-45af-972e-7a0919c0a129"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8295),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("74503337-9856-49e6-897b-f1cbda94d71a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8296),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("830655e8-9d6a-43c3-b06f-8ca719bd5487"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8297),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("9cc2e541-571c-4817-8e10-1121fad4aac9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8298),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("b07e2a56-ab53-408e-b6a6-7fcc710ee293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8299),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("53ec837a-a4ad-4a24-831d-0d864b2464af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8301),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("ee64635f-1f1b-40d2-97e4-d74a17064610"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8303),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("2e9b3705-6d5c-4f46-817b-35cc54d74590"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8304),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("ecccf346-8f90-4ccb-8493-4a9c76191fde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8305),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("3b924a79-787b-48a3-b364-2e90f2b89cb2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8307),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("a50fbaca-2e01-41f1-a971-b9a2004684a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8308),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("13b93260-a861-4be5-93cb-e349c1aacad8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8309),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("0ec10ff6-5baf-4a75-ad68-25097411a77a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8310),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("4438b634-76fc-4985-a67d-723d360012a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8311),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("c75ef6f5-b768-4646-b169-c71a79708be0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8314),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("b6671809-cfbc-43f5-bce6-49a4d4201e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8315),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("5bf196fd-3181-4bb4-8404-8f514e3b8ca4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8316),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("e30ea832-12af-4d61-b297-b29e482f7816"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8317),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("91064bc5-0881-42dd-9ccd-b35a19f9269f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8319),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("c5905113-3754-4194-9d1a-1ce5d14c1259"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("3c177786-f0d3-4c0b-b349-28c516ccaafd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8321),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("2300b629-9984-4cbc-833c-5643d778fab3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8322),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("80fb9be9-bb8f-4caa-b27a-45acd8801cc7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8325),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("059e061b-ec2e-4274-ba11-65ee373baeee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8326),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("3720575b-a0f7-4041-b47d-749e2e8729dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8327),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("2b8dc215-727d-4d46-87dc-ccd72066a460"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8328),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("f6a0e3c0-27af-48a0-af85-649f65baf3cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8330),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("ddb7fc22-558b-44ab-8205-764c37326b5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8331),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("6ca68c81-ff18-4641-aca4-11d80a5541d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8332),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("00042aca-8cd1-42c0-9709-e51c516f40ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8333),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("f0f2bf43-e015-4cf8-8bd2-2f7ff2763bb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8336),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("66afbf10-cb11-4477-b790-ee6efb545333"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8337),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("925bf910-014b-4f28-9682-a12b32c0c238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8338),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("09b8c0c3-b350-4eb9-a4fb-1310bcf385d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8339),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("c2000c8f-2a0a-44d4-9646-60ad1ef74f9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8341),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("22a47b43-af42-4eab-bce3-ceb35ce9ac88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8342),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("9c2ee76e-70bd-4ad5-9118-c07d03fc7037"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8343),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("db16016a-8e6e-4cbe-a660-fbc96a447abf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8344),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("38ec7d11-abb8-4cbf-a1be-78715d0f6e24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8347),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("244faaf2-34ed-4d40-af34-84ef9d582f0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8348),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("cfc5346f-e3d7-43b0-be19-a9df2db8c9b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8349),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("b2cdf224-d347-4e50-a9fd-dd365a879aad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8351),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("e7aa930e-8db3-4b4e-91f9-55907df200af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8352),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("38f404ac-3b16-4022-b548-5ca1316c73d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8353),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("2016cf54-b741-43fd-8b41-98979607073a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8354),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("2843c28d-efbc-4997-8a18-8cf27f0e13d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8355),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("babbe808-cc8b-41e1-b21d-9b90f0eb9f9f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8364),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("258a3194-6a5a-4a33-a90b-db8a031bd6fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8365),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("edf711b2-8673-443b-b662-21d7eab6f137"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8366),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("002fbbe2-8e92-4125-b04c-104c52221cf3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8367),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("9fad9b67-14be-40b1-927a-8cbbd36876b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8369),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("cb0da6e3-3975-425f-9b38-1730f560fc74"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8370),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("5d8fbe25-c4ed-4bc5-bd4e-ce2a9759a59a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8371),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("9092e13f-a9eb-4645-8eec-d2697bf36e89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8372),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("35fc2979-387a-4d92-9156-9d5fa866b2f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8375),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("8604e265-e26b-4486-bfd5-45766f5d750e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8376),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("6209f7f9-ec1c-4a49-a9c2-fa0d66828a38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8377),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("218631d7-d56e-4986-8b2c-09d7d0d0fa95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8378),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("b71a77ac-7a2b-4b1f-862a-d93ab3d14b46"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8379),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("d45f0eb1-78b7-4aff-9aba-e62aff67f5b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8381),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("c1a359b5-6fe5-4a1d-b6f1-2e9fe2d79603"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8382),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("507f8911-d3ef-4e66-80e8-1e6d6bdcc6a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8383),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("e8238fd6-1a3d-4f1f-b760-c14e20a0f242"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8386),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("f3550c8d-3965-4337-a567-9dc9e62fd900"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8387),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("a6bbb60a-cf0b-4297-a418-9a77efdbdea5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8388),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("8ca4b074-e35f-4d75-b0a3-96c31b669d8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8389),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("7cb5a1e1-f47e-4217-80e9-34fe0ff459c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8390),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("56cf7bce-a047-4e57-a48d-f0829815358b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8392),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("a1875c40-7915-4ddf-bcac-fedb7a093f3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8393),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("a7aac89e-7118-4c38-86bc-0fee8e98df4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8394),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("dd5d1f96-1c13-4918-9d15-5d14ae0089ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8397),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("bb745d79-f92d-4767-ad09-0071be0acf4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8398),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("418d7c59-a63f-4ffc-9091-535c7c07e658"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8399),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("3d6b7239-0112-4e89-8440-1e5783fc1b85"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8400),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("d56509e5-0c3f-4040-acf9-7f4f9d076f5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8402),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("367dbf59-4ee9-4fc0-a13c-859c6f940f19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8403),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("06541b36-3cbf-4769-8d54-1fa7ffdbe238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8404),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("06c08c6d-f774-4198-b5ca-d234f34219c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8405),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("d4335ab6-e4d8-4c90-a266-d52378031729"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8408),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("d9b6d333-4fd6-419d-8e56-296876845116"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8409),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("d5054378-fabb-4b13-8173-ef21c9874e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8410),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("c52251f9-3c28-494b-b116-058da9c0c126"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8411),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("538b4aad-9630-4574-9aae-1dbba40b0bdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8413),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("e4d20107-3526-4f5d-96f7-8c324cc3e04b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8414),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("861c7bd7-2791-4f74-8148-b2e4deef457b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8415),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("4fd51617-21e9-4d4e-aa43-485f47550186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8416),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("5339bee8-5188-4150-9775-9279788b3f00"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8419),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("7255fb75-398d-48d9-8bb4-2b58005780e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8420),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("9a58ce3b-0c90-4356-9c53-6a111176f15e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8421),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("8d2a751f-9b28-4e6a-8570-5fb6e48ee447"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8422),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("6891fb48-33aa-4222-a05a-cd7919402984"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8424),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("5506b2af-ff4c-4702-85f4-ba4df855c4ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8425),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("3370a50f-6084-4a63-9d76-3929d897f001"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8426),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("1c7eca61-46b8-4d30-be65-0bf929d8efaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8427),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("7551dcd3-af17-4251-9190-69e09f3b1d3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8430),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("d183e1a6-8fd0-47bb-b525-f1db1b0d0a63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8431),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("82652e0f-4e3d-4061-acf8-09b6dc7a5af3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8432),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("d4693298-ba31-48e8-b292-d19f0e56244c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8433),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("5a2dee9f-cc2b-4308-9ca8-8f68fd2c65a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8435),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("3783a67b-f7f3-4e83-9cb0-5e46942f659b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8441),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("8e08a567-3230-42a7-8dad-6d5319ae58d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8442),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("c3b21d13-e98f-4f9d-8aa9-17c979e8712c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8443),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("3010b666-b368-42d4-9de4-d0beeadb33f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8446),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("9d90b233-875c-4276-a1b7-932409f99ed2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8447),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("28e6533d-872a-42f4-8702-08d8412a9f93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8449),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("93f44892-002a-44e9-8bb7-cc6838465b45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8450),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("853475b3-dc8b-4121-8c35-47b0777a5f16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8451),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("01d5338f-6ab1-41d0-8858-24ab12adbc72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8452),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("7a7f359d-1406-40ad-98e2-4dea4232dd35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8453),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("71bf9997-bee7-4d57-b5ce-c90e24733701"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8454),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("1c865834-e37d-4e99-b744-4b75333a7f05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8457),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("92aa4500-7399-4935-850c-c9b6330ed480"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8459),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("4d1316c1-7abe-4170-870d-ca2ce08391b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8460),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("0ec65d8c-6612-4874-ba1f-3abefe891b16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8461),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("d6e33bfe-e0df-43b4-b1fb-52e3d77b4ba3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8462),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("3848d407-3629-49e0-a8da-7344a4dd262e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8463),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("0cd1c187-8b2c-4114-ae87-6c17247c2a52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8464),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("cc50c65d-ac51-48cc-9563-036fc9082775"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8465),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("da7181a1-f01a-4a7c-8fd6-4809b1fb9904"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8468),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("f9a90ba6-a3d9-4e58-8cc3-ea98021a8e78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8469),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("d6e62be8-a30f-4351-aded-bd727cfb3757"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8470),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("6424d0f4-f77b-4489-8fbb-d366678a9eb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8471),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("166b824b-8c6f-4c97-a7b2-af8e4aea2066"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8473),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("d573f451-cbe8-484a-a155-a0f476050292"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8474),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("0fe5828b-e8f0-4335-bbad-90406a3b37f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8475),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("47eff854-47bc-4708-b5cb-734f5156589d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8476),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("f4a30e6d-16fa-4ecd-9778-679b6f4498d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8479),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("a11579b3-350c-497f-bae7-20240b7dcb1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8480),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("2f59336b-6076-46ee-8885-4f537bd5363c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8481),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("e50363db-249f-4145-b3e2-42098ee3a3d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8482),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("afde6396-08b3-4e56-837c-704d9cfa8492"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8483),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("49ea6439-5b7d-47b8-ac39-0f0c7029c064"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8484),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("a55ffd09-a694-4a6d-bd35-35837eebbb91"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8485),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("cd26adc3-f8d7-4a65-8471-463142703777"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8486),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("d6ce3e96-bc08-43bd-ab5e-3e78e9fd9ed5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8489),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3c46dec3-517d-4877-bc90-d64906d66a6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8490),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("58c26ed8-a7f7-467e-b495-cb1587106258"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8491),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("063a3c68-96cf-492a-be89-899911e4b359"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8492),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("d459aaea-d4f5-46c0-bed5-17963e7501bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8494),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("a68f9720-5205-464e-b9b8-cccba18ce0d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8495),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("6ad79d25-ae0a-4466-b806-3b965d1001ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8496),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("da4315d4-45ef-43ea-a7d1-9469684be08b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8497),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("32f36432-6dfb-4efc-9898-ec60ff06b5ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8500),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("2885ea2c-62eb-4293-ba05-cd721f2dd22a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8501),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("f0ca4798-e421-4628-b660-4d577dd9fa81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8502),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("64be1dfe-f5b3-49d1-a8e6-26de8c244dc7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8503),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("b96c3da0-1234-4a4a-ad91-dc988482e123"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8504),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("38f21c64-f49e-4313-9733-3aadef18a9f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8505),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("940effe7-47b5-4991-8da7-8ad3f38e6bc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8506),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("461db5ad-dd28-4d9a-aeba-9ad21675c2f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8507),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("7079b712-e398-4ae1-b4bc-2b3199407f30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8510),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("f943295b-7781-4756-838d-c957b4a986c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8511),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("0404997f-e603-4cfb-bb7d-22203969c880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8512),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("2a1b4608-79e6-49f9-b2b4-ddd18b4c1ef5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8518),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("db6f7e19-ec9e-447f-ace0-658dd03b8703"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8519),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("f6f1d130-9ec8-42f6-8cac-57c04ce1c463"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8520),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("aad91afd-b5b9-4bd8-9b22-7d58c550d5a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8521),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("72fc78e4-7d5c-4d44-95a1-13630987d696"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8523),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("e75aea08-618e-4ea8-bf69-0ca636dd86c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8525),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("75cb6e31-4370-4401-ac0d-b55c572bf035"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8527),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("4c415cc4-e96b-41b2-a77b-d6a7fa2d040a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8528),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("3de52e04-0f78-47f0-910e-31766ff1afa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8529),
                            IsDeleted = false,
                            Name = "Develop Marketing and Corporate Communication (external and internal)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("257c4aa8-c9b2-407c-af20-73604546be01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8530),
                            IsDeleted = false,
                            Name = "Production of Branded Materials",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("075f76a8-130e-4278-b5fa-6625274ada54"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8531),
                            IsDeleted = false,
                            Name = "Web Development /Update (this is the process of developing or updating web pages)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("c211b9dd-e6bd-408b-9682-9715c7799a95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8532),
                            IsDeleted = false,
                            Name = "CSR Evaluation & Sponsorshp Selection Process",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("06994e8e-9f34-44b4-b0f3-a21113b8627f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8533),
                            IsDeleted = false,
                            Name = "Budget and Planning",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("bd9f6668-517b-4c28-a69f-fb3166975b65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8537),
                            IsDeleted = false,
                            Name = "Bank Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("6c8ded24-6c28-4717-a1c5-27be96cd4d32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8538),
                            IsDeleted = false,
                            Name = "Create Asset Master Data",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("c5297fda-11a2-4ee3-81db-377ec86c13ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8539),
                            IsDeleted = false,
                            Name = "Asset Disposal",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("4ef8289f-c347-496b-8c45-06769cd22d5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8540),
                            IsDeleted = false,
                            Name = "Invoicing",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("892e059b-b071-4b35-8e9e-10270d1d4991"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8541),
                            IsDeleted = false,
                            Name = "Process Payments",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("b5fb6dac-bd89-4311-8b68-efc888b54072"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8542),
                            IsDeleted = false,
                            Name = "Cash Advance and Cash Advance Retirement",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("22969f45-8b7a-4557-b763-a71638778513"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8544),
                            IsDeleted = false,
                            Name = "Reimbursements",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("b57334c7-60fb-4fc5-b43a-a0c2f2aeb7e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8545),
                            IsDeleted = false,
                            Name = "Investor Notes Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("c93fcf05-28d9-473b-ad39-52c3b0383236"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8547),
                            IsDeleted = false,
                            Name = "STAFF DISCIPLINARY ISSUES",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("b3f3d00b-286d-40a8-847d-9c4a4034b56a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8549),
                            IsDeleted = false,
                            Name = "TOTAL REWARDS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("aebd8296-22b9-49b3-9a27-d8f1e5fae90a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8550),
                            IsDeleted = false,
                            Name = "STAFF FILE",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("83a1adda-0a03-400a-be87-428959930f4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8551),
                            IsDeleted = false,
                            Name = "PERFORMANCE APPRAISAL",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("444bd810-94d6-4aa2-9c83-bc2e21d3f4e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8552),
                            IsDeleted = false,
                            Name = "HMO MANAGEMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("161824d3-29a5-4092-ac9a-6038bd25a84d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8553),
                            IsDeleted = false,
                            Name = "TALENT ACQUISITION AND ORGANIZATIONAL DEVELOPMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("ace4423d-76d6-4d2d-a1af-74d3ab2e4d7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8554),
                            IsDeleted = false,
                            Name = "STATUTORY DEDUCTIONS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("fa67fe09-e0eb-45f2-997f-08dabf94e7c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8556),
                            IsDeleted = false,
                            Name = "Staff and Visitors Identification",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("e996fddb-6714-4d1e-af52-f6574a2b6410"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8559),
                            IsDeleted = false,
                            Name = "Staff Sign-in/attendance management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("e988deef-d114-4dd4-9552-7de2a7af5713"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8560),
                            IsDeleted = false,
                            Name = "Keys Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("e78be8c8-79f1-4db5-a7d9-2f16f69aa0f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8561),
                            IsDeleted = false,
                            Name = "Scrutiny of all entrants",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("5a982c97-964f-451f-a334-dc468ce66377"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8562),
                            IsDeleted = false,
                            Name = "Cold Room Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("ad3090a5-9e50-4f4b-88af-6e930d01ada2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8564),
                            IsDeleted = false,
                            Name = "Dispensed goods Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("30eeb5a1-691b-401c-9666-efa0404db07f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8565),
                            IsDeleted = false,
                            Name = "Goods received register",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("25f0654e-611d-41d7-81af-49d23a8f7d1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8566),
                            IsDeleted = false,
                            Name = "Community Relationships and Development",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("fd9097e8-d88f-4cd5-a891-ff2d88a8a669"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8567),
                            IsDeleted = false,
                            Name = "Procurement of Supplies and Inventory Update",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("a949cde5-6a82-4cc8-b6eb-d234cf934f65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8570),
                            IsDeleted = false,
                            Name = "Store inventory management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("73b1227e-4d03-4cda-8e48-5fc0f0f11308"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8571),
                            IsDeleted = false,
                            Name = "Requisition Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("138605a8-1861-4e52-a983-915669358839"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8572),
                            IsDeleted = false,
                            Name = "Store key management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("377c7ede-e28c-4733-89c1-8928d3b13707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8574),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("63a4aec1-de5b-4053-b6f1-1dfe07813af8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8575),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("5007a592-e152-4210-bea9-073802038fb3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8576),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("d49dca4d-e277-45a2-aa6c-73f7f044500a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8577),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("ee1c6e34-4179-41ec-9e82-f794cbbc2e3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8578),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("2c7a3890-fb10-4c33-882a-df44cbc110bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8581),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("dff7a2ff-6899-45a1-8311-328388dead94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8582),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("b61125e0-bad5-46e0-b6ac-87a105078ce7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8583),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("e5da8b6e-08a5-4c8d-aec5-a19612370d1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8584),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("6d411472-1ad2-417c-9779-c29472ce6de2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8586),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("d4b0c312-c2f4-4655-93d9-fb27e7769696"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8587),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("55d80ce9-803b-48a0-8f5c-9a8f9b4263c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8588),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("dcd95510-7475-4066-9ddc-06a3c6f8e98e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8589),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("1f1ed709-9b4c-4088-b26b-33ba87a47469"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8592),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("f2adeea8-badb-475e-ae50-ad5cb83b5017"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8599),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("b38759ba-e05b-4937-ab4c-f8cee82b47cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8600),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("379907bc-a209-4910-8b24-42f52517d924"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8601),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("238f0339-51d5-4571-b90b-65c9980d2b4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8602),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("d0acd8f1-65db-4342-a601-f5093e1388ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8604),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("a304243a-539b-491c-bb0e-ced6fea33e4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8605),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("60545f5e-e7d8-4bea-821f-f6fe3512eeac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8606),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("52ab189a-a30d-481e-b8d9-ba0332075616"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8609),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("357d00c8-78a3-4e13-a18d-cc14f9b0a1a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8610),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("6ca5f3f6-8344-4ebe-a29e-fb71739a54df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8611),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("b80e0cd4-993e-4cca-9863-3d34976a6ac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8612),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("b4178ef9-c388-44d6-893c-bb938a7e8274"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8613),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("051477dd-9b38-48fa-b0e9-7be461b0a84a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8614),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("a0b1cc58-e627-4157-a7c6-e0413ae193ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8615),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("784dcd8b-a2a7-4291-b786-7600eee0c77d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8616),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("96d7f643-a247-4a4a-ae7b-d16063395ef7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8619),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("a8022b6b-470f-401e-bfdf-ce8ae905a2be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8620),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("2df2561a-86c7-4c7d-8bac-a6ccb33a8d32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8621),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("8356f6a2-bb26-421a-b09e-6e48db6ba2bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8622),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("152347d0-e2b1-4efd-b1e0-81dd05d7013f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8623),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("188baa56-b39f-49a5-afd3-050d1f706365"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8624),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("11fe8173-4541-47ce-8207-8bc65624c66e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8625),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("db615e7e-7b86-4f0d-93b6-cfb69412afdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8627),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("06aa4a38-dd24-4403-b210-35a3f45d57e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8629),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("f36001e7-a951-4832-a205-1cd5f36f7758"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8630),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("cef0c01c-bb54-4df0-baae-e6f50433fffb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8631),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("14389871-7045-4adc-a955-c2c012139769"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8633),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("44ab9e77-bfc9-4845-83b5-ba06298c0193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8634),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("cc283da8-0c44-4462-bc9c-bacbd6f4f32d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8635),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("997b5efd-421c-4a78-ae36-89cc81db2a72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8636),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("7ffba7eb-6201-461c-8dd5-e838fef98f3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8637),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("229c5c6c-23a1-41f3-bd59-edb25fbf1aff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8640),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("cb234b4e-bb52-4f72-9e71-bfdb63a72096"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8641),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("38e31ce8-40a1-468a-9b89-57d75e5ca115"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8642),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("c44baf8c-001b-45a3-8d3d-421155ef9446"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8643),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("1d0cfcc1-20a5-49fc-912d-3638bf690177"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8644),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("5a81e2b5-7686-4ada-bed6-613d5100d1c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8645),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("fa3c4b4a-4665-4676-9af2-27960b422d56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8647),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("8a23f4ee-de6e-412a-889e-b281a7ee0fca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8648),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("e35aef9a-37b4-4442-bd57-1697ca85eea2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8650),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("cbd9f4c1-36e0-42d0-a6dd-69ca7d5c681d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8652),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("a2dd83c6-39df-4bb2-8775-5c6fa7af1f93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8653),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("d25ef0b2-1c10-4922-9f29-8fa1400111ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8654),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("90521c8e-219a-42eb-b811-d7b7de9d6312"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8655),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("9c506dd7-c943-4d1e-ae84-9c35deecfa7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8656),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("6637599e-8b31-4637-9466-c2c3dc4e730a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8657),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("c77eae9f-6198-4690-8b3a-0e9841250e7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8658),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("cc900c1d-e4f4-4523-8652-25f78ad28af5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8661),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("b8737228-48ad-4941-b4ce-02205df8ccdf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8662),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("2c1dc54e-821d-4a83-aa60-cfa964da6b4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8663),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("64ddc1fb-427f-40f8-8fd8-92323c363845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8664),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("e1b94540-1b25-460e-b87e-b61b9a4cbeab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8665),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("bba383de-48d3-45dd-aef4-9db2c3672734"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8666),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("ea15cc54-5753-4c86-af18-a59e62e386e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8673),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("5aa20190-0442-461c-8916-012cd45a73aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8674),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("45586bab-17bd-45a4-9075-942daef62a80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8677),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("67e4941f-5304-402c-a52e-f00c30856929"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8678),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("9d1bc880-5093-446b-82e1-f75ce9c9be58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8679),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("f3bedc1e-a942-46a8-8543-8ab8c1cb6b96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8680),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("272300c9-0b00-464b-b013-ff59d24dcb67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8681),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("6b2ad2b9-9bfa-4597-a3a1-84a0f6172869"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8682),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("2dccc660-5451-4284-ba66-accf13b2e1c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8684),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("177e2732-3fc8-4dc1-afe9-df9ad4a207c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8685),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("445e5be9-1cf3-4fd4-97aa-c8b252f1cdd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8687),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("70635c30-a74f-46c2-89c4-ef8ed48ee46b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8688),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("a707f7a6-dff1-4141-a55d-94f501140dc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8690),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("4361b430-2ea7-4d95-8047-d55e1ca54a4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8691),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("4cedaa42-6836-4b72-b0f6-61fc13cfd28c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8692),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("ea1e403d-a1d0-40f2-989f-52188a127749"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8693),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("4b537860-4599-48b6-8b90-da3675d5bb4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8694),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("75988778-16d2-41df-9e4d-7d32f4019f27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8695),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("08710a0d-d726-4381-8787-4c99ce40a50e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8698),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("6dd7a854-8238-4fcf-a613-6f15546b823d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8699),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("05993c95-17bd-4973-b35f-7474634c4f23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8700),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("9da828cb-12de-48fd-b146-05d2d1d8321b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8701),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("cd93265b-0656-49fc-bd0a-3ca23aad2f2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8702),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("fd6bf80f-e9f3-415f-aaa5-af5c71ef0ff7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8703),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("901e9366-4b01-4417-a60f-b4a56a3a261d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8704),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("0aabb754-e8dc-4113-a7ab-75e89c294eca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8705),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("c648e4f3-bbaf-4e48-b36d-63e9df1292df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8708),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("fc28784a-f414-40af-bcbf-bacfaa07cef4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8709),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("a5353ebf-d469-4ed4-a24f-d86f349ee0b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8710),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("8552e48c-05d7-4d57-ad88-2e217162bcca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8712),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("aaf8a5d2-e581-4999-bd78-5581642b9816"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8713),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("b8ef4324-cae3-4297-a00a-defba399c4ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8714),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("9262b303-3421-4217-9e17-0e2a1b23632e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8715),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("1367e8de-7975-4a58-9cf6-5bfc02b50cff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8716),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("d7feb35c-7c1d-46b7-811a-1c2f25edbd72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8719),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("77bc980c-ab8e-44ed-ade6-f9756e759838"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8720),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("10f81d9c-1667-482b-b232-db8c95646a81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8721),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("d2b7656e-3be1-4772-915a-0885bb7a16af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8722),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("5def896b-cc74-4213-8453-91b227859e55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8723),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("d60a7359-acb7-404c-8f00-4d440184c5a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8725),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("59924ed3-a9c1-4935-b49d-ff89e8fec650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8726),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("2ba89d16-d772-4ac3-851b-18fd8e7df9cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8727),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("adbc8451-c2d2-4ec8-a323-2dcf28518f23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8729),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("136fac72-4864-4511-b7af-cd8a2a56c6b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8731),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("3826ea95-72fa-401e-8636-15c4b784f322"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8732),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("116734d8-c66a-4bbe-b402-7729338d75a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8733),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("148b408a-fdaf-4eb1-ba6e-abc0adebe0cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8734),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d56d25ce-824d-4078-9d16-548093599476"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8735),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("469d2570-a0f0-425d-b817-5304893e2242"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8736),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d61bc978-21bf-4869-a7b8-1edb5b2c80fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8737),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("db8dbda8-f33e-422a-8a78-e2774fa3757a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8740),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("336946be-fc75-4ba0-92a0-2ec7c97d746d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8741),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("a11ffd43-fdd7-4cbf-9ee6-142772287724"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8742),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("3c6194f2-02e0-4ecf-9c3d-44f8958f37cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8743),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("6ec32437-ff2b-4308-a55a-04732327ab36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8750),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("8b4eaf5f-1111-4388-be91-412d40c87231"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8751),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("bbd13aad-5c14-4899-b73c-7f210d362098"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8752),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("ef0c0561-6217-4e9f-a3ae-c2290577de5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8753),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("e962666c-ee2a-444b-aadd-11c581d1291a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8756),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("c72ee358-6024-4560-827b-6a402f1c2ca7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8757),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("d8a330cc-4986-48d8-b901-f9bbd515c5f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8758),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("e61db210-8ace-499e-a3cb-c88d00085a67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8759),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("18f4287a-700b-47f7-8ac5-e116dcbbda4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8760),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("08e7c35f-466a-49ea-9832-94e1f2637138"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8762),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("c78a8b3b-8a46-42a9-84bf-15c4c2254dc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8763),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("00e3771a-6431-467f-9658-4ca5fbab5e13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8764),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("7b20d552-003a-47e6-b3cc-c0d39458218d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8767),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("89a398da-8fb4-49f8-a192-f7a61508b23b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8768),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("ec198edd-cee1-4ad2-b6de-5393a506543b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8769),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("4b683cd1-5630-4102-bc2c-d0118a20080e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8770),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("22b2b40f-c6e0-45e4-bb39-60fa16978269"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8772),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("cc0838f1-b836-442f-aaed-466df59ba091"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8773),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("1b99c1cf-2e7f-49c4-8a6c-12c68efc282f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8774),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("e881712f-e445-4bb6-bb8c-1120ed025ad2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8775),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("f0d4558e-a690-4061-9dd0-4f1a9273de0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8778),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("ce45f730-f6a5-4076-b025-a5548fd4edb7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8779),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("368681e5-91ef-45d5-989c-f1d60c491e3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8780),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("5aad26d0-98c6-4471-bb77-4e12f53bb96c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8781),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("a8b1449e-92b9-485c-9233-b9ed4ec65e0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8782),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("118bb67d-e279-4f17-99b0-9c0c21183e52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8784),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("71ae6636-4a69-4040-b2c0-30ee54f1f18b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8785),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("c3eaa3fc-ad86-4263-a043-a6acb8aff8bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8786),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("8675bc88-f2a3-4e1f-8e36-ce58e9b6910e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8789),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("36728493-4051-4403-9310-d06e4447b329"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8790),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("ed04068c-f826-4be0-8732-7d6e6ce4888f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8791),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("bc08097b-c628-44f7-b53d-edfeceefe635"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8792),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("115b517e-44b6-48e5-a910-d681f23ce061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8794),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("dcf4c09d-0479-4245-8bbc-78029df6f8eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8795),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("65e8b145-0e28-4f6d-b323-7473e8025d55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8796),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("32b26efe-59d5-4fad-b828-76cdb5fa8988"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8797),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("6600b3e0-48dc-4b1d-8c36-de3d8dc75c08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8800),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("ff305c50-c47c-4ddf-9aa0-ce43a0ee3a5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8801),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("39fb63f6-1a42-4b9d-be34-7e819063bb57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8802),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("a8209da0-0531-47f7-829d-15970c93ad77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8803),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("c1ed4fff-494d-42fd-82bb-264551440577"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8804),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("c201ef73-75c4-489d-84d9-bfd15042feb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8805),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("e05f6f83-ba5d-475a-8879-7f493e4ce21f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8806),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("a059f698-ef51-4e8b-8b27-df6505695604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8808),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("1513541c-0e11-428b-bbdd-994628d65257"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8810),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("37ae2a65-ab32-4b41-bb3a-504936d4b333"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8811),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("d69d5ac9-a76f-448c-89ad-83f68cce3f25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8813),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("898a2b96-9aa2-4286-9ec2-245012d68dfb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8814),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("c3bb11fa-f587-4e5b-b196-ee3a72356a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8815),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("abe070e1-23b2-49b9-a9fe-5ec070b04043"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8816),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("908cc869-2380-4343-b642-f18d20422b7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8817),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("5d735aac-c67b-4eea-967d-64141bf6f743"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8818),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("1e5f9d8f-0d49-4877-9fdd-0bd5ea06559a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8821),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("e6cd489e-d8bc-443b-b29b-53708d9e9c0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8822),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("3de2b9af-fd25-4b7c-bab3-ea4b78ae9374"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8829),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("8d087068-3c43-459f-92b5-27a5754027ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8830),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("c316da06-0274-45d0-b57f-89b9d68493ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8831),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("e771ea17-86bf-4e95-ad3b-bfea060c45df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8832),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("872180e3-bef8-4a52-b601-1ed61373b738"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8833),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("d8ada371-4ee0-4137-8787-ef4ee40f4151"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8835),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("79a1421b-1eaa-4bab-9378-72efffc99c6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8837),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("7dc90b14-5e52-4127-8139-4aa414ba2714"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8838),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("d79d62be-1dfe-46c0-b70c-6eac03b58871"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8839),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("ddecb29d-57f5-448f-9b52-f517805c4bf9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8841),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("e1ff499d-df73-4d79-99e7-a3058f8ac6f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8842),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("b8b3b8ad-f360-443f-8b21-210192abb2d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8843),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("566ae7ac-9f13-4f44-8c4f-ba9a51a1a084"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8844),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("fbace09d-1754-44ca-bda6-c3a5624d2907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8845),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("ade380be-e921-4aeb-ab32-7377341e1dfc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8848),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("5730b5d7-6a99-4836-8b28-418ee26d7d51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8849),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("db483f2b-7d9d-495f-9d57-a5543adc955f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8850),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("cb591938-9006-447e-8a6e-34d8d23d27f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8851),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("e5697f3d-404f-4344-a04f-67558e0c6ecb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8852),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("e4187e5b-127c-4452-b8f7-202c3d7b3679"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8854),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("1de8867c-ad9e-47df-96a9-ba7cae728d1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8855),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("7109caaa-d80d-44b6-8683-f510eb7813bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8856),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("0c440686-6294-42a5-842d-b9ef4a5aea34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8859),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("69fbedbc-ea24-4f4f-99da-f41466c9d1a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8860),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("7c01911d-5cd3-48b5-9e2a-ea90a572d118"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8861),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("55163833-1aa3-4e8c-8a60-ad7865ad348a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8862),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("3ca38082-25a7-405c-85ee-ba49ca6633b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8863),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("12a73df6-d62c-4693-89d3-e3d57cd83b83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8864),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("ecfbef98-0bcd-4fa1-a8eb-184af5569928"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8866),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("1759605c-4d74-4790-9a6d-c03ebbd3fba0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8867),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("9beb1ee6-01ce-48d3-b810-efbb40da072b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8869),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("2973d57a-bf49-4018-986e-a33e15528159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8871),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("50b192e0-0c21-4ed7-9591-e4c0b8886ade"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8872),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("d85ccf59-dd00-45cc-ae0e-97408cfa2c7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8873),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("37c220ec-2a4a-4aa5-8090-64d016b3a94f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8874),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("5b18a253-3743-412e-b858-f1686e07a052"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8875),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("c16bf875-3ae6-421b-98b1-52afd2dd28f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8876),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("2b181413-9953-48f2-b661-e4933e5c8bc5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8877),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("37894ff0-6287-48c8-bfad-be83e7f046d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8880),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("4141a5c5-a1be-4469-96ce-877169e730db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8881),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("48e708dd-08b4-4a4f-b865-7c410cd67e6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8882),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("d3f7de88-626c-4cb5-a844-e6cf3ba9ba6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8884),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("ab9cc8d2-04a2-4213-b1fd-07e6d643f1cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8885),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("344d29ae-c5d2-4efe-a45d-74ea33239db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8886),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("44b25297-3822-4ab8-ad62-737fed13e519"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8887),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("5acdd021-14dd-4623-8aad-b22433529136"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8888),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("e21aa590-25f4-4175-935f-f1e0b5c38c25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8891),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("2e2c93b8-517d-437b-9ee4-50f68a4227b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8892),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("9745ade9-3175-4586-afe4-abbc49005e45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8893),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("483ff5de-b075-4e8d-9286-773b227c2708"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8894),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("d7ab41bd-381f-42f1-b2b2-d8f606e7f3e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8896),
                            IsDeleted = false,
                            Name = "Agile Delivery Process",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("2b0b55fb-3ed7-48f1-906b-c3186c65fa64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8897),
                            IsDeleted = false,
                            Name = "DEVOPs Operations (Deployment to Production)",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("0f58d69c-3264-4932-a5ef-a2e22722599a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8898),
                            IsDeleted = false,
                            Name = "Functional Testing – User Acceptance Test",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("9f148b8f-f36e-44cd-9c30-ed23a5378bf5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(8899),
                            IsDeleted = false,
                            Name = "Post Go Live Support",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RiskControlSelfAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskControlSelfAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("RiskControlSelfAssessmentId", "Id")
                        .IsUnique();

                    b.ToTable("RiskControlSelfAssessmentUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActionResolutionDate")
                        .HasColumnType("date");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("ActionManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountImpacted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GrossLossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetLoss")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal>("RecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("date");

                    b.Property<string>("RecoveryDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecoveryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalRecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("LossManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RecoveryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RecoveryType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64c5f5ee-ff08-4c03-914b-57c7e01b391e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 947, DateTimeKind.Utc).AddTicks(8255),
                            IsDeleted = false,
                            Name = "recovery1"
                        },
                        new
                        {
                            Id = new Guid("c359ee33-8b9f-4543-8750-2738d0ea9ae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 947, DateTimeKind.Utc).AddTicks(8267),
                            IsDeleted = false,
                            Name = "recovery2"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RiskDriver", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(9295),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(9298),
                            IsDeleted = false,
                            Name = "Process"
                        },
                        new
                        {
                            Id = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(9301),
                            IsDeleted = false,
                            Name = "Systems"
                        },
                        new
                        {
                            Id = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(9308),
                            IsDeleted = false,
                            Name = "ExternalEvents"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6741),
                            IsDeleted = false,
                            Name = "Skills",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6746),
                            IsDeleted = false,
                            Name = "Motivation",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6749),
                            IsDeleted = false,
                            Name = "Capacity",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6752),
                            IsDeleted = false,
                            Name = "Industrial Action",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6754),
                            IsDeleted = false,
                            Name = "Process complexity",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6756),
                            IsDeleted = false,
                            Name = "Change management",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("269387bf-03b1-4b60-95fc-a62977783334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6758),
                            IsDeleted = false,
                            Name = "Quality of controls",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6766),
                            IsDeleted = false,
                            Name = "Roles and responsibilities",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6768),
                            IsDeleted = false,
                            Name = "Adequacy of procedures",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6770),
                            IsDeleted = false,
                            Name = "System adequacy",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6772),
                            IsDeleted = false,
                            Name = "System availability",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("2094ab76-2766-4a88-9a45-fd5444570151"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6774),
                            IsDeleted = false,
                            Name = "System security",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("96912526-6283-4f3c-9079-769b5d08f06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6775),
                            IsDeleted = false,
                            Name = "System Complexity",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("00a54610-0522-4313-ac74-d39f550ff600"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6777),
                            IsDeleted = false,
                            Name = "Data protection",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6781),
                            IsDeleted = false,
                            Name = "Outsourcing",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6784),
                            IsDeleted = false,
                            Name = "Regulatory",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6786),
                            IsDeleted = false,
                            Name = "Legal",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6788),
                            IsDeleted = false,
                            Name = "Social, and natural environment",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6789),
                            IsDeleted = false,
                            Name = "Client / customer relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 948, DateTimeKind.Utc).AddTicks(6791),
                            IsDeleted = false,
                            Name = "Third-party Relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverCategoryId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd1dfb5c-0b24-4db6-b088-4f50992936ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1473),
                            IsDeleted = false,
                            Name = "Staff selection (poor educational levels etc)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("42d534a7-b000-4924-88af-0f1c7b68375b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1476),
                            IsDeleted = false,
                            Name = "Inadequate skills development (e.g. training)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("69f47839-0ebb-4eca-bc6e-0ca1d49fa9ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1477),
                            IsDeleted = false,
                            Name = "Key man retention",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("8f469190-1d23-488c-970b-a90e3f7c0e86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1479),
                            IsDeleted = false,
                            Name = "Lack of management oversight",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("36c33dca-8315-4504-a18e-ddba795e727e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1480),
                            IsDeleted = false,
                            Name = "Lack of staff experience in relation to performed tasks",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("85f18058-49e5-4829-a40d-49668ba9610c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1481),
                            IsDeleted = false,
                            Name = "Negligence of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("16a7d412-df69-440e-9645-32c1f279f9e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1483),
                            IsDeleted = false,
                            Name = "Performance failure of Support unit",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("4f331969-6d2c-42b4-b195-5fdcc8165f8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1489),
                            IsDeleted = false,
                            Name = "Inadequate staff compensation (basic salaries, bonuses, reward-system for vigilance etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("dd29d1e6-40c2-4427-93fa-46cdb58bd8e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1490),
                            IsDeleted = false,
                            Name = "Working Atmosphere (level of stress, social climate, interpersonal relationships, malicious Intent)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("87223863-915f-4f77-b876-c1b6a062d11c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1491),
                            IsDeleted = false,
                            Name = "Workload perception (lack of clearly stated goals and objectives etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("91605444-599d-46bf-96a1-72e1d535a0d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1493),
                            IsDeleted = false,
                            Name = "Corruption / Criminal Intent",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("c765906d-5deb-4484-add0-7930694dc24c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1494),
                            IsDeleted = false,
                            Name = "Staff shortages within unit (lack of capacity in unit)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("ba7296f9-1626-49e5-8ec1-9ec007a58f1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1495),
                            IsDeleted = false,
                            Name = "Staff shortages within support units (lack of capacity in supporting units)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("8ede26fc-3af1-41ea-990e-81c2c4ef036a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1496),
                            IsDeleted = false,
                            Name = "Disagreement on issues of mutual interest",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("88ccaa43-30f2-45e9-b85f-12304afd1331"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1497),
                            IsDeleted = false,
                            Name = "Failure to consult organised labour on HR policies",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("55ab0735-50ca-46e8-a03d-f5f28945e45a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1500),
                            IsDeleted = false,
                            Name = "Complexity of policies / procedures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("6a1f11e7-120d-4f7a-b319-bb0817807e7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1501),
                            IsDeleted = false,
                            Name = "Complexity of client agreements",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("27ccd773-fc88-4d22-b175-f3d5c7589286"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1502),
                            IsDeleted = false,
                            Name = "Process inappropriate for geographic / physical location",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("b382491b-29e9-49f7-be1a-6b3c91ae77da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1504),
                            IsDeleted = false,
                            Name = "Automated process failures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("1b0f5b3b-e202-4a39-b48e-ea3d6143aa1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1505),
                            IsDeleted = false,
                            Name = "Introduction of new processes and procedures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("30f4ee76-3adc-438a-b268-6e1f4c0be72d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1506),
                            IsDeleted = false,
                            Name = "Internal communication failures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("06e7b563-1e45-460e-b9a0-ff3d72eeed12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1507),
                            IsDeleted = false,
                            Name = "Lack of documented guidelines for new processes / services developed",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("8acac719-88a7-4a0f-851f-b639fa007d48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1508),
                            IsDeleted = false,
                            Name = "Rate of change / diversification of products / services",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("37f8601f-0b65-404e-aaa7-3bdf66192319"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1511),
                            IsDeleted = false,
                            Name = "Inadequate controls in place (specific / pervasive / monitoring)",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("8635fdff-ad7c-434d-b07c-262b7c3db109"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1512),
                            IsDeleted = false,
                            Name = "Lack of reporting of control weaknesses / failures",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("99220e9d-be92-43da-bdb0-95666c8cef13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1513),
                            IsDeleted = false,
                            Name = "Failure of automated controls",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("dc03c269-bbbf-49d4-8da1-ac9c47721475"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1514),
                            IsDeleted = false,
                            Name = "Management ability to override controls or processes",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("72a5cc0e-0902-4078-8db5-0737e5383804"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1516),
                            IsDeleted = false,
                            Name = "Inadequate clarity of authority (ultimate decision maker) and reporting lines",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("43e55ac4-1122-4b80-b07a-d2c30bf4a59d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1517),
                            IsDeleted = false,
                            Name = "Inadequate delegation of power (scope, limits, communication, reporting etc)",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("35c7d2e4-19ef-43e3-bf18-fff7f14cae29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1518),
                            IsDeleted = false,
                            Name = "Inadequate definition of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("62faa4fa-53a1-4581-96f8-50f82d4d2d62"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1519),
                            IsDeleted = false,
                            Name = "Inadequate segregation of duties",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("910f4231-7c5c-43ae-aced-944513f054f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1522),
                            IsDeleted = false,
                            Name = "Lack of formal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("94e96cdd-e0e3-4036-8ef9-966b960295ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1523),
                            IsDeleted = false,
                            Name = "Inadequate / incomplete procedure (Internal communication failure)",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("56c2d95c-c075-4504-8be1-c7e23f41094d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1525),
                            IsDeleted = false,
                            Name = "Lack of access to internal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("0fc082d7-ec55-4fee-bdb7-f9ac24828a0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1531),
                            IsDeleted = false,
                            Name = "Lack of SLA's between internal units",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("8132ee62-3281-4bac-ab37-49a8319dfd63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1532),
                            IsDeleted = false,
                            Name = "Non adherence to processes and procedures",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("b775815b-34d6-4934-84fb-77b087aa5bfe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1534),
                            IsDeleted = false,
                            Name = "System inadequate for nature of required tasks",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("8e93025a-1b03-4e0a-b734-e6bf24bdbb79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1535),
                            IsDeleted = false,
                            Name = "System inadequate for volume of activities (speed, storage etc)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("549b6aa6-79c1-4e08-afcf-950af8f2237b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1536),
                            IsDeleted = false,
                            Name = "Inadequate technical or functional documentation (user guides)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("dc7d0962-af8a-4870-abab-16589c893646"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1539),
                            IsDeleted = false,
                            Name = "IT helpdesk inefficiencies",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("7acd1282-5720-4d1c-a40d-466e245030d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1540),
                            IsDeleted = false,
                            Name = "Technological obsolescence",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("8bf4f49f-2436-4693-b8a1-559c327166f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1541),
                            IsDeleted = false,
                            Name = "Software failure (Software / data corruption etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("5710bcce-01de-429c-93c1-1c72d15840fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1542),
                            IsDeleted = false,
                            Name = "Hardware failure (Failure of wearing parts etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("39de41ac-845a-4791-b21c-f92164b1ae98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1544),
                            IsDeleted = false,
                            Name = "System unavailable due to extended period of power outage",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("7442e9fc-113f-481e-94cc-c100f0af99e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1545),
                            IsDeleted = false,
                            Name = "Other Equipment failure (Failure of other assets/ equipments other than IT related equipments etc.)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("8f160b86-f875-447c-8350-52f47de2db54"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1546),
                            IsDeleted = false,
                            Name = "Inadequate security of user profiles (passwords etc)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("43df9fd6-e9a3-4018-977d-c8a51daac725"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1547),
                            IsDeleted = false,
                            Name = "Inadequate security over critical data areas",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("016a8d93-1de4-4da7-9094-7f8c757044de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1550),
                            IsDeleted = false,
                            Name = "Inadequate logical system control checks (e.g. log monitoring)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("8148f8f4-6ecc-44d4-93ab-baffa9cedd08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1551),
                            IsDeleted = false,
                            Name = "Inadequate synergy between disparate systems with common users",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("40059ed5-9ffe-4d42-81d8-6c729796c14d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1552),
                            IsDeleted = false,
                            Name = "Poor systems user interface",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("77ebbe7f-061c-4ed2-a1fe-746281765c97"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1554),
                            IsDeleted = false,
                            Name = "Inadequate system / data backups",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("49ed434e-c6f3-42cb-9823-601a6c490325"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1555),
                            IsDeleted = false,
                            Name = "Virus / Intrusion attacks",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("65785c85-c0f6-4982-be51-9bf186b79b92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1556),
                            IsDeleted = false,
                            Name = "Lack of formalization of relationship with outsourcer (duties, deliverables etc)",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("0d8b2671-c843-4d2b-b397-83b10892f3af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1557),
                            IsDeleted = false,
                            Name = "Performance failure of outsourced vendor / service provider",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("3a6e325d-1f9b-417a-84f3-7a50275372fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1558),
                            IsDeleted = false,
                            Name = "Regulatory compliance breaches",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("e3961aca-4994-471a-93b5-bcab776d20f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1561),
                            IsDeleted = false,
                            Name = "Government discretion to impose will and decisions without prior notice.",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("f289c219-017a-4380-bba6-b54518aa95fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1562),
                            IsDeleted = false,
                            Name = "Ambiguity in Regulations",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("0ba76d8f-dd75-46d6-83c9-2cc751841c7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1563),
                            IsDeleted = false,
                            Name = "Inadequate response to legal / contractual disputes",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("6a5fd0ab-573f-4953-aa2c-17db17d530f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1565),
                            IsDeleted = false,
                            Name = "Inadequate pre-agreement investigations",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("c31c176a-7e38-49bf-962a-418dcaa00159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1566),
                            IsDeleted = false,
                            Name = "Inadequate legal structures",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("1ba21f6b-ea06-4460-9780-4310d9a00ce2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1567),
                            IsDeleted = false,
                            Name = "Natural disasters (Fire, floods, etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("359be659-a8d1-426f-bcf6-7506d36efb89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1568),
                            IsDeleted = false,
                            Name = "External attacks (burglary, robberies, vandalism etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("98eda46e-4894-4189-a8cb-c00c82372e2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1569),
                            IsDeleted = false,
                            Name = "Political or social unrest",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("f2601159-da7b-4d86-9de5-5c2db9701a97"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1572),
                            IsDeleted = false,
                            Name = "Unethical Social and Business Environment",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("659d3a51-0a56-430f-9cdc-26b4d9dd096e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1573),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by the client",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("dd057419-fe4b-4154-b06c-7a9fd196ae4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1574),
                            IsDeleted = false,
                            Name = "Client/Counterparty Failures",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("eb7d899d-765a-49ce-9fe7-d289339aa9a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 949, DateTimeKind.Utc).AddTicks(1575),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by third-parties",
                            RiskDriverCategoryId = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RiskEffectCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("772d66ff-15d5-40ea-9b71-51a26790922c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5032),
                            IsDeleted = false,
                            Name = "Legal Liability"
                        },
                        new
                        {
                            Id = new Guid("ea6c3de9-02ca-48d4-bac4-31c7eea8e272"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5034),
                            IsDeleted = false,
                            Name = "Regulatory Action"
                        },
                        new
                        {
                            Id = new Guid("aaf2a1d5-6ef0-4445-b79e-7da12dbccc76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5036),
                            IsDeleted = false,
                            Name = "Loss or Damage to Assets"
                        },
                        new
                        {
                            Id = new Guid("a1a268a5-1481-4912-9e4c-f88e9e086808"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5037),
                            IsDeleted = false,
                            Name = "Restitution"
                        },
                        new
                        {
                            Id = new Guid("f35fcfee-5dcf-463a-b186-1ae0cce9aaaa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5038),
                            IsDeleted = false,
                            Name = "Loss of Recourse"
                        },
                        new
                        {
                            Id = new Guid("2a424190-a95c-4136-8a76-5d4d00ecc846"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5039),
                            IsDeleted = false,
                            Name = "Write-down"
                        },
                        new
                        {
                            Id = new Guid("bd2e8ec8-ec90-4302-b657-a8c910242c60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5039),
                            IsDeleted = false,
                            Name = "Outsourcing / Vendor Costs"
                        },
                        new
                        {
                            Id = new Guid("9fb5f2ef-61e7-4f82-8d41-9363a22a2fbc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5040),
                            IsDeleted = false,
                            Name = "Reputational Loss"
                        },
                        new
                        {
                            Id = new Guid("f90e7772-1802-423c-bb26-a3797f14bf59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 938, DateTimeKind.Utc).AddTicks(5043),
                            IsDeleted = false,
                            Name = "Reduced operational capacity"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EffectCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EffectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EffectType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RationaleForGrossLossValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EffectCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEffectManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssesmentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIdentification")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOccurence")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("EstimatedLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportedByUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskEventDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BusinessEntityId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UnitId");

                    b.ToTable("RiskEvent", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoundaryEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RiskDriverDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskDriverSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("EventSubCategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("RiskDriverCategoryId");

                    b.HasIndex("RiskDriverId");

                    b.HasIndex("RiskDriverSubCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEventManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId", "Name")
                        .IsUnique();

                    b.ToTable("Unit", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1393),
                            DepartmentId = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("085af12a-41d1-4516-adc4-7e6aba212354"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1397),
                            DepartmentId = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1400),
                            DepartmentId = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            IsDeleted = false,
                            Name = "Securities Operations"
                        },
                        new
                        {
                            Id = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1403),
                            DepartmentId = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1408),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1410),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1413),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1415),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("556d5367-6794-4355-974f-e2ebb6447695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1420),
                            DepartmentId = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1423),
                            DepartmentId = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6b2c5f66-56fe-4a29-9393-5a8b7623d880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1424),
                            DepartmentId = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("c8ba310f-753d-4317-bce6-1559fb079142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1427),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1430),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("840c5c87-0155-4c39-85f4-f3736f04e540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1437),
                            DepartmentId = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("3f4ee577-f743-4614-adda-5bd4e641c85c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1439),
                            DepartmentId = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("a7f38bb3-596e-486d-b7ef-3e30b893a622"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1441),
                            DepartmentId = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("dda976b6-ac1f-42ed-a9cf-860ab77826ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1444),
                            DepartmentId = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1446),
                            DepartmentId = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1448),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1451),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f849e3eb-bc9e-46f7-9d8e-45912925298d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1452),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("2108a385-5b39-4953-97e7-216523683078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1454),
                            DepartmentId = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1456),
                            DepartmentId = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("575a8a92-112f-4752-a875-24999b3f69ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1458),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1462),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("0aacc5ae-ea42-41e1-98c9-9b28d3628d08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1464),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("bfe9d961-8677-4fe2-9727-65f633759353"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1465),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("eaa2f32a-bd71-4b87-a692-6b7eae9f560f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1467),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1469),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("0845fb19-2120-461d-b291-74e1aafa9adb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1470),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1473),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1476),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1479),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1481),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1484),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1486),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1488),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1489),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("941c57d3-66c5-4083-85b9-20bf746b0def"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1491),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1493),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1496),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1497),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a16649cf-8b89-4027-9628-8af108db66fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1500),
                            DepartmentId = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1502),
                            DepartmentId = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e3eaede4-d14c-4c91-b986-f19350038ab4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1504),
                            DepartmentId = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1505),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1507),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("bae03f16-d1e7-410b-ad67-46bfe376c873"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1509),
                            DepartmentId = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("a6dc58d2-3ca3-442c-a2f2-74a3e2f861e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1512),
                            DepartmentId = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("6944d275-92d3-400f-bf70-00f6d9a271ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1514),
                            DepartmentId = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("67552124-7cee-4f19-8e6c-4b9598f1510f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1515),
                            DepartmentId = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1517),
                            DepartmentId = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1519),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1521),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("201b2b9b-55a4-49eb-82b7-05afb9110eae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1522),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("209cfd77-d2b6-4264-963c-bd02558837e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1524),
                            DepartmentId = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("07d965be-1bd6-40df-bfe9-9679b6a4a3c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1532),
                            DepartmentId = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1534),
                            DepartmentId = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("9ec38d97-5e77-4410-90fd-30c179766021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1536),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1538),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1540),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1541),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1543),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1544),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("fb274136-84fe-430d-bab9-6647909a1a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1548),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("d638462f-bde3-4555-889b-2af892201b07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1550),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("e1671ffd-98d2-4063-b883-310378ac972a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1551),
                            DepartmentId = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1553),
                            DepartmentId = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("eaaafeef-5b77-4370-bd8f-21fd1b9e1b94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1555),
                            DepartmentId = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1557),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1558),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("156818e3-1ea6-42b0-a785-7dfaac6f5371"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1560),
                            DepartmentId = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("e60519ac-2af8-40be-94ed-2218e244d1d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1563),
                            DepartmentId = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("19331c05-77f0-4f49-bb90-2af3a78a7793"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1565),
                            DepartmentId = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("9fb66e98-951d-462e-a559-4f19a955bd5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1566),
                            DepartmentId = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1568),
                            DepartmentId = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1570),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1572),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f4c145fb-e830-4fa2-ba1d-77963b39eccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1573),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("598f6cac-69ce-47bb-8be4-f0697c1eb47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1575),
                            DepartmentId = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1578),
                            DepartmentId = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1580),
                            DepartmentId = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("54578f13-6ee3-418d-aede-e77041ef4878"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1582),
                            DepartmentId = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1584),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1586),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("16bedab4-1eb0-484a-9845-e1581085f146"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1588),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1590),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1592),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1595),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1596),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8f3b081b-f835-4577-aa13-9aefd6559760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1598),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("bb28a222-8895-4def-a8a2-1320ad8eb17b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1600),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("ada4d1eb-bcaf-40b1-9790-82c54a225fc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1601),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("e35aaace-aeba-48df-867c-750aef56d05f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1603),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1604),
                            DepartmentId = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1606),
                            DepartmentId = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db3aeece-97b4-42b0-bf58-0f02b87ae4cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1609),
                            DepartmentId = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1611),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1618),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("f60b1ae5-e26f-41bc-a5f3-814f19bdaf0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1619),
                            DepartmentId = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("dcea9d1b-56d2-47b3-901e-1e6b8a6365d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1621),
                            DepartmentId = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("7fc65d4a-e0ad-4274-b1ba-c447f49cd208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1623),
                            DepartmentId = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("e3ccc14e-8d7b-4817-a4c2-8d7eca698d72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1624),
                            DepartmentId = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1630),
                            DepartmentId = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1633),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1635),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d09befe1-8e69-4e76-9735-88597aeb09a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1636),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("cb66fa72-3399-4483-9766-bf35f2033862"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1638),
                            DepartmentId = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1640),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d33101c-f8c2-44f0-8774-5eda11b05df3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1641),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1643),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1645),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("ad83f6ba-ea3b-4d12-a50a-5f00899e3f0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1648),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("3bc7f31c-9502-492b-8a0d-4204be7a5614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1649),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1651),
                            DepartmentId = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1653),
                            DepartmentId = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("36e6ae73-2270-40ea-ae16-64d610c1e5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1654),
                            DepartmentId = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1656),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1658),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("087015b4-acdb-4487-a687-0f084390f387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1659),
                            DepartmentId = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2289ecd3-d422-42e9-95d1-aa91425d1c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1662),
                            DepartmentId = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("9a3f56c3-6249-46eb-880d-01b01cbe7078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1664),
                            DepartmentId = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7979d030-e342-426c-b1e6-6ce2ba29cb20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1667),
                            DepartmentId = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("9f4432a0-9002-4553-997d-633869423d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1668),
                            DepartmentId = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1670),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("e4789074-ab43-463f-b18f-42606e28db63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1672),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d79f8f8d-8fe1-4ff4-94f0-2550f51d8186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1674),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("ea600662-5dbb-4ad6-8200-cc3b2cf39a10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1675),
                            DepartmentId = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1df86816-2842-4941-8710-36822d6240e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1678),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1680),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1682),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1684),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("eb862f6f-9693-4a7a-b2b8-df539e26a8c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1685),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("be3396b5-e02e-48ac-ae55-d64dad1cbd76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1687),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1689),
                            DepartmentId = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1690),
                            DepartmentId = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8581332b-8d77-4f1c-8a3b-79a996ff575f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1694),
                            DepartmentId = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1695),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1697),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1699),
                            DepartmentId = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1700),
                            DepartmentId = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1707),
                            DepartmentId = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1709),
                            DepartmentId = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1711),
                            DepartmentId = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1714),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1716),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("30306755-5207-4d72-9c62-359afa8a5f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1717),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1719),
                            DepartmentId = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1721),
                            DepartmentId = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("3ff75ac7-8e21-4e8a-8895-a77a4dfb5dee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1722),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("5e3f8a3a-4451-4153-8871-eaf7f24aa0e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1724),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("789c6900-e5a3-44d4-9e6e-f165c0f94650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1726),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1730),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("2abce038-72a5-4fd5-9cfc-deef8348f4d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1732),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("38bf0e6d-58f3-47f8-8324-4938c42ac62b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1733),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("7d22672e-a552-4944-a418-d7678717c193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1736),
                            DepartmentId = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1738),
                            DepartmentId = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("ad196f3c-1065-439f-a8d4-4a88a6933949"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1740),
                            DepartmentId = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1741),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1743),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2570f9e3-7c71-41de-9a32-0981e29c14b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1746),
                            DepartmentId = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("bec6c783-ba3c-4180-9d8a-052ce433f695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1748),
                            DepartmentId = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("33cdd2bc-364b-4975-a2ba-3f40cecca022"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1749),
                            DepartmentId = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("5efbbf5f-3081-4492-9ec4-b8880b3eb06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1751),
                            DepartmentId = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1753),
                            DepartmentId = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1754),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1756),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6194902-48f8-4bed-bb0d-0aae5b24df4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1757),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("bedd46ce-899c-4c9d-a098-bb49c3633b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1760),
                            DepartmentId = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("9e089a8d-603a-4c72-a278-0aeb843f9015"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1762),
                            DepartmentId = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4914b69b-1b5e-499a-8350-9fcf5b2e4dca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1764),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("185e0a8b-5aa5-43e5-8828-edeae97cd121"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1765),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("2d544b75-9bda-4aff-a212-a2998fc28cfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1767),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("2470d7cf-0bea-49c7-a2c7-04c9fa36ade6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1768),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("30c9c38f-23b7-4694-acd9-bac0da70eb4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1770),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("cc9fd72b-9a83-43f9-b28f-f8376af33ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1772),
                            DepartmentId = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("8618dc34-8edc-471a-8bab-e7d8b0670462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1775),
                            DepartmentId = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("fa110f66-701d-43b3-9cea-35ca0aaeece1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1776),
                            DepartmentId = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("a9e024ce-d1e7-42c6-b833-73bb43471c8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1778),
                            DepartmentId = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("db1294f5-ada3-42c3-bc59-cd554818e099"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1780),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("64e5f632-d1a0-4ed0-b133-629f6c5d05c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1781),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("4771bfd1-bcba-463a-84ed-f6e8a53f207a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1783),
                            DepartmentId = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("659a83bc-cee9-4939-8669-d2c5617b7845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1785),
                            DepartmentId = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("1e382c5d-6b22-43a6-9ce9-521244c1f555"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1791),
                            DepartmentId = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("ad6a7903-fb1b-4bf2-a55c-2d06f83e7707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1794),
                            DepartmentId = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("8a454ad0-80d6-4ded-a89e-c5e9023357ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1796),
                            DepartmentId = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("12fc7195-2c3f-4bca-88b4-beef3f234d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1798),
                            DepartmentId = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("491cdc51-64aa-4f6b-b5ba-b036b0174852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1799),
                            DepartmentId = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("d6733360-b4e1-4b88-9cbb-364cf2c3fd9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1801),
                            DepartmentId = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("5d296ac9-f9f9-4f69-bb40-0f8b616a6d0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1803),
                            DepartmentId = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("35a7256f-7c2a-45ea-8cbb-2e7509b1cd21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1805),
                            DepartmentId = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("3d1ba0a1-ce2d-4806-b60e-4002c054f341"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1806),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("5b77ef60-1c4a-474a-a320-30b120509229"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1810),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1811),
                            DepartmentId = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1813),
                            DepartmentId = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1814),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1816),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("8eb2aa8b-3cd7-41b1-9628-436aaace8df5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1818),
                            DepartmentId = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("79f64fe8-0a3e-4f2a-b499-8f48e6ea37e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1819),
                            DepartmentId = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("2f7f4b7b-25de-490c-9db4-5ecbb9265268"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1821),
                            DepartmentId = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7c0261cb-0d3e-496d-aa86-9cf5f37da1ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1824),
                            DepartmentId = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1826),
                            DepartmentId = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1827),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1829),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("757ecc97-7a10-420e-b919-2ac7aa557b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1830),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("19704b51-99bb-439f-a4db-6603c6089a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1832),
                            DepartmentId = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1834),
                            DepartmentId = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("5a96a0a8-8d71-45dc-9736-befceefbecb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1836),
                            DepartmentId = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1839),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1841),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1842),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1844),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1845),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1847),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("329d8cac-d18b-4a9b-bd38-8535e19d2b60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1848),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("e0df9434-41f4-454a-a02b-45d644b4d08d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1850),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("83d63b3c-f20b-4e30-8384-6d603fd67bd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1853),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6f9b36b-1d78-475e-b7e0-ffdd9f6e45e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1855),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("b88ebfeb-5f91-4718-aa00-ec6ef714f50e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1856),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1858),
                            DepartmentId = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("003ed424-1724-44b1-bcb1-924abb94e338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1860),
                            DepartmentId = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("5a64f00c-b288-46b3-aa77-ecc4d35b212d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1862),
                            DepartmentId = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1864),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1865),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a39f7dfe-55bb-433d-aabd-70476e81a9f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1868),
                            DepartmentId = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6c300c5e-fba6-467e-952f-4bb3d1d15ea4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1870),
                            DepartmentId = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("b8bc161a-36be-433c-b9b2-2502b40786de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1877),
                            DepartmentId = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("36998696-f319-43d4-bcbf-61b52d0556bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1878),
                            DepartmentId = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1880),
                            DepartmentId = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1882),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1883),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("b0c9d7c8-a875-4f67-b386-d3475c0b2585"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 950, DateTimeKind.Utc).AddTicks(1885),
                            DepartmentId = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Infrastructure.Data.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EmailId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EmailId"));

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToPreventReoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToResolve")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkerPaperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerPaperId")
                        .IsUnique();

                    b.ToTable("AuditFindings");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExceptionsNoted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueRating")
                        .HasColumnType("int");

                    b.Property<string>("IssueSummary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("AuditProgramId")
                        .IsUnique();

                    b.ToTable("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.SessionManagement.SessionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockDuration")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("NumberOfTry")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionTracker", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e486cd1-c2bb-4b7b-8ac7-24b87c68cddd"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9512),
                            Email = "chukwuebuka.obieri@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwuebuka Obieri",
                            Unit = "Risk management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("f90e47b5-f6af-45d6-9189-afb0f8f8b69b"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9517),
                            Email = "iwasam.elemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Iwasam Elemi",
                            Unit = "Risk management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("9976c64f-1f20-49c9-ac53-2d92965d3785"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9519),
                            Email = "nehizena.ibhawoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("3a2dd06e-222d-4eb4-af8c-baa5ef155092"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9521),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("ee8277aa-6c7d-4e42-a295-b39dc21333bb"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9529),
                            Email = "ediagbonya.osayomwanbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ediagbonya Osayomwanbo",
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("a9440b10-0f31-4a1e-853d-4ccbde74e581"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9531),
                            Email = "james.ewah@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Ewah",
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("7e9a9190-44b7-4071-9850-9090a4f17fac"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9532),
                            Email = "olayemi.toye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olayemi Toye",
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("3587f787-f9b5-4670-8a12-549f85acad12"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9534),
                            Email = "phoebe.ohiembor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Phoebe Ohiembor",
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("9b6a2cf0-8c81-4a6e-8474-f6c82a2c1936"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9538),
                            Email = "ethan.okwara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ethan Okwara",
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("ca5c55c1-7c74-436e-a203-f63ef0994909"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9539),
                            Email = "ubi.torsam@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ubi Torsam",
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("30879107-805f-46e6-88d3-3f075f3c1bd1"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9541),
                            Email = "stephen.igwenwanne@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephen Igwenwanne",
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("23b1c460-6cc0-4507-beac-0c786793b54c"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9542),
                            Email = "ndubuisi.anya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ndubuisi Anya",
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("6016df3e-1e0e-446e-9621-cf4dd5e91b5f"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9545),
                            Email = "hassan.adeObafemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hassan AdeObafemi",
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d3fbd38d-e4c9-4df4-93d2-072b15596ecb"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9547),
                            Email = "david.akinboade@arm.com.ng",
                            IsDeleted = false,
                            Name = "David Akinboade",
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("6d17c03d-587f-488b-8abb-fe6255b1a48c"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9548),
                            Email = "eddy.ayikimi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Eddy Ayikimi",
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("b68de4ca-7db1-4bf1-9420-abac2d916851"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9550),
                            Email = "akpesiri.kodu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Akpesiri Kodu",
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("a9b41920-f29e-45d7-9b31-f893ee962ae1"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9555),
                            Email = "adeleye.adewusi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adeleye Adewusi",
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("07fbcadf-171e-4847-ba86-ef730611807e"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9556),
                            Email = "olatunde.samuel@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olatunde Samuel",
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("751fa321-52d1-4ffc-ba5d-45bb4a856bd4"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9560),
                            Email = "bimbo.moses@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("f7e5281f-8c31-45fe-9c26-bc8c00e86b51"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9561),
                            Email = "aminat.ashafa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Aminat Ashafa",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("95d1bc76-372a-4567-8ac6-19dd0a7c9531"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9564),
                            Email = "oluwaferanmi.olorunleke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwaferanmi Olorunleke",
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("c980bcd5-229e-4aec-8b54-e56a79b916ba"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9565),
                            Email = "folarinde.ayenuwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folarinde Ayenuwa",
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("aab08bab-dd9e-409f-8295-5c4425ef52c5"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9568),
                            Email = "ibukun.ajose@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ibukun Ajose",
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("690874b2-f41f-4749-9a7c-c9e0e78829d6"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9570),
                            Email = "kevian.kevin@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kevian Kevin",
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("50273187-571d-4da3-aaca-8322cc19d976"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9574),
                            Email = "isaac.elakhe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("1d10f9b1-69cb-4b8b-8ada-e4520def034a"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9576),
                            Email = "raymond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raymond Akorah",
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("b6423433-fdbb-49fc-a172-ee89add08ed6"),
                            Business = "ARM Digital Financial Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9579),
                            Email = "ina.alogwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ina Alogwu",
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("0b777e30-eae0-42d7-b286-05060a1c983f"),
                            Business = "ARM Digital Financial Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9581),
                            Email = "folaranmi.adefila@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folaranmi Adefila",
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("85989921-c6d8-4da5-9d4e-18265c4a8224"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9583),
                            Email = "oritsegbemi.agbajor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oritsegbemi Agbajor",
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("4e856fa8-b013-409f-8533-09b212b78c07"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9585),
                            Email = "chidinma.mbakwe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chidinma Mbakwe",
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("c84df440-efc0-44b3-9ccd-6990b03377ff"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9587),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("64bf4b0e-6c97-42b3-afc8-42fee930f0b5"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9588),
                            Email = "joy.oyekan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("31c881ae-35bc-4732-991e-118d02ed1715"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9596),
                            Email = "oluwabunmi.abiodun-wright@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwabunmi Abiodun-Wright",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("2f33a2e5-123d-4598-989e-1e5ecb014349"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9598),
                            Email = "ezekiel.solomon@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ezekiel Solomon",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("74af1ddb-5255-49a6-af06-4451e109fe9e"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9601),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("10b9a34b-91c1-44f2-80a0-40d10de33956"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9603),
                            Email = "judith.okeke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Judith Okeke",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("db0d3afd-f772-4e04-bd02-b9fa70d57112"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9605),
                            Email = "carol.ariyibi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Carol Ariyibi",
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("96e83456-9337-4dab-a478-50d6c7c43394"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9606),
                            Email = "olaoluwa.omolayole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olaoluwa Omolayole",
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("6287faa0-1011-4cf0-88e0-a17e0df611ae"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9608),
                            Email = "jacqueline.adefeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jacqueline Adefeso",
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("f16ee3ce-6279-452a-a892-68e0c2e1bf86"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9610),
                            Email = "moradeke.odugbesan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moradeke Odugbesan",
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("5a6a525b-7cef-4f2d-93d6-e6c7034474c7"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9613),
                            Email = "dare.shobajo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Dare Shobajo",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("4400caa8-8e11-429a-86b4-3544c04da47d"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9615),
                            Email = "moshood.hassan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moshood Hassan",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("2ba70c99-70f0-48e9-9dcb-53ad45f329b8"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9617),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("56ae42ff-e4e7-4be1-995b-4c50cc0464f6"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9619),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("82747a17-591b-4bb9-904c-7a83a88c72da"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9620),
                            Email = "doyinsola.ola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Doyinsola Ola",
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("a8a39475-2c49-421f-84ab-1336dc04a0ec"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9622),
                            Email = "rasheed.adebola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rasheed Adebola",
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("a2c918dd-7fdf-4c98-9612-9e1898a00cf6"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9623),
                            Email = "gozie.alozieuwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gozie Alozieuwa",
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d2df598c-4c4c-4620-984c-e34297dcadaf"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9625),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("5a0bbebd-da7a-4d44-92d6-6120e5a6f5d2"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9629),
                            Email = "oyinkan.aregbesola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oyinkan Aregbesola",
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("cfc1399d-bb4b-4e4c-bc04-b4606e8300c5"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9631),
                            Email = "moyosore.taiwo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moyosore Taiwo",
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("9d1b0525-df72-4dc4-8358-afa58a4d824d"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9634),
                            Email = "jobalo.oshinkalu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jobalo Oshinkalu",
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("0e55c094-ab1c-4c6e-ad6d-38bfac9aee4e"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9636),
                            Email = "oyedele.oyinbojuni@armharith.com",
                            IsDeleted = false,
                            Name = "Oyedele Oyinbojuni",
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("969e35f5-99c1-45aa-a391-dce566247df2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9639),
                            Email = "isaac.elakhe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d2dce0d5-16a3-420a-a12c-56a6fc85c8af"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9640),
                            Email = "oladupe.oshinuga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oladupe Oshinuga",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("03155ff1-0a8b-47dc-a70a-258e69f8c6da"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9644),
                            Email = "adetayo.adebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adetayo Adebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("e0f32970-f3eb-492b-a6f0-44a006a8a4a3"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9646),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("7c57c64f-b355-43c9-a6da-06f4f92d8855"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9649),
                            Email = "itunu.olatunde-folaji@arm.com.ng",
                            IsDeleted = false,
                            Name = "Itunu Olatunde-Folaji",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("b042ca89-0568-4d80-b17b-163797cd4293"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9650),
                            Email = "roselina.ajah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Roselina Ajah",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("2983730e-1e31-42ed-9256-12a65a52ccf1"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9652),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("eeacd9e5-fc57-4c57-8e0e-ee2e814f821e"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9653),
                            Email = "faith.sani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("7649777b-8606-4bbd-86c9-8dd073ba4fa8"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9656),
                            Email = "mounir.bouba@arm.com.ng",
                            IsDeleted = false,
                            Name = "Mounir Bouba",
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("8512dcbb-4ed6-4c86-968b-95d7318fedb9"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9658),
                            Email = "chukwufumnanya.chizea@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwufumnanya Chizea",
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("c44de8f1-4d94-4db1-abf3-c004efac747b"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9661),
                            Email = "raphael.emenyonu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raphael Emenyonu",
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("0bdaa10d-2d1c-4d8c-90f6-bc32162efb53"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9663),
                            Email = "hamed.omotayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hamed Omotayo",
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("eb9c9bda-7cd2-4468-9457-2640db45d43b"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9666),
                            Email = "anuoluwapo.sebanjo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anuoluwapo Sebanjo",
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("5cc7065e-5904-4626-a33b-0a2b5be29cde"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9668),
                            Email = "philip.aikinomiora @arm.com.ng",
                            IsDeleted = false,
                            Name = "Philip Aikinomiora",
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("a78807ed-a824-44e7-b5a6-38af657efb7c"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9670),
                            Email = "gbeminiyi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbeminiyi Onipede",
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("a9ba7fe4-e2eb-403c-a5e1-bf77e1c51cd1"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9672),
                            Email = "olukayode.fajuyagbe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olukayode Fajuyagbe",
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("a8e8baea-e0d2-442d-aa24-d5e4f1390bd4"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9674),
                            Email = "opeyemi.oshinyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Oshinyemi",
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("aa8435b0-4e03-4191-ad47-46c40e5c7be5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9676),
                            Email = "james.agu@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Agu",
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("d43f90f4-888b-4dfd-9379-6a1668e351a0"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9677),
                            Email = "olawale.bakir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olawale Bakir",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("9612c9b1-eab2-4838-9a02-ca300c3aee19"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9679),
                            Email = "barakat.olusanya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Barakat Olusanya",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("e0f67fce-4fdc-428a-91e2-8fc0b03db074"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9683),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("b1e25629-1873-4817-9448-e3dd67df92a8"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9685),
                            Email = "gbenga.sonubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbenga Sonubi",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("838f6621-0b5b-4c08-8459-009ac2437be5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9693),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("4001e658-42c7-4b51-a361-d9cce884f572"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9695),
                            Email = "kareem.bashir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kareem Bashir",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("4cdc6623-a1dd-4b6a-ad50-e407067bb5fb"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9697),
                            Email = "patrick.ayele@arm.com.ng",
                            IsDeleted = false,
                            Name = "Patrick Ayele",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("be97b7c2-b10a-4b91-b284-0f5876bb439f"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9698),
                            Email = "oluyemi.omodayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluyemi Omodayo",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("cff85c12-7a01-4dab-92f7-38f5133b71f2"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9700),
                            Email = "oluwatosin.adeboyejo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Adeboyejo",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("c9644726-3eb0-4f57-822d-e986db5de278"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9701),
                            Email = "elizabeth.alloy@arm.com.ng",
                            IsDeleted = false,
                            Name = "Elizabeth Alloy",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("495fee1e-ee5f-484b-87cd-4236d3785c0d"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9704),
                            Email = "stephanie.gber@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephanie Gber",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("002514ae-0f7b-478e-b72e-be4d7c0b278c"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9706),
                            Email = "temitope.akinola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Temitope Akinola",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("ed59c35a-7946-4f9f-a5ef-294135aad85f"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9708),
                            Email = "bimbo.moses@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Unit = "Securities Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("6eea5b63-e322-4c2b-9bcd-0b9227a584aa"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9711),
                            Email = "valerie.okosun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Valerie Okosun",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            Id = new Guid("aa42a8e1-2b67-472c-b5d5-fb6da73bfa06"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9713),
                            Email = "kingsley.ottah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kingsley Ottah",
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            Id = new Guid("c19c364e-b0e8-467e-a774-62a348b18cf1"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9714),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            Id = new Guid("0fa3d19a-207d-4b8c-84eb-1b0410e4079f"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9716),
                            Email = "ramond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ramond Akorah",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("53871fe8-fc85-4350-8b06-8161c56adb22"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9717),
                            Email = "oluwatosin.afolayan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Afolayan",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("15dedd04-ac32-4166-aa49-3cf53f9d6592"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9720),
                            Email = "evelyn.nwogu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Evelyn Nwogu",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("fac983d7-ce37-4634-ac6d-1ce73ed2732f"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9722),
                            Email = "olawale.bakir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olawale Bakir",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("e340b6f4-12c5-4225-a492-2be367f04c25"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9724),
                            Email = "babatunde.osho@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Osho",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("9b76c1bb-2c95-4ecf-a5b2-c51b0723a4c2"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9725),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("060fe0f3-868c-4384-8181-02598eb88504"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9727),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("1baa0c96-dc72-447a-9a43-cab2a826692c"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9729),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("480ffb2b-9213-4ff3-8bcc-49f4a52a7567"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9730),
                            Email = "joy.oyekan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("ba5d7083-1a8f-443a-8ba8-4f4f3fceb1fe"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9732),
                            Email = "faith.sani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("e1976681-2934-439a-b683-0e390f31f86d"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9735),
                            Email = "augustine.chukwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Augustine Chukwu",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("ae8f1665-2a1f-47e8-93c7-8165a52e59cd"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9737),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("d743b295-d89e-49b1-81a2-0cc3ed3e619f"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9738),
                            Email = "kiadum.nwakoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kiadum Nwakoh",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("88c9a945-af5b-4ee7-a238-050127b62393"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9740),
                            Email = "nehizena.ibhawoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("bab7a846-4537-47e2-ad0e-418b6d118053"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9742),
                            Email = "ogugua.emamoke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ogugua Emamoke",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86")
                        },
                        new
                        {
                            Id = new Guid("929cdcd4-5e24-4402-b5f7-6e8e8ebe1fad"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9744),
                            Email = "temitope.akinola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Temitope Akinola",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            Id = new Guid("432376ba-18ca-4d0e-9bb7-a2cee0c40dbb"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9745),
                            Email = "stephanie.gber@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephanie Gber",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            Id = new Guid("5f98410f-9a16-45e1-9193-1fb16a35e89a"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9747),
                            Email = "elizabeth.alloy@arm.com.ng",
                            IsDeleted = false,
                            Name = "Elizabeth Alloy",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            Id = new Guid("c16e31e4-130d-4620-a82d-8cb7b32e6d00"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9750),
                            Email = "babatunde.osho@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Osho",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            Id = new Guid("b91623e2-0ef6-44be-8232-47e594f886f2"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9752),
                            Email = "ifeoma.ofili@arm.com.ng ",
                            IsDeleted = false,
                            Name = "Ifeoma Ofili",
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        },
                        new
                        {
                            Id = new Guid("96eaed9a-58e9-4553-a660-135c838d4287"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 954, DateTimeKind.Utc).AddTicks(9753),
                            Email = "ademola.adebisi@arm.com.ng ",
                            IsDeleted = false,
                            Name = "Ademola Adebisi",
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c")
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2493),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2497),
                            IsDeleted = false,
                            Name = "UnitHead"
                        },
                        new
                        {
                            Id = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2502),
                            IsDeleted = false,
                            Name = "RiskChampion"
                        },
                        new
                        {
                            Id = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2505),
                            IsDeleted = false,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2507),
                            IsDeleted = false,
                            Name = "OtherComplianceUser"
                        },
                        new
                        {
                            Id = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2515),
                            IsDeleted = false,
                            Name = "ComplianceOfficer"
                        },
                        new
                        {
                            Id = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2516),
                            IsDeleted = false,
                            Name = "HROfficer"
                        },
                        new
                        {
                            Id = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 9, 24, 10, 39, 18, 955, DateTimeKind.Utc).AddTicks(2518),
                            IsDeleted = false,
                            Name = "FINCONTreasury"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", "ComplianceDepartment")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", "ComplianceRegulator")
                        .WithMany("ComplianceRules")
                        .HasForeignKey("ComplianceRegulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceRegulator");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", "ComplianceRule")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("ComplianceRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceRule");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHILL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditAnnouncementMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("AuditFinding")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditPlanningMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditProgramAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("RFL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityInvestmentBanking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("InvestmentBanking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityInvestmentBanking", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", "DigitalFinancialServiceAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("Citation")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithMany()
                        .HasForeignKey("AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", "ComplianceDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingInvestmentBanking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("InvestmentBanking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingInvestmentBanking", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingResearch", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", "ConsolidatedAuditFinding")
                        .WithMany("ActionDetail")
                        .HasForeignKey("ConsolidatedAuditFindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("EngagementLetterAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterAuditExecutionDuration")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterReportDistributionList")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", "FinancialDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingInvestmentBanking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("InvestmentBanking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingInvestmentBanking", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingResearch", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("InformationRequirementAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("InternalAuditRating")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernARMAgribusiness")
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernARMSecurity")
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ManagementResponse")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ObservationList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", "OperationDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingInvestmentBanking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("InvestmentBanking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingInvestmentBanking", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingResearch", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", "StrategyDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingInvestmentBanking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("InvestmentBanking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingInvestmentBanking", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingResearch", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", "ProductRiskAssessment")
                        .WithMany("ProductAssessRisks")
                        .HasForeignKey("ProductRiskAssementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BIAUnitProcessDetails")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", "BIAUnitProcessDetails")
                        .WithMany("BusinessUnitsToRunProcess")
                        .HasForeignKey("BIAUnitProcessDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", "BusinessImpactAnalysis")
                        .WithMany("BusinessImpactAnalysisUnits")
                        .HasForeignKey("BusinessImpactAnalysisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysis");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BusinessImpactAnalysisUnitLogs")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", "BusinessEntity")
                        .WithMany("Departments")
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessEntity");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", "RiskEventType")
                        .WithMany("RiskEventTypeCategories")
                        .HasForeignKey("RiskEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventType");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", "RiskEventTypeCategory")
                        .WithMany("RiskEventTypeSubCategories")
                        .HasForeignKey("RiskEventTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventTypeCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", "RiskControlSelfAssessmentUnit")
                        .WithOne("DocumentRSCAProcess")
                        .HasForeignKey("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "RiskControlSelfAssessmentUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessmentUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRSCAProcess")
                        .WithMany("DocumentRSCAProcessLogs")
                        .HasForeignKey("DocumentRSCAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRSCAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRCSAProcess")
                        .WithMany("ProcessInherentRiskControls")
                        .HasForeignKey("DocumentRCSAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRCSAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany("RSCAProcess")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", "RiskControlSelfAssessment")
                        .WithMany("RiskControlSelfAssessmentUnits")
                        .HasForeignKey("RiskControlSelfAssessmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessment");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", "RiskDriver")
                        .WithMany("RiskDriverCategories")
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriver");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", "RiskDriverCategory")
                        .WithMany("RiskDriverSubCategories")
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriverCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", null)
                        .WithMany()
                        .HasForeignKey("EffectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", null)
                        .WithMany()
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", null)
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", null)
                        .WithMany()
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", null)
                        .WithMany()
                        .HasForeignKey("EventSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", null)
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.HasOne("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "WorkPaper")
                        .WithOne("AuditFindings")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", "WorkerPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "AuditProgramAuditExecution")
                        .WithOne("workPaper")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "AuditProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");

                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Navigation("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFL")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Navigation("InvestmentBanking")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Navigation("workPaper")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Navigation("AuditAnnouncementMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditPlanningMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution")
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution")
                        .IsRequired();

                    b.Navigation("InformationRequirementAuditExecution")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Navigation("InvestmentBanking")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHILL")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Navigation("EngagementLetterAuditExecutionDuration");

                    b.Navigation("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Navigation("InvestmentBanking")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Navigation("AuditFinding");

                    b.Navigation("Citation");

                    b.Navigation("InternalAuditRating");

                    b.Navigation("ManagementResponse");

                    b.Navigation("ObservationList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Navigation("InvestmentBanking")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Navigation("InvestmentBanking")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Navigation("ProductAssessRisks");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Navigation("BusinessUnitsToRunProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Navigation("BusinessImpactAnalysisUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("BusinessImpactAnalysisUnitLogs");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Navigation("RiskEventTypeCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Navigation("RiskEventTypeSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Navigation("DocumentRSCAProcessLogs");

                    b.Navigation("ProcessInherentRiskControls");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Navigation("RiskControlSelfAssessmentUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Navigation("DocumentRSCAProcess")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Navigation("RiskDriverCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Navigation("RiskDriverSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Navigation("RSCAProcess");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Navigation("AuditFindings")
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
