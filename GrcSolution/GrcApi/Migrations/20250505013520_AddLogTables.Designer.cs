// <auto-generated />
using System;
using Arm.GrcApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrcApi.Migrations
{
    [DbContext(typeof(GrcToolDbContext))]
    [Migration("20250505013520_AddLogTables")]
    partial class AddLogTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CTO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfManagerOrMD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RCNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceBusines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8fda6fb-0e8a-4621-bae1-16f26d40f345"),
                            BusinessName = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 319, DateTimeKind.Utc).AddTicks(3887),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c767a782-a495-4b96-988c-22e8e16c33d9"),
                            BusinessName = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 319, DateTimeKind.Utc).AddTicks(3892),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("70c25108-c4c7-4221-b444-2a98bddbba7b"),
                            BusinessName = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 319, DateTimeKind.Utc).AddTicks(3894),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("803dcb0e-6a10-4e3b-9c73-35f1c7c4a265"),
                            BusinessName = "ARM Capital Partner",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 319, DateTimeKind.Utc).AddTicks(3896),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessId");

                    b.HasIndex("ComplianceDepartmentId");

                    b.ToTable("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmToSubmit")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameOfReport");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceCalendar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceDepartment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9443293c-a893-41de-8317-264444c8bbc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2932),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("4c9b0a56-52dc-4b33-af2b-5c999308a0ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2938),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("4f52f84c-20cf-459e-8c9c-48d7072f30c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2952),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("da0bcbe0-9dad-4f4a-822f-3c0f9005cae8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2954),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("8f9dfe1b-0ca1-4722-b2a1-09609ee3bb0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2957),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2f10b305-b9da-4801-9188-133c042b276a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2958),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("d969cbf1-7f32-40bf-9e68-74f71a2d23d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2960),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("ebde322f-5df1-4af1-aeb8-870df4c58b3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2963),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("9686c1aa-690e-4efb-a6f0-e48c838ec238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2965),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("766dfecd-8db0-4cc4-981e-43ae1f9f9265"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2967),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("c08f04f7-5e1c-42f9-8247-cb902cd62f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2968),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("469e97db-72af-49ed-84dd-c11d425263cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2970),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("a8e77619-5129-4a88-b234-386f64840215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2971),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("30c73a8b-1b74-4732-802d-e97b7ea2a404"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2973),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("037b9ff2-504e-404f-b329-8dffcc2c5e94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2974),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("113da9be-b174-48a0-98cf-7573f8f344f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2975),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("dc1ab4ae-db59-420b-aade-49c9c0225b21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2976),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("86b47b0a-c3e1-45b6-97ef-5dead8955745"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2978),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("4108d577-9409-498b-9822-bbdd9f9b1e6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2979),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("581ed77e-2e05-42fd-8b92-d001a96909a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2981),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("732911ea-38e8-4104-a9c9-8101c7ec2748"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2982),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("7cc52d32-76d1-4537-b418-7418d09f28f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2983),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("0b760d1e-9eb3-4758-93d8-beade293f5d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2985),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("48cc7b70-9efa-4125-b448-6a957d2041f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2986),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("51c62493-240a-4122-8ac8-ee1fe16e3ee2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2987),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8acebf76-21e6-4e74-9f8c-b0d1db9f3753"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2988),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("aa8efd00-7cc1-4fa6-b9e0-b24e06e8a0a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2989),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("f2b1a942-b22c-4c66-9929-513ba1867053"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2990),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("fad581c6-2f33-46de-b1c4-25d3873f23f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2991),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("a50412b5-65ff-4002-8da4-a45c5bf4bf2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2993),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("3d7857e6-8875-477f-a962-247326e2c92d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2994),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("dfc65214-67c8-47eb-aeeb-3146ae489e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2995),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("eefa7c57-98b1-44f8-aba7-549399321114"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2996),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4fae7da7-6ddd-48d0-9400-1126815fb4d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2997),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("1e534470-a920-457d-b5d3-ca8882de81ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(2998),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1c2370db-3244-4bf2-9b56-57d98bb3b5e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3000),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("1b5cbd9d-3a11-4ae2-8350-f208d37bcbb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3001),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("413c704d-af7b-4b17-bd98-9eea7b16ff03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3002),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("9e94023e-ce76-490c-8f1f-e46f4117b1a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3003),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d071e04-9a34-4c6b-aaa0-ef9f11470990"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3005),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("8ef60bcb-a795-4141-bab6-38e5863e14a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3006),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("c3de97f2-ef7c-40ad-94ef-f88738c71c07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3007),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("1ac36092-da7b-4b32-bdac-a97fc23164cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3008),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4e7f8112-d6bf-4619-b41e-236fba1eb541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3009),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("93427ce2-6640-44ed-a078-320ac73e4dc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3010),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("9ae1d479-e587-4d46-95ba-b8e72851fc75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3012),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("199f9de0-d08b-47eb-a96a-5b2526eb31ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3013),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("022aa7d5-7c0a-4fb3-9c8d-ff2278b289fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3014),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("3ddc0333-f27a-4ced-9599-6ef1ee92c3c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3015),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("affceba9-38dc-4e5f-afb0-8b2d9edf5efa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3016),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("97c9b380-ad8f-4f41-944b-dc37b82fe85f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3017),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("5e885e75-f8b3-4b3a-9017-b2e7a1122d83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3018),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2fd39529-b005-4293-8b8f-12ed3ff87807"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3019),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("7165d5c6-dc08-4471-99b9-4c60dd76ec8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3020),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("a66bea4e-f461-476f-9af7-61a91c69af99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3021),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("55772580-4c93-435d-8c31-685b80b9bd3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3023),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("dd059d83-0706-425f-aa33-c8d32294f7b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3024),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("58662c2e-5a9c-43f8-8d42-fc2e93a50eb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3025),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("040acaf6-ccdc-4302-bae9-95bbe7175fa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3026),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("f155216a-9fc1-4d29-ac25-060c116d0e1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3027),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("9d10fb74-ed81-42ec-a109-072ca0ddfde3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3028),
                            IsDeleted = false,
                            Name = "Securities Operations "
                        },
                        new
                        {
                            Id = new Guid("f0748176-df02-49af-8565-520f9c59c9a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3029),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("5203f4dc-ab02-4dc8-85b1-b293ff9ffcbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3037),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("82355662-28d3-45c9-bbf4-51be40c368d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3038),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("80921fb2-5762-4149-98a1-7a990efb2428"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3040),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("da9c707e-ff33-455b-973e-ff2928d41aca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3041),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("ca9277c7-59d1-4f5f-adbf-bd036440e602"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3042),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("e98b0111-935c-41ba-bfed-00ae9ce3814f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3043),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("193306a0-16ce-4c4b-99a1-8765a8032cac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3044),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("f8360ffe-e1be-4d14-99a8-db3a2e840f41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3045),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("9cb7a2c2-4d91-47c1-9c6f-17540afa0c44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 320, DateTimeKind.Utc).AddTicks(3046),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegulatorTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulator");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b7b8e7-ebfb-4e30-a35c-ef0cc4878188"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3818),
                            IsDeleted = false,
                            RegulatorTitle = "LABOUR ACT"
                        },
                        new
                        {
                            Id = new Guid("3454dc14-648d-4c68-8279-0b82585618ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3842),
                            IsDeleted = false,
                            RegulatorTitle = "PENSION REFORM ACT 2004"
                        },
                        new
                        {
                            Id = new Guid("885c060b-eea9-4d86-b163-f28c60e66736"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3848),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES AND ALLIED MATTERS ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("a28cac7e-cbe2-4950-83ad-cbadc060c86c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3851),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHOLDING TAX) REGULATIONS 1977"
                        },
                        new
                        {
                            Id = new Guid("c83f0df5-a41b-4296-a185-14b423473122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3856),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("92508225-4b55-4fd1-b32c-e069d107a554"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3858),
                            IsDeleted = false,
                            RegulatorTitle = "EMPLOYEES COMPENSATION ACT"
                        },
                        new
                        {
                            Id = new Guid("1ad9ae19-60ce-4712-84dc-fe55e1b88c3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3860),
                            IsDeleted = false,
                            RegulatorTitle = "FINANCIAL REPORTINNG COUNCIL OF NIGERIA ACT 2011"
                        },
                        new
                        {
                            Id = new Guid("f3eab0ba-f3fd-4e89-8716-ab23699e1159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3869),
                            IsDeleted = false,
                            RegulatorTitle = "INVESTMENT & SECURITIES ACT 2007"
                        },
                        new
                        {
                            Id = new Guid("9171c80a-d862-4254-b6e7-a488124a2979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3871),
                            IsDeleted = false,
                            RegulatorTitle = "NATIONAL YOUTH SERVICE CORPS ACT"
                        },
                        new
                        {
                            Id = new Guid("1b244041-2bfb-4158-8251-6599f66d3302"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3876),
                            IsDeleted = false,
                            RegulatorTitle = "PAY AS YOU EARN (PAYE)"
                        },
                        new
                        {
                            Id = new Guid("c5dae39f-b49d-4a24-86f4-e83544fc5e47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3879),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHHOLDING TAX REGULATION) 1997"
                        },
                        new
                        {
                            Id = new Guid("57c7047e-c1c5-4323-9b26-72d8560499f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3881),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("2163d6c4-f924-4698-839f-654ec59e7284"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3883),
                            IsDeleted = false,
                            RegulatorTitle = "VALUE ADDED TAX LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("bf3b070f-2883-40ea-b573-cecabbeb77f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3884),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON MINIMUM REQUIREMENTS FOR OPENING BRANCHES"
                        },
                        new
                        {
                            Id = new Guid("43cf07e6-8956-4b21-9b13-4d931e6a77b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3886),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON PAYMENT OF ACCRUED PRE-PENSION REFORM BENEFITS MAY 2011"
                        },
                        new
                        {
                            Id = new Guid("59138bb0-e094-48eb-b5ec-4cd2aa3f9db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3888),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON REQUIREMENTS FOR PFAs WITH FUNDS UNDER MANAGEMENT OF N100 BILLION & ABOVE AND NEW REQUIREMENTS FOR APPOINTMENTS TO BOARD AND TOP MANAGEMENT POSITIONS OF ALL PFAs"
                        },
                        new
                        {
                            Id = new Guid("10de3a4e-49f8-4e67-a513-6219d087e747"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3890),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON SERVICE DELIVERY BY PENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("189a4456-930e-4a59-b721-b698d448775c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3894),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON STANDARDIZATION OF ANNUAL TOTAL EMOLUMENTS FOR THE COMPUTATION OF RETIREMENT BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("191ca6ae-a827-4b40-8798-af53ff64e14f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3897),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON THE IMPORTANCE OF TRAINING FOR STAFF OF PENSION FUND OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("17488d81-13f9-4cf1-bfb9-931191142061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3898),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF CORPORATE GOVERNANCE"
                        },
                        new
                        {
                            Id = new Guid("bf3c448d-5602-4aa9-b94e-3e36cdcb337b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3900),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF ETHICS & BUSINESS PRACTICES"
                        },
                        new
                        {
                            Id = new Guid("12418cf1-0592-49ac-96b2-eb27bf63ca96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3902),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINE FOR APPOINTMENT TO BOARD AND TOP MANAGEMENT POSITIONS IN PFAs AND PFCs"
                        },
                        new
                        {
                            Id = new Guid("3e58ddd8-da9b-47b5-800c-f97a606c438f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3904),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR CROSS BOARDER ARRANGEMENTS UNDER PENSION REFORM ACT"
                        },
                        new
                        {
                            Id = new Guid("9b6f45a5-744b-43eb-aaf5-5dcc65974fa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3906),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR LIFE INSURANCE POLICY FOR EMPLOYEES"
                        },
                        new
                        {
                            Id = new Guid("f3e71ebf-7fcf-4af3-90ed-332de74e9601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3909),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR RISK MANAGEMENT FRAMEWORK FOR LICENSED OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("596f7f2e-0e82-46ff-b11e-7b8a27e03983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3914),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE ADMINISTRATION OF STATE FUNDS DEDUCTED AT SOURCE UNDER THE CONTRIBUTORY PENSION SCHEME"
                        },
                        new
                        {
                            Id = new Guid("ed229bfb-b639-401f-95f8-a267adceefff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3917),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND ADMINISTRATORS AND CUSTODIANS FOR EXISTING PENSION SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("2a93b173-23a6-4530-b447-98b1ce499bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3921),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND CUSTODIANS FOR STATE GOVERNMENT AND RETIREE FUNDS"
                        },
                        new
                        {
                            Id = new Guid("91525b64-1cb5-42e9-82eb-034ed057d7e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3923),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION FUND CUSTODIANS"
                        },
                        new
                        {
                            Id = new Guid("30c07d3f-8f36-41de-87e9-bc1071d434d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3947),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION TRANSITIONAL ARRANGEMENT DEPARTMENTS"
                        },
                        new
                        {
                            Id = new Guid("9deda427-c40d-4e08-9cba-227444dedbde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3951),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PFAS"
                        },
                        new
                        {
                            Id = new Guid("a55cdcc2-aef2-40bb-97ed-97ed0cd31909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3953),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE PUBLICATION OF RATES OF RETURN ON RSA FUNDS BYPENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("27688539-e496-4a50-89a8-8b842aeacfd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3955),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE TRANSFER OF NSITF CONTRIBUTIONS INTO EMPLOYEES RETIREMENT SAVINGS ACCOUNT"
                        },
                        new
                        {
                            Id = new Guid("6abca7e0-03cf-40f8-831e-1f3503322e42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3959),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR TRANSITIONAL CONTRIBUTIONS FUND"
                        },
                        new
                        {
                            Id = new Guid("21c301ca-73a5-4def-800b-27987416b42c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3961),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON DIRECT REAL ESTATE INVESTMENTS BY CLOSED PENSION FUND ADMINISTRATORS AND APPROVED EXISTING SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("0902e170-5fc5-49ca-9e31-9da612ed2547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3963),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON FUND ACCOUNTING"
                        },
                        new
                        {
                            Id = new Guid("63d58047-074e-439a-b244-b50a2d216c88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3965),
                            IsDeleted = false,
                            RegulatorTitle = "INCLUSION OF GROUP LIFE INSURANCE POLICY FOR EMPLOYEES: FURTHER STEPS TO IMPROVE COMPLIANCE"
                        },
                        new
                        {
                            Id = new Guid("3d03d9e4-4026-41f4-98e0-ee15d5d37907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3967),
                            IsDeleted = false,
                            RegulatorTitle = "MINIMUM INFORMATION TO BE POSTED ON A PFAs WEBSITE"
                        },
                        new
                        {
                            Id = new Guid("5c923578-67d4-4e86-ae34-a28036056a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3969),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATION ON INVESTMENT OF PENSION FUND ASSETS"
                        },
                        new
                        {
                            Id = new Guid("66ad68b7-2f5e-4be4-9f7c-e30695022ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3971),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR AUDITING PENSION FUNDS"
                        },
                        new
                        {
                            Id = new Guid("e7563613-5933-4c0a-bded-728e3e2b9835"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3974),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR THE ADMINISTRATION OF RETIREMENT AND TERMINAL BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("53e6317c-f579-4ca4-a6dd-77dce9473d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3980),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS ON COMPLIANCE OFFICERS"
                        },
                        new
                        {
                            Id = new Guid("594b2f82-13d1-4a70-b45a-47b85daffb8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3982),
                            IsDeleted = false,
                            RegulatorTitle = "SECURITIES AND EXCHANGE COMMISSION RULES AND REGULATIONS 2013"
                        },
                        new
                        {
                            Id = new Guid("d72c7077-df45-4f41-95b2-b1f48a25de30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 322, DateTimeKind.Utc).AddTicks(3986),
                            IsDeleted = false,
                            RegulatorTitle = "WHISTLE BLOWING GUIDELINES FOR PENSIONS"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulatoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessEntity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initiator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeansOfPaymentAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentAttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulatoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRegulatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deadline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InitiatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesOrFillingOrReturn")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Penalty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Responsibilities")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceRegulatorId");

                    b.ToTable("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ComplianceRuleId");

                    b.ToTable("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.ComplianceStatutoryPayment.ComplianceStatutoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessEntity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CashRemittanceStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initiator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayingUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentFrequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatutoryPayment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubmissionToStatutoryBody")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceStatutoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.CASPLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Application")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObjectIdentifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleStaff")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceDevice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("CASPLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DAMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationObject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaliciousReputation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NATIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NATPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourcePort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAuthorized")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("DAMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DLPLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionTaken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DLPPolicy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DLPRuleAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DLPRuleMatch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponsibleStaff")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("DLPLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.EDRLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionTakenByUs")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Severity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Technique")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("EDRLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.FIMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationObject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaliciousReputation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NATIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NATPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourcePort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("FIMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.IncidentManagementLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("ActionOwnerCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwnerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssetDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfClosure")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfReporting")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfActionTaken")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DescriptionOfIncident")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("IncidentTag")
                        .HasColumnType("int");

                    b.Property<string>("InfoSecRecommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("InfoSecStaffCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InfoSecStaffEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InfoSecStaffName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LessonLearnt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecommendationToPreventFutureReoccurence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportingStaff")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportingStaffComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("ReportingStaffCommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportingStaffEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportingUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("SecurityArea")
                        .HasColumnType("int");

                    b.Property<string>("SecurityAreas")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SecurityIncident")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfAsset")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IncidentManagementLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.LogManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerRemarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionOwnerUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionownerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionownerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessJustification")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAlertGenerated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InfoSecRemarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1DayToProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1WkToProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent3DaysToProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSentOnTheProposedEndDate")
                        .HasColumnType("bit");

                    b.Property<int>("LogType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProposeEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserApprovalObtained")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.PAMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectiveActionCarriedOut")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatecarriedOut")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IncidentDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("PAMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.SIEMLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigurationDetail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationObject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DestinationFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationIpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DestinationUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LogManagementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaliciousReputation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NATIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NATPort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityTool")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceFQDN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceHostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceIPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourcePort")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LogManagementId")
                        .IsUnique();

                    b.ToTable("SIEMLog");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionToBeResolved")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalControlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlAction");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlActionOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionOwnerStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalControlActionlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlActionlId");

                    b.ToTable("InternalControlActionOwner");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("ExpectedUploadTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfReport")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("date");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlCallOver");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOverReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CallOverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportDone")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfAttachments")
                        .HasColumnType("int");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CallOverId");

                    b.ToTable("InternalControlCallOverReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlDashboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActivityIntervals")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTaskCompleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDailyReminderSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMonthlyReminderSent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWeeklyReminderSent")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextNoficationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfTransactionsReviewed")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProposedCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("ToTrigger")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InternalControlDashboard");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlExceptionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityImpacted")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Exception")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExceptionTrackerStatus")
                        .HasColumnType("int");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent12Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent24Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent36Hrs")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReminderSent48Hrs")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NatureOfException")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficerEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TransactionCount")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlExceptionTracker");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("CollaboratorEmail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Collaborators")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueSummary")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NoOfActionOwners")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfCollaboration")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InternalControlModel");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.OperationControl.OperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ActionOwnerResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionPoint")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExceptionCategory")
                        .HasColumnType("int");

                    b.Property<string>("ExceptionDescription")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsApprovedAsException")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApprovedAsObservation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExceptionForActionOwner")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExceptionReAssignBySupervisor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent1")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReminderSent3")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationActivity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReAssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReAssignedOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReassignOfficerEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequestedEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResolutionStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionCallOverType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AAFML")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RFL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMCapitalAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ARMCapitalEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHILL")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHILLEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHoldingCompany")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TreasurySales")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMIM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ARMRegisterar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BDOrIMRetail")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FundAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Fundaccount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMUnit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OperationControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationSetlement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RetailOperations")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvestmentBanking")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StockBroking")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCustomerExperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InfoSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMTAM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrivateTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AssessmentOfDigitalInitiativeList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AssessmentOfDigitalInitiativeList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditScoped")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("CommenceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsAuditAnnouncementMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recipient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecipientUnitEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterEmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Salutation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SalutationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkApproach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditAnnouncementMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDesignOrEffectively")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOrRecurring")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AuditFindingAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditPlanningMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImplementationPlan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Policies")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PriorAuditObservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RegulatoryConsideration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskIdentified")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeAndControlTesting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SystemOverview")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditPlanningMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoPlanningTimeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsibility")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tasks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditPlanningMemoPlanningTimeline");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditProgramCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ControlObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FindingStatus")
                        .HasColumnType("int");

                    b.Property<string>("InformationRequired")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkPaperInitiated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReviewProcedure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RiskDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkpaperStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessRFL");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldingCompany");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMIMUnit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityInvestmentBanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditUniverseARMSecurityInvestmentBanking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AuditUniverseARMSecurityResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteePrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BusinessManagerConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DirectorConcern")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEMCRated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagementRated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverAllComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("CitationAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId");

                    b.ToTable("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceARMCapitalId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessRiskRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFindingRaised")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DetailedFindings")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("EngagementName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Entity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Evidence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Level2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ManagmentResponseAsAtTimeOfEngagement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OPRStatus")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportingQuater")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("RevisedDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusLevel")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("WorkStream")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("ConsolidatedAuditFindingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityToAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidatedAuditFindingId");

                    b.ToTable("ConsolidatedAuditFindingActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DigitalFinancialService")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("DigitalFinancialServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmcRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("EMCConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditScope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AuditType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BriefBackgroundObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("BusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("CommunicationProtocol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("KeyRisk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Mandate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibilityOfInternalAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ResponsibleExecutive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DurationAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DurationTiming")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterAuditExecutionDuration");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDistributionListBusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportDistributionListTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialARMCapitalId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialAgribusinessReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("FinancialHillReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialReportingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("FinancialSecurityReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("FinancialTrusteeReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("InformationRequest")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool?>("InformationRequirementCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId");

                    b.ToTable("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PreviousRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("InternalAuditRatingReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("AssessmentOfDigitalInitiative")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DetailedFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutiveSummary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("GoodPractiseInclude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OtherImprovementArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("OverAllManagementComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReportComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Scope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("SignedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId");

                    b.ToTable("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId");

                    b.ToTable("ManagementConcernARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AAFML")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RFL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMCapital")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMCapitalId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMHill")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ARMIM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ARMRegistrar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BDOrIMRetail")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FundAccount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FundAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IMUnit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OperationControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OperationSettlement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RetailOperation")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("InvestmentBanking")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Research")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("StockBroking")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommercialTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrivateTrust")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DigitalFinancialService")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernDFSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernDFSId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitDFSRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernDFS");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementConcernRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMCapitalId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Academy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CTO")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Compliance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CorporateStrategy")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomerExperience")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DataAnalytic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FinancialControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("IT")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InformationSecurity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("InternalControl")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Legal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MCC")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("ManagementConcernDFSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProcurementAndAdmin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RiskManagement")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Treasury")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernDFSId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceDFSRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionPointToResolve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ManagementResponseAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHoldingCompanyRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHoldingCompanyRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ObservationListAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationARMCapitalId")
                        .IsUnique();

                    b.ToTable("OperationARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessArmHolco");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("OperationDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMUnitRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("OperationSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceComplianceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceDataAnalyticRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceFinancialControlRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("OperationTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastruCTOreDowntime")
                        .HasColumnType("int");

                    b.Property<int>("InadequateProfilingOfClientsToEffectivelySellProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntelleCTOalProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("RatedBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDetailfindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ReportDetailfindings");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ForAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ForDistribution")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyARMCapitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyARMCapitalId")
                        .IsUnique();

                    b.ToTable("StrategyARMCapitalRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessArmHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyDigitalFinancialServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyDigitalFinancialServiceId")
                        .IsUnique();

                    b.ToTable("StrategyDigitalFinancialServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyImBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("StrategySharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceDataAnalytic");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCTO");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunCTOatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstruCTOredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFl")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAgribusinessAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMCapital")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMCapitalBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMCapitalBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditARMCapital");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasurySale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinancialService")
                        .HasColumnType("int");

                    b.Property<Guid>("DigitalFinancialServiceBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DigitalFinancialServiceBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditDigitalFinancialService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDPWMIAMIMRetail")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTAM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastBusinessARMTAMAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastHillAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSecurityAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTO")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<int>("Corporatestrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customerexperience")
                        .HasColumnType("int");

                    b.Property<int>("DataAnalytic")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmind")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSharedServiceAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastTrusteeAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductOwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductRiskAssementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductRiskCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductRiskAssementId");

                    b.ToTable("ProductAssessRisk", (string)null);
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuestionOrRecomendation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReseasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductRiskAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BusinessEntity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7476),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7484),
                            IsDeleted = false,
                            Name = "ARMIM"
                        },
                        new
                        {
                            Id = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7495),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7497),
                            IsDeleted = false,
                            Name = "ARM Trustees"
                        },
                        new
                        {
                            Id = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7499),
                            IsDeleted = false,
                            Name = "ARM Harith Infracstrure Investement Limited"
                        },
                        new
                        {
                            Id = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7501),
                            IsDeleted = false,
                            Name = "Shared Services"
                        },
                        new
                        {
                            Id = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7502),
                            IsDeleted = false,
                            Name = "ARM AgriBusiness"
                        },
                        new
                        {
                            Id = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7514),
                            IsDeleted = false,
                            Name = "Mixta Nigeria"
                        },
                        new
                        {
                            Id = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7516),
                            IsDeleted = false,
                            Name = "ARM Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("f93b6763-93d7-41d2-9a4c-4929d359b69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7518),
                            IsDeleted = false,
                            Name = "ARM HIIL"
                        },
                        new
                        {
                            Id = new Guid("fee31ed7-4adf-4d03-8fd0-b3144b42865a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 291, DateTimeKind.Utc).AddTicks(7519),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlternativeWorkarounds")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyNonElectronicVitalRecords")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationsUsedToRunProcess")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessProcessDescriptionSummary")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerExperience")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinancialImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyVendors")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAllowableOutage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MinimumBusinessContinuityObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherProcessesOrPeople")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryRecoverStrategyAndSolution")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecoveryPointObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecoveryTimeObjective")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegulatoryOrLegal")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteWorking")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reputation")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPartyImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BIAUnitProcessDetails", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BIAUnitProcessDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BIAUnitProcessDetailsId");

                    b.HasIndex("UnitId");

                    b.ToTable("BIAUnitProcessDetailsBusinessUnitToRunProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("BusinessImpactAnalysis", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessImpactAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisId");

                    b.HasIndex("UnitId");

                    b.ToTable("BusinessImpactAnalysisUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessImpactAnalysisUnitJson")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BusinessImpactAnalysisUnitLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessEntityId", "Name")
                        .IsUnique();

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4262),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4268),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4280),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4283),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4286),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4289),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4291),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4293),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4296),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4307),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4311),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4313),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4315),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4317),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4321),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4323),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4325),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("2b4752e0-89e3-45ab-b4d6-f3809bd9c015"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4327),
                            IsDeleted = false,
                            Name = "ARM Security"
                        },
                        new
                        {
                            Id = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4332),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4334),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4336),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4338),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4340),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4342),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4344),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4346),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4350),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4352),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4353),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4355),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4357),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4359),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4361),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4363),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4366),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4368),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("2214335d-9ca8-4ac9-8fe1-352deda923bf"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4370),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4372),
                            IsDeleted = false,
                            Name = "Operations Settlement"
                        },
                        new
                        {
                            Id = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4375),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4377),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4379),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4381),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4386),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4388),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4390),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4392),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4394),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4396),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4398),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4400),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4403),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4405),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4413),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4415),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1777e6a2-05bc-4322-81f0-10a205779214"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4417),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("427b8268-2d8b-4686-b677-69de2a46a459"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4419),
                            IsDeleted = false,
                            Name = "Treasury Operations"
                        },
                        new
                        {
                            Id = new Guid("f663d307-7d4d-4261-9f7e-e8fe6645ba18"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4421),
                            IsDeleted = false,
                            Name = "Treasury Sales"
                        },
                        new
                        {
                            Id = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4423),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4427),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4429),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4430),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4432),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4434),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4436),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4438),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4440),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4443),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4445),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4447),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4449),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4451),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4453),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4455),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4457),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4460),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4462),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4464),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4466),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4468),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4470),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4472),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4474),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4477),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4479),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4481),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4483),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4484),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4487),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4488),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4490),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4494),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4496),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4497),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4499),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4508),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4510),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4512),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4514),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4517),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4519),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4521),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4523),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4525),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4527),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("865be81a-ebe9-4c50-b5b9-9c07c28b1d9f"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4529),
                            IsDeleted = false,
                            Name = "Company Secretariat"
                        },
                        new
                        {
                            Id = new Guid("252cf529-9e73-4257-a718-d9cf51251ae0"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4531),
                            IsDeleted = false,
                            Name = "Environmental, Social and Governance"
                        },
                        new
                        {
                            Id = new Guid("37d376e3-5e1f-42a7-9d77-e63f07ca4475"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4534),
                            IsDeleted = false,
                            Name = "Data and Insights"
                        },
                        new
                        {
                            Id = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4536),
                            IsDeleted = false,
                            Name = "ARM Agricbusiness Fund Manager Ltd"
                        },
                        new
                        {
                            Id = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4538),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4540),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4542),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4544),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4546),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4548),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4551),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4553),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4555),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4557),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4559),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4561),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4563),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4564),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4568),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4570),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4572),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4574),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4575),
                            IsDeleted = false,
                            Name = "Design & Construction"
                        },
                        new
                        {
                            Id = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4577),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4579),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4581),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4585),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4587),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4589),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4591),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4592),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4594),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4596),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4604),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4608),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4609),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4611),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4613),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4615),
                            IsDeleted = false,
                            Name = "Corporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4617),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4619),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4621),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4624),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4626),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4628),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4630),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4632),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4634),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4636),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4638),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4641),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4643),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4644),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4646),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4648),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4650),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4652),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4654),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4657),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4659),
                            IsDeleted = false,
                            Name = "Legal and Compliance"
                        },
                        new
                        {
                            Id = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4661),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("840c2b0e-4146-41fb-a771-ede34bd0d915"),
                            BusinessEntityId = new Guid("f93b6763-93d7-41d2-9a4c-4929d359b69c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4663),
                            IsDeleted = false,
                            Name = "ARM HIIL"
                        },
                        new
                        {
                            Id = new Guid("b0b881eb-8beb-412e-8b63-ebfb5fbe0c0a"),
                            BusinessEntityId = new Guid("fee31ed7-4adf-4d03-8fd0-b3144b42865a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 299, DateTimeKind.Utc).AddTicks(4666),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("RiskEventType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4499),
                            IsDeleted = false,
                            Name = "Internal Fraud"
                        },
                        new
                        {
                            Id = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4505),
                            IsDeleted = false,
                            Name = "External Fraud"
                        },
                        new
                        {
                            Id = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4511),
                            IsDeleted = false,
                            Name = "Employment Practices and Workplace Safety"
                        },
                        new
                        {
                            Id = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4513),
                            IsDeleted = false,
                            Name = "Clients, Products and Business Practices"
                        },
                        new
                        {
                            Id = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4515),
                            IsDeleted = false,
                            Name = "Disasters and Other Events"
                        },
                        new
                        {
                            Id = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4516),
                            IsDeleted = false,
                            Name = "Business Disruption and System Failures"
                        },
                        new
                        {
                            Id = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(4518),
                            IsDeleted = false,
                            Name = "Execution, Delivery and Process Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("NAME");

                    b.Property<Guid>("RiskEventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeId");

                    b.ToTable("RiskEventTypeCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1895),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1904),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1908),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("3429aad4-e734-44ac-919c-af9758979aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1912),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1914),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1919),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1921),
                            IsDeleted = false,
                            Name = "Safe Environment",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1923),
                            IsDeleted = false,
                            Name = "Diversity and discrimination",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1925),
                            IsDeleted = false,
                            Name = "Employee relations",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1929),
                            IsDeleted = false,
                            Name = "Suitability, disclosure and fiduciary",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1931),
                            IsDeleted = false,
                            Name = "Improper business or market practices",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1934),
                            IsDeleted = false,
                            Name = "Product flaws",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1936),
                            IsDeleted = false,
                            Name = "Selection, sponsorship and exposure",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1938),
                            IsDeleted = false,
                            Name = "Consulting/Advisory Activities",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1950),
                            IsDeleted = false,
                            Name = "Mismanagement of classified company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("5e969527-3694-477a-8f17-40e53039966c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1952),
                            IsDeleted = false,
                            Name = "Misrepresentation of company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("635ca6d7-708f-4349-a483-ecf00679c489"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1955),
                            IsDeleted = false,
                            Name = "Poor Quality of Media Production",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1959),
                            IsDeleted = false,
                            Name = "Natural causes",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("611b88d4-5289-4da1-a78d-420f236257dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1961),
                            IsDeleted = false,
                            Name = "Accidents and public safety",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1964),
                            IsDeleted = false,
                            Name = "Retroactive effects and improper activities by third parties",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1966),
                            IsDeleted = false,
                            Name = "Human Acts",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1969),
                            IsDeleted = false,
                            Name = "Disputes with Regulatory Authorities or other Governmental Bodies",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1972),
                            IsDeleted = false,
                            Name = "Interruption in services provided by external providers",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1974),
                            IsDeleted = false,
                            Name = "Inadequacy Inefficiency Malfunction or Block of Technology Systems",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1977),
                            IsDeleted = false,
                            Name = "Transaction capture, execution and maintenance",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(1999),
                            IsDeleted = false,
                            Name = "Monitoring and reporting",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("81f7e998-9b34-4092-8590-a551647de2c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(2002),
                            IsDeleted = false,
                            Name = "Customer intake and documentation",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(2004),
                            IsDeleted = false,
                            Name = "Customer account management",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(2006),
                            IsDeleted = false,
                            Name = "Non-client counterparty breaches",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(2008),
                            IsDeleted = false,
                            Name = "Vendors and suppliers",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(2010),
                            IsDeleted = false,
                            Name = "Other Process breakdown",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("RiskEventTypeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeCategoryId");

                    b.ToTable("RiskEventTypeSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e022df02-5e66-4aaf-ba91-e6c305488941"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2405),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("3aa6efdd-d027-47f6-a187-6c10323bacea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2411),
                            IsDeleted = false,
                            Name = "Theft",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("70114ff3-d4e5-4d89-9d14-40e5ce596bba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2413),
                            IsDeleted = false,
                            Name = "Cash management shortages",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("0f80dd0c-59a7-4265-b0a2-d464a0fd9ac8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2426),
                            IsDeleted = false,
                            Name = "Extortion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("17c1fdec-20a9-4857-b701-25cfd1c937ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2428),
                            IsDeleted = false,
                            Name = "Embezzlement",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("6ce94b8e-05cc-45b6-adff-4032b4c81312"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2430),
                            IsDeleted = false,
                            Name = "Forgery",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("b10faed0-a0ae-471b-a648-728a43952206"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2432),
                            IsDeleted = false,
                            Name = "Cash suppression",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("7fb27f49-0db6-45ea-b9e1-0a87f41e442d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2434),
                            IsDeleted = false,
                            Name = "Cheque conversion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("dbacc427-e7b6-4f27-8bf4-1780a6c147a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2436),
                            IsDeleted = false,
                            Name = "Manipulation of source documents",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("eb999fa5-86c8-4ceb-8639-465fb0ed28ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2437),
                            IsDeleted = false,
                            Name = "Manipulation of customer accounts",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("9e4573bd-7181-4ca9-8c05-adb1bc0ca7f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2439),
                            IsDeleted = false,
                            Name = "Teaming",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("9b2b10c1-fe5c-40b4-8af5-98d2d0da69e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2443),
                            IsDeleted = false,
                            Name = "Illegal sales of securities from Clients portfolio",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("32662562-a81c-4e5d-84e7-f75272120b43"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2445),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("4e378e75-45f1-4711-b043-8c08a2b4756c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2447),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("4205a763-65e7-4813-8cd2-c05e63b851de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2449),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("2561b004-66a3-4c9b-af32-1fe402aa2a6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2451),
                            IsDeleted = false,
                            Name = "Misappropriation of company assets",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("b02f4087-8ac4-475c-9497-4f1dbcd271fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2472),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("8407a4b8-a803-4f16-8f0b-b9b0ba221eee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2474),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("c6645419-ae58-417a-84d2-7a610df84d72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2476),
                            IsDeleted = false,
                            Name = "Intentional mispricing of products",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("8609ca58-1bb2-45bc-99ba-79ba560ffc0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2479),
                            IsDeleted = false,
                            Name = "Destruction of source documents",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("2b5d22b1-1759-419c-b78b-f24f7dc31c67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2481),
                            IsDeleted = false,
                            Name = "Unauthorised income waivers",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("84d783e7-827f-444d-920c-ccf56a88f779"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2483),
                            IsDeleted = false,
                            Name = "Granting unauthorised credit",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("cc084f88-cd03-49b2-a971-e089d4f1fb95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2485),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("0ab2025d-4e46-4f86-85c2-26e98bab8b70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2486),
                            IsDeleted = false,
                            Name = "Cash theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("f925ae36-7303-4e3b-8203-3cf1084f464e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2488),
                            IsDeleted = false,
                            Name = "Pool car theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("c00bf719-9775-4865-83f8-73b70a4175a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2490),
                            IsDeleted = false,
                            Name = "Cheque forgery",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("24607926-5889-46aa-a8fb-35217775a5ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2492),
                            IsDeleted = false,
                            Name = "Cheque fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("8d3d23ad-3156-4edc-a394-f3e914adf9c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2496),
                            IsDeleted = false,
                            Name = "Cheque kiting",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("4176d5fe-d76b-46ea-82df-c14cf90fbc2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2498),
                            IsDeleted = false,
                            Name = "Fake currency fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("90d7064b-de61-4832-9e30-d390a32f9cc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2499),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("5a496022-9740-414c-8fbc-6b0d859578a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2501),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("3f096eb1-e9b4-48c1-b51d-6185d3e1aa32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2503),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("80a750bd-6508-44c5-84b5-559072f56917"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2505),
                            IsDeleted = false,
                            Name = "Account take over / impersonation",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("0409f06b-2118-456e-92f6-f60e44151405"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2507),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("15eff19a-fb58-46e6-b207-334e580dbdf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2509),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("38b23f3a-0b10-4e03-8917-90c0270e4dc5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2513),
                            IsDeleted = false,
                            Name = "Employee health and safety violations",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("d969b081-a8c9-4bea-b4b2-eb1d02c1b985"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2514),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("7129d489-fc0e-4c9c-aab9-f8a4264278a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2516),
                            IsDeleted = false,
                            Name = "Discrimination on account of religion, nationality, race",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("9d540898-e8ca-46c7-8bcb-6f9ba7aa3a02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2518),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("f3341811-5a6c-4a34-b422-4f976ad09582"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2520),
                            IsDeleted = false,
                            Name = "Employee disputes and investigations",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("fce44848-5542-4dee-ae4d-347e3f912d41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2521),
                            IsDeleted = false,
                            Name = "Mistakes in the administration of employee compensation, benefits, or termination",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("fe345823-ec2b-485f-a881-9f0d7accdab2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2523),
                            IsDeleted = false,
                            Name = "Organised labour activities",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("a48c5fbf-08cd-4a39-af2e-dae90d2366cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2525),
                            IsDeleted = false,
                            Name = "Fighting between staff",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("9a11a45f-efc6-4f0a-b795-eed292def995"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2529),
                            IsDeleted = false,
                            Name = "Fiduciary breaches and guideline violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("c48799c0-8bde-44e2-b00d-b8dd8f192e44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2531),
                            IsDeleted = false,
                            Name = "Customer suitability violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("3d56edd3-3923-4589-818d-2f9a01dde13d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2533),
                            IsDeleted = false,
                            Name = "Disclosure / misuse of confidential client data",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("41c9ccab-bcfb-432e-9d97-cb9a8cb46883"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2534),
                            IsDeleted = false,
                            Name = "Breach of regulatory guidelines on foreign exchange transactions / suspicious transactions",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("de9c8f1f-c965-46b2-845f-b9d5924a1def"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2536),
                            IsDeleted = false,
                            Name = "Aggressive selling",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("966193d3-d0d7-462d-8f69-d9d635b8f142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2538),
                            IsDeleted = false,
                            Name = "Account churning",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("999f43d4-2ae4-4330-ab77-7550f0c0ed39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2540),
                            IsDeleted = false,
                            Name = "Unlicensed activities",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("7af58733-e8c7-4fbf-9b54-335a511f1c73"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2542),
                            IsDeleted = false,
                            Name = "Money laundering",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("b24c4426-28e3-42bd-8d7e-583882e8a27a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2545),
                            IsDeleted = false,
                            Name = "Tax non-remittance",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("9bbd18ea-100f-439b-baad-e40489a04b78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2547),
                            IsDeleted = false,
                            Name = "Product defects (e.g. Marketing of unauthorised products)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("ed465448-c14a-4a10-8b86-cc48e13ce426"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2549),
                            IsDeleted = false,
                            Name = "Model errors (e.g. product conception, methodology, or pricing errors)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("d1efb11a-bf80-4e40-801f-e25656cb9e70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2552),
                            IsDeleted = false,
                            Name = "Non - compliance with internal guidelines when investigating a client",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("c3dce348-4fd1-4d44-9e29-bfc735f527c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2554),
                            IsDeleted = false,
                            Name = "Client exposure (loan) limits exceeded",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("b4a9e2e4-071e-4e86-85be-c01b0aa5951b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2556),
                            IsDeleted = false,
                            Name = "Penalties / Fees incurred for contractual disputes / transgressions",
                            RiskEventTypeCategoryId = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b")
                        },
                        new
                        {
                            Id = new Guid("b4f1ea00-20c6-4d31-ac56-cf3e025fec8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2558),
                            IsDeleted = false,
                            Name = "Competitors obtaining information about the firm's initiatives and business strategy",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("3d7b2350-5731-43b9-965b-beb9c41b01f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2559),
                            IsDeleted = false,
                            Name = "Misplacement of client information and correspondence",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("ee2b37c3-ca7e-4124-b047-d1fee4ea0274"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2563),
                            IsDeleted = false,
                            Name = "Errors in ARM's publications and annual reports",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("04758aec-736c-4616-830e-27832cc5d276"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2565),
                            IsDeleted = false,
                            Name = "Misquotes by public media sources",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("5c7dbac3-7ffa-4829-999d-cf80580a9ddf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2567),
                            IsDeleted = false,
                            Name = "Inferior production of corporate gifts",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("01d4d919-ad4a-476e-b0ac-b9e3607afc24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2568),
                            IsDeleted = false,
                            Name = "Substandard /Offensive advertisements and promotional activities",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("dcf423f0-1729-44ef-bbd9-c6a5d86d0601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2570),
                            IsDeleted = false,
                            Name = "Poor quality of Annual Reports prints",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("f38b7677-60a1-4057-a593-1a55e30ecb99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2572),
                            IsDeleted = false,
                            Name = "Fire",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("154de15a-febf-4c0a-a342-f859ed42f288"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2574),
                            IsDeleted = false,
                            Name = "floods",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("16f267dc-0a8f-4f14-bf3d-f046f4f474c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2576),
                            IsDeleted = false,
                            Name = "hail damage",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("39a4eaca-6e98-409b-bc09-2917ffac96cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2582),
                            IsDeleted = false,
                            Name = "General responsibility for injuries caused to third parties eg. company Vehicle accidents",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("26657f87-c727-4f04-80c6-7adc3d5d44b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2583),
                            IsDeleted = false,
                            Name = "Electrical surges",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("c8af572c-c69c-4acb-ac76-43171c579e44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2585),
                            IsDeleted = false,
                            Name = "Fire outbreak",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("0a1c12be-1d2a-43fc-899d-944fe1c288a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2641),
                            IsDeleted = false,
                            Name = "Water spillage",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("4f7583be-355b-4c78-81ea-7bf239cfa9e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2643),
                            IsDeleted = false,
                            Name = "Smoke detectors not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("2e940939-a4e4-4d1b-bc19-3d5880a23ea4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2645),
                            IsDeleted = false,
                            Name = "Fire alarms not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("8c0b3d7b-26cf-49d1-a598-808ff3049cbc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2646),
                            IsDeleted = false,
                            Name = "Political interference in the companys operations",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("f1e87281-2ffa-4645-95a3-767c9a230e99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2648),
                            IsDeleted = false,
                            Name = "Launch of competitive products by agents",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("d538c5e2-cf05-47f4-bbc2-bab70480e41c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2652),
                            IsDeleted = false,
                            Name = "Court debt judgements",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("31aefe84-54aa-4fe5-8a8a-430341f52f82"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2653),
                            IsDeleted = false,
                            Name = "Out-of-court settlement costs",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("1bf1b3d3-a77e-4f9b-86be-731439841bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2655),
                            IsDeleted = false,
                            Name = "Litigation expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("5adea67d-faeb-4b2f-b4c8-fb22be72b606"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2656),
                            IsDeleted = false,
                            Name = "Debt recovery expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("51c6001b-fd9e-41c6-9c6d-428202819ab1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2658),
                            IsDeleted = false,
                            Name = "Fines & penalties",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("1ceef230-4619-49ae-8fa4-3a860a747fb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2660),
                            IsDeleted = false,
                            Name = "Loan writeoff expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("66406346-520f-4b68-954f-1abf26b9bca8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2661),
                            IsDeleted = false,
                            Name = "Vandalisation of company property",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("f465d31e-e7e9-484e-aa4b-c46ba0eff4ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2663),
                            IsDeleted = false,
                            Name = "Sabotage",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("f9406863-99d5-434b-8de4-05f8dc415e01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2666),
                            IsDeleted = false,
                            Name = "Robberies",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("dea34fa8-3364-4506-a1a3-1c98031c1390"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2669),
                            IsDeleted = false,
                            Name = "Missed deadlines",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("15d376df-84b2-4894-9009-c45ab20159e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2671),
                            IsDeleted = false,
                            Name = "undeserved fines and licence supensions",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("21d7ce68-bde5-4a12-97d5-85dbb5fb8888"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2672),
                            IsDeleted = false,
                            Name = "Interruption in communications",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("475edb66-798c-4756-8b38-a4a1f18ee8a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2674),
                            IsDeleted = false,
                            Name = "Power outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("e5f45cbf-4cf9-4ef8-9257-ea9ede63a3d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2675),
                            IsDeleted = false,
                            Name = "Inability to process transactions",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("ac1c24cc-ca5b-493d-8972-4c6d0d94eccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2677),
                            IsDeleted = false,
                            Name = "Telecommunication link outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("6119ac3c-026e-4a17-8af3-dc352c45e5c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2679),
                            IsDeleted = false,
                            Name = "CCTV outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("69bec280-fcb1-4e50-8b4d-fe4337c4013e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2682),
                            IsDeleted = false,
                            Name = "System downtime",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("1876f2ba-0352-4b4b-9cc9-3f941a4dd867"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2683),
                            IsDeleted = false,
                            Name = "Automated data processing errors",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("e8743f46-7190-40e0-9e9a-c615de52a93d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2685),
                            IsDeleted = false,
                            Name = "Errors in the maintenance of information",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("c0cd1b0c-0a38-47b8-a70f-ec55dddf6458"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2686),
                            IsDeleted = false,
                            Name = "Data entry errors (payment instructions, rates)",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("a2ed4284-3b1f-418c-b9f7-d1a7a792fc5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2688),
                            IsDeleted = false,
                            Name = "Transaction not booked",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("f3707386-5ff5-4f35-84c4-31258f5368e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2690),
                            IsDeleted = false,
                            Name = "Alteration not countersigned",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("dc819b31-06b7-4856-a90a-8c46eb620615"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2691),
                            IsDeleted = false,
                            Name = "Transaction not registered",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("dee77e1b-28ba-4ee5-a25d-a324d1c637d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2693),
                            IsDeleted = false,
                            Name = "Amount in words different from figures",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("27c5eebb-e9d9-494e-b9dc-706cd5b75d75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2696),
                            IsDeleted = false,
                            Name = "Application of wrong interest or exchange rates",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("4333e1f9-c5ff-4f2c-8131-e046083f0a8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2698),
                            IsDeleted = false,
                            Name = "Failure to regularise customer instructions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("84d85b42-c5f5-43e3-9166-a2fd1ff5ce6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2699),
                            IsDeleted = false,
                            Name = "Data entry errors",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("7c775464-d2f7-46ff-bb93-4557b8220bad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2701),
                            IsDeleted = false,
                            Name = "Processing undated transactions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("c794b437-65c2-41c5-9c0e-a7e7052c8e5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2702),
                            IsDeleted = false,
                            Name = "Improper identification of beneficiaries",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("a2c85e9b-7ef2-4903-8f66-aae386e5016d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2704),
                            IsDeleted = false,
                            Name = "Wrong classification of accounts",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("10e3882e-ce67-48cc-9915-c23eb094faea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2706),
                            IsDeleted = false,
                            Name = "Incorrect client records",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("2d14e61e-b96e-42df-ace3-040b75a2890e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2707),
                            IsDeleted = false,
                            Name = "Inaccurate information sent to clients / external parties",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("4d7e4052-2a83-40d3-af7e-48c6be9114a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2711),
                            IsDeleted = false,
                            Name = "Client permissions/disclaimers missing",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("f3a8f8e2-e2a2-430f-8c98-b586d797778e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2712),
                            IsDeleted = false,
                            Name = "Contractual documents missing / incomplete / erroneous",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("b17b673f-deaa-4ae1-a509-216b8e64a141"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2714),
                            IsDeleted = false,
                            Name = "Improper account setup",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("838432da-f88a-4b52-87fb-3f7eaba0ca71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2715),
                            IsDeleted = false,
                            Name = "Incomplete account opening documentation",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("60c1c78e-03ff-4c6a-8668-8d1b9bf210d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2717),
                            IsDeleted = false,
                            Name = "Failure to upload mandates",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("ca557388-a565-4f05-a99a-eb2f1b9039f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2718),
                            IsDeleted = false,
                            Name = "Unapproved access given to accounts",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("f795c0f8-ab5a-4c6e-9525-41250bc0b651"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2720),
                            IsDeleted = false,
                            Name = "Negligent loss or damage of client assets",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("1fbabc63-17c3-4e75-9fdb-a3eeec98719f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2721),
                            IsDeleted = false,
                            Name = "Failure of counter-party company to repay inter-company lending amounts on demand",
                            RiskEventTypeCategoryId = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472")
                        },
                        new
                        {
                            Id = new Guid("11aa0992-5053-49b7-86ff-df07872a9c1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2724),
                            IsDeleted = false,
                            Name = "Failure of vendors to deliver on contractual obligations",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("90428184-0507-4252-a3e1-91852ce9a7a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2726),
                            IsDeleted = false,
                            Name = "Disagreements over terms of outsourcing contracts",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("ddcaed69-d959-4439-95e8-8a0ae0687b5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2727),
                            IsDeleted = false,
                            Name = "Errors in Human Resources/ Administration processes",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("72ebf1dd-69bf-4b95-bfd5-b13b704f8100"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2729),
                            IsDeleted = false,
                            Name = "Procurement not authorised",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("51db702d-c1a4-42fd-8d82-5359c9d4eea3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 328, DateTimeKind.Utc).AddTicks(2730),
                            IsDeleted = false,
                            Name = "Disposal of Fixed asset not approved",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RCSAStage")
                        .HasColumnType("int");

                    b.Property<Guid>("RiskControlSelfAssessmentUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RiskControlSelfAssessmentUnitId")
                        .IsUnique();

                    b.ToTable("DocumentRSCAProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRSCAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentRSCAProcessJsonDump")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRSCAProcessId");

                    b.ToTable("DocumentRSCAProcessLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<string>("ColourEffectiveness")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Control")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRCSAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InherentRisk")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResidualRiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ResidualRiskRating")
                        .HasColumnType("int");

                    b.Property<string>("ResidualRisks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestResultAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<string>("TestToApply")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeLine")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRCSAProcessId");

                    b.ToTable("ProcessInherentRiskControl", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("RSCAProcess", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("664f4c24-5858-4c0e-93fc-42c8a2a70f60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7263),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("47118940-702b-4ee6-bc5e-1ca51d0c11c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7267),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("4eca6d0a-1448-450e-9725-571b5179da2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7270),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("5f32f263-5c59-4cbf-a5e1-4108c98e3295"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7276),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("70ff1c3d-c3d4-4e2d-82aa-52c596838e93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7278),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("055c00a6-dee5-4882-9d4a-52b9a061df49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7280),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("269c711f-a520-4312-a5d6-9564074da3e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7282),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("591dccc3-dde9-4be9-9f1e-a89ce0b17258"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7284),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("ecef5e0e-e9a8-4c16-b521-af7e5a00961a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7285),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("4a58af44-b76e-4acb-9a94-2fb95224add1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7287),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("8c93f93f-5819-4b7f-9b88-8203362c9887"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7332),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("4664408b-54a7-4d39-bc23-669d184ed3c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7337),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("7735af3a-6ab0-4227-9d0f-adf4393e12b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7338),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("53bab25e-2aa7-4ade-80df-60a4b25fe38e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7342),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("0be3568e-ec37-4c3c-a8f9-eaf9f30603e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7344),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("4e97d69f-bf28-46e6-ba08-99e7bf4b8092"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7345),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("74f257f5-b18f-4bee-b9a4-5e32e929ee10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7347),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("2de824fb-77a3-4498-a0fb-b1d77370112e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7349),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("7ba2cda0-de58-4a89-8d09-a5b6dbee4a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7351),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("701b9f74-391a-4aa9-9f80-992c219f7eac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7357),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("9e389a34-e3ec-471e-a217-ff5ab1bd347c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7358),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("7b2dea5f-078d-460c-b13a-7ec9007cc601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7360),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("fd76953b-c883-45b4-a2aa-47ecc84d6a61"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7363),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("1c3155cf-41de-450a-a8c7-149d3c55d0bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7365),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("99af2e36-e1ab-4000-bfbc-e0cd2f4c8eb7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7367),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("ce594e8e-dfd5-48b8-b521-47088bc26c4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7369),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("c20a9159-a6e3-4d44-abb4-f50c373c01ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7372),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("5cc8eebc-9871-4c05-9465-ccfc5f4dcc4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7376),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("5f3d188c-0e1b-47b4-a9e2-c85297fe91c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7378),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("a0c70435-f6f7-4a86-9520-8f3ce6e1938c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7379),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("4ef88b9f-ff10-4b4e-9d0d-d9a862c7b95e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7381),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("87677b12-a3a1-4116-b3ec-870e534b5537"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7383),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("2979ecac-520c-4571-a4ac-db1b797ffeb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7384),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("aebe2d45-fe39-42a6-b228-f00d5d6ddf9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7386),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("fdd3d591-8ff8-4d7d-80c9-3515f0aef0b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7388),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("2279b163-b2f7-4c01-9c75-154f327aba1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7391),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("015f8a71-8dba-47ac-98ce-49f5bdb59734"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7393),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("6b89751e-05e5-43ec-96ab-bfb291c07605"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7394),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("b6dc237a-091e-4df7-bc86-c9f9fc644198"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7396),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("706a76cb-8076-4c8e-a8ef-1fddda823ee7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7398),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("9a7c6da4-d72c-47d7-94c6-f9c7bc075ba8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7401),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("954c32ba-99f1-4a95-b5e3-022baf3c2064"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7403),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("ed547fd4-299a-4d3f-8fe2-e19189ac5879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7405),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("157554a0-ae17-4d39-896f-ec6c0bb68fab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7409),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("7df1c1ad-8613-43b7-85c8-8a3fbb8cc370"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7420),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("7f9b6b7c-a716-4929-b0e0-ac1f87d596d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7425),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("8e30c2be-5286-417d-b7e2-9c1fd8b4f00d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7426),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("eaa474ad-2ee9-4005-a69f-90f3e99fa5ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7428),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("5e40a4b8-0b0a-451f-8290-94aa32cacc32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7430),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("f5a8a421-7aa0-4b37-9dad-fd5bd79fcff4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7432),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("9bd8bf18-8fd4-4cc2-962e-0cfa63babbc8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7434),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("d2277050-adef-4a68-b87f-bc41c85f53cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7440),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("8beb666d-8bfb-4286-971f-63997fdc47e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7442),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("4b3d195a-52a5-41e2-8a2f-fa31baa889c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7444),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("372dd89d-f825-440c-8203-434cdb7eb2fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7446),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("ac3af387-e880-4d30-99e5-391294c50f8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7449),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("f5205f92-cffa-46f5-9219-ea21b4b2ad8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7451),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("cc51ef65-6ae1-42d3-b52d-258650faaabb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7454),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("3e6d7119-b945-445b-9ca6-60b727858574"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7456),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("808eb4bc-b277-4dae-90ec-b88a356c5bee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7460),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("b4ca1768-a2e5-4079-94b0-10d0d0d7c05b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7462),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("58c6fbc8-68e8-44b6-945b-18214a58222f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7464),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("51133a8f-36e0-4203-a867-e0e5e6ab23e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7466),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("291568e8-c381-46ed-8467-7bf2ce3f7169"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7468),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("8ce00f9c-4e30-4a4e-b66a-20ed1c9a8c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7469),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("0e31f53b-edca-4c72-b22e-7de09d1b37fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7471),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("a1752c31-f408-4ef7-bafd-a032006c02fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7473),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("5dbbb099-5127-4845-b4e2-7154d401b43e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7477),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("b63a3f6c-c38a-4ace-ba38-8cc5928427dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7479),
                            IsDeleted = false,
                            Name = "Redemption/Withdrawals/Other Payments",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("9f4cd2fd-9154-4569-81ea-d1c1070bd383"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7480),
                            IsDeleted = false,
                            Name = "Subscriptions",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("3903c813-762a-4b02-af1e-b0c2d4c652b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7484),
                            IsDeleted = false,
                            Name = "Reference Letters",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("a27a08f5-335f-4dea-9eb6-41b6a55d13d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7487),
                            IsDeleted = false,
                            Name = "Statement/Valuation Requests & Quarterly Portfolio Reviews",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("d42623eb-7699-4818-9896-285b122aa667"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7489),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("698f88bc-53ce-4484-bc92-6b74af779f79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7490),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("6152e4ff-b1ce-4fc6-8265-ce6bf69e5c0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7492),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("a1fe096e-b88f-41d1-8038-892dfd0c3b40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7497),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("a6eff4f3-30ba-436f-a5a0-5384903ebe8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7499),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("d6f7b08e-c2c3-4a74-b78d-0b8a429e3004"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7500),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("9c9851a3-3ed4-47b2-9120-60a4c10c4b93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7502),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("dc06e952-1b4f-448f-8976-13bc7bece8de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7503),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("050c8cde-a0b8-439b-8e9d-1aafcb74d508"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7505),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("57375735-384e-4a73-8542-6d8da3f2334b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7507),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("3d9c722e-68a0-46e5-84fd-7aa32d8b5d03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7509),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("9ddf5b2a-53b7-4e8d-bcbf-8e58a22ceeb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7513),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("0e1d261b-b44b-4b25-be1e-4b6e1936eb88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7515),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("40f2f233-ec96-4a2d-818b-3471535ec5bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7517),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("65f560de-d6b9-4fa5-95e3-ae641ea09e29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7518),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("51c578c9-1630-429b-9f42-1540fae5d091"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7520),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("5a00890f-743b-49a8-a56e-8fccd2ba30f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7522),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("ac9c22f8-8d5b-42a6-96c6-2a192d181aea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7523),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("8d56f0cf-f7c3-40f0-8df0-dbf65efad88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7525),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("755393c4-657a-42a4-b1f7-482d0b17432c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7529),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("8e5e4edd-7c82-403e-99c6-70158606298e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7531),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("ffd54cc4-58c0-4a35-9867-57f46d7ef19f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7532),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2603574e-f5c2-4435-ab60-9b33ec2bf5c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7534),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("58059625-0550-4df7-8f3b-a2d4f2d30c84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7535),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("04e23c47-68f2-42cf-90c1-9b61c2475937"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7537),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("4c2ff86e-f1ad-4522-a465-dae49755ecd5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7539),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("b4813106-3287-4883-a42e-a9e68837fc77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7551),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("83ec07a4-3d47-4b8a-880f-acd088689529"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7555),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("0d8f6431-fcd7-49d7-9acc-cf638bb245c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7556),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("8ba1a99e-06b7-4735-90c6-caf9831174a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7558),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("7cffef48-b677-455e-ae1a-0b3cb625067b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7560),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("6f3a79fe-2714-4a95-9a9b-a38771f634bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7561),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("43484557-d143-4f1b-87ce-99e9d35af895"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7563),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("b52e62fc-08e6-40a9-90c5-b1a5605e8b37"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7565),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("25904c74-d8cf-46a0-973a-615d2bf65505"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7567),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("dfd5fc7f-a090-48ea-949e-493602647d53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7570),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("64e22baa-a4d4-482e-a34c-c49458844880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7572),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("f0c0bd9c-e9fd-48a4-bf3b-fd8d80a21980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7574),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("5206580c-4156-4be8-b7c3-55b835d81488"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7575),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("26153842-896f-46db-bf8e-c50b420a42d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7577),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("7dbaffa4-3868-410a-8097-efaa46e117ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7579),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("f249bf2f-a7b5-423f-b8e2-bf1999504c80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7580),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("39cf8f36-93ab-4b6b-930d-e1e3ad837f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7582),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("835ed7ea-5fff-42f1-a601-c1e7ad1dd14e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7585),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("8ee707f3-35fa-4902-9ec8-035cdbfd6b90"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7587),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("9fa9e1ef-fdcb-4a60-a903-f43ff69c68bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7589),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("f44a8909-1c15-46ba-b09b-0d9c0d3008d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7591),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("881969dd-fc09-4aee-a19a-41cdde5f8f4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7593),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("460fb871-9002-4c05-a537-5901451ea4f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7595),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("15cf59c3-abfe-437b-b6a1-dc80abc1b36f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7597),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("2614918a-5fc7-448f-ac1a-d3ecb74b9d29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7598),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("8ac55698-7235-4f81-96aa-003aeeb73977"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7602),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("c2162d9b-d245-464c-9bae-3f8c6519f465"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7603),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("484ebdcd-b9df-458b-b5d1-c31d7f84d71e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7605),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("40fbf9b4-e9b1-467b-8bef-bd0dff09c4a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7607),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("1c8fc11d-239a-4117-97b2-c4c4b79b772c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7608),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("bde4fd8f-9785-454d-be6a-967d7b6bca6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7612),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("b2118213-dfc0-48d0-9add-03ecffda22ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7614),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("58fe97e6-67d0-4553-88c6-65e187557f88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7616),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("c5a4f0de-1247-4814-a88b-808e4e9c1e70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7621),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("9d49b0da-e9d4-4cc6-8bf0-47bf006bbe47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7623),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("55ba4d87-6170-40ec-82a8-7f2afbd59f27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7625),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("56efa4eb-88cc-4992-adb6-699cc094c468"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7627),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("e2e23715-184c-422a-aa23-329f0827f9e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7629),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("6f217ff3-3a95-49dc-b077-5ed88cff9a7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7631),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("1faf5a3f-4d73-480c-8e77-7518734e473c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7633),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("5b198f55-09c7-4951-954a-571a94077f99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7635),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("18d2b091-be8a-4e7d-9fc9-3d8174e1419f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7639),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("511b2ac7-5f1e-4edd-a3f6-30800e2e563a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7643),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("85314ad8-6873-47ca-a73f-9958e1ffbd6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7645),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("a98adcb7-2afd-4577-9636-f10d501cfdbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7647),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("4cb93975-102e-41eb-8d21-378ff525b619"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7649),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("dca5f5dc-653f-49b5-a136-c380867aaf99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7651),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("227beb15-d56e-4983-8308-4fefafb1c719"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7675),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("5e7241a8-a82c-48cc-92ce-ba1f2dcd7205"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7706),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("402bdd92-0e05-4c7d-b1d5-9e00ee9d87ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7711),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("dd1f1f16-a060-40d6-9083-a504704bbd40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7713),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("b095e334-5a97-445b-af23-e0c6d4cb2add"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7716),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("f5ddb299-9ab6-4ad1-80b7-62f54ee89f1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7718),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("6b099a57-e535-4d95-9544-1a40bbccd059"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7732),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("655a8764-ebc0-42fe-95d2-8a58a2433c5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7735),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("2fe17829-380b-4a03-8642-acbe1b6f9d0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7738),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("e99b3908-394e-4634-9f18-e96b2a4d503a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7741),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("b3a5d831-0b4f-4a0e-9d8f-44a81fed9146"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7746),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("c8463318-659d-45d3-bc43-c2804ca568f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7749),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("509c4204-6cf5-4f94-bf64-5dfe057dcd10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7751),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("d12bfc05-2494-441c-add0-63519d3e81bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7753),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("11c085b9-dd58-41ab-8252-d6470de68cc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7756),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("320d6a27-8ebb-4107-9afd-e2c6f00af540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7759),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("1565d89b-3b28-416d-a299-9ea028123861"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7761),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("4b5abfd1-fc34-4c08-9676-136d1870966d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7763),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("dc2696d3-9a33-446a-9c4f-47c5d2e1f899"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7767),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("682ff4b6-26f9-424a-9296-bacf7597e2d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7768),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("c99407a4-e03e-4bb4-a5d2-3f6b40d66e8b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7770),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("4a8d9593-b05b-4d6d-9ea0-03e19b0a882f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7774),
                            IsDeleted = false,
                            Name = "Reconciliation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("769ce51f-b5a9-43ee-aa25-404c049a72f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7776),
                            IsDeleted = false,
                            Name = "Call over",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("e9e69b3d-5902-4b11-91a9-c3f240cee95d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7778),
                            IsDeleted = false,
                            Name = "Fee accrual validation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("0ede81c8-3dcb-4d74-92ea-e38cefd1f789"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7780),
                            IsDeleted = false,
                            Name = "GL reconciliation and review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("d69f14f7-50fc-48fb-8fc8-6a57263c8335"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7782),
                            IsDeleted = false,
                            Name = "Valuation and pricing review, EOD activities review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("afe9c7ad-bad6-400e-a58f-5569a49a59d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7790),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("ddef8680-ba3f-42bd-876f-cfaed82df21c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7792),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("e7239cac-f13e-4b5a-8ddb-abe767db2f39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7794),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("4c402298-f505-4ee6-b311-0791decc4a24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7796),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("931ab669-a6e2-4831-aaf9-7cbf5956ad6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7798),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("6e3ca09b-13e2-4f3a-ba87-fffc37a0992a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7800),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("fbecffaf-cca1-4f7b-8cea-ad202bb0a34a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7802),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("214f932c-9187-4a02-87e7-679148410942"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7804),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("bd9efded-1b81-45bd-9f62-9c07280714df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7808),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("7d23408d-60e2-4c30-84a1-f6291df574c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7810),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("4d601d94-1b46-45a4-860f-63bc0b5b4aff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7812),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("4d18d890-31bf-4884-ad00-fe3564089b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7814),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("9ca4775e-40f9-4f0d-9000-bfb73943207e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7816),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("b968f9da-5553-40e1-a64d-1d071b89e87a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7818),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("5569b9c4-822c-4e0b-b852-5d1f36e4d78a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7821),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("71b23ce4-c8eb-4221-a3ce-e5be4675a890"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7823),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("d54db3d3-1752-4276-a37c-41508e41f2ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7828),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("d22b20a0-6d32-4725-b7a6-ce9b897e6efb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7830),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("7e641c67-0382-43f8-8497-a5d8d6303108"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7832),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("0037c8a1-ee7d-4faa-9548-95f3e9d6054a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7835),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("346f7891-2b27-47a4-a4a9-085db1cab4e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7837),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("154f55cd-4f04-408f-8b4a-40c522916d0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7839),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("01146ac8-5d01-4390-ac45-ca4c08e9b075"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7841),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("32964a36-c766-45d0-ae35-6fde3e359c96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7843),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("84f5e867-1cba-44b3-a72e-9289da15095d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7848),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("c5ad7b30-5c56-4ed7-a2a8-e362cf03420a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7851),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("a0d2ac26-cd80-4d22-8e80-fd7c8c86095f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7853),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("60283e10-2474-490a-b690-5c87ea7776dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7855),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("5a40ad11-5b4d-4512-b764-156279ba62ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7857),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("2f5740f6-4bbc-4fb5-957e-0d5d1ba59a8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7859),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("f878d531-0240-42b5-95e3-6c32d4b6c5a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7862),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("06bcc461-e1ea-4fff-b840-a896a3e88c1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7864),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("bfab6ace-2c4c-4253-b01d-0cd9e5566757"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7867),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("c7df9302-0bfe-4674-9021-0b75da73a96a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7869),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("9d0bae6a-0139-4ff5-a8a3-e119304f8a57"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7882),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("56457fd1-ea81-414c-b5c5-5f36b0652791"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7884),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("fc9b0bc2-3519-4709-80ab-28a69e09838d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7886),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("c88188d3-f90b-4be4-a319-67883553d136"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7888),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("83bc57f1-f889-4e55-874d-fc4f7781f6aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7890),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("1c0a4c10-381a-4f01-b7bf-37e80bb716b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7892),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("d16152eb-0e2c-4dc5-9c8c-c16bd7488ae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7896),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("20878b13-8d8f-4740-a83f-d331f40ce5cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7898),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("a6c2cde0-f763-4eff-8d0d-f4e9021ec53c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7900),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("341fc033-6e9f-4011-a0ee-1657f4e887a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7901),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("6726024a-868b-4ddf-9d7b-d64a712eaa66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7904),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("6c49eef3-ef03-4d60-ac00-e13e8ac7af27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7905),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("7abc1dfc-ae05-4473-8e8a-37e998551191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7907),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("bac78a5d-0d3f-4bb0-88d9-999bc0fe857e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7909),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("349b1fdc-39f4-4553-9f29-d3c925edf4a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7914),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("1ae6b628-5d27-4070-b90e-38c54f79042e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7915),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("b67645fc-9bc8-428d-90aa-62d3d4595772"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7917),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("4b22441f-554e-4b45-94bf-1c446b95324b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7919),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("9dbe2e1d-7f73-4370-9fad-c45cc4ebd1e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7921),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("f16efffb-8ada-49da-9e05-d712c5b57f0f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7923),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("a803c1c3-f23f-47bc-9803-0c4117f0c486"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7925),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("e49aa7eb-7a80-4400-bcc5-691ef19676e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7927),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("311278d9-de65-4ab9-94bb-083737d435a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7932),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("5e0eef01-be4e-4049-9a78-a37f3eb23f40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7934),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("3f7945b5-954f-4347-8a92-22af4a170575"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7936),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("bea7f2a5-1a5c-486c-b108-b8a2c97e1c8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7938),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("387a6839-7129-43b2-b3ea-c3e8c709bbfd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7940),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("2ecdf4d2-8cb3-445a-a0d9-b44560a507a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7942),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("c3b81a52-4fd6-4623-80e2-4e291b792ffc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7944),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("85d2fef1-9e85-409f-842a-6bbf157b8504"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7946),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("8be17339-313c-4a5f-8dd1-ea231e9272a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7951),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("85fcfbfd-be9c-4a48-9982-a968dc76e12d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7953),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("034a4814-4ea8-4108-a62f-f9a58f635a92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7955),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("625bbe4a-b0c1-4e09-ac25-6b7197e67128"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7958),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("5a7deffb-6fb8-4314-8add-47d697522a88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7960),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("10639cac-2e13-417e-bcd0-b5a874e315a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7962),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("5355bd7d-6769-4f7d-be8c-a46e3039e755"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7964),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("53b2236c-e6db-48e1-8ad2-be707ed2adca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7966),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("dd51a21e-3417-44ff-bd1f-19603e45fc8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7972),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("b945d0c1-1b23-4b6a-bbea-05fa5ab26824"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7974),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("9c4ca9c7-a9d1-48ed-85e5-42ce2d5f0b89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7977),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("3b76b724-630e-4507-ad3d-a5f2a5e0b9a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7979),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("b5201d96-6107-4999-a932-12a8e90e70ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7981),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("d32b6abd-ce1c-4d43-914c-d07a91bc912c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7984),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("b1629305-dc21-4fc1-b759-7a494bdfda7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7986),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("fd5a3fc6-adcf-440d-8074-3c417ac89ba1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7988),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("d2645aa1-8629-4d94-9d88-7363382151e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7994),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("3ef8b17f-8112-41b6-bd24-caabe365e444"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7996),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("8fcd044f-6871-4806-abd2-aa9f4ad799f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(7998),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("5c0cdc4e-36db-4234-bb9b-0f60208b5d6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8001),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("fbb341b2-4c6f-4123-803f-ada5936a731c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8003),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("a2e91aab-9568-4773-a8a2-ff6a318415ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8005),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("becaa836-8918-46c4-8d9a-7500a98f668e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8007),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("46b5438c-b965-41b0-8779-cc64005b2b2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8009),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("ee812c3a-854e-47ba-8c5b-df06ccb40aed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8022),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("98042a74-23db-40bc-a549-43a29a222bd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8025),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("79eeb611-6a46-4379-bc3b-1ecafa84b060"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8027),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("b4a7c8af-fac9-4202-b044-653e6bb3951a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8030),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("d623584e-07b7-4088-bd62-98c181f4742b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8032),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("182b212b-3e60-4b95-8fe1-f8c47ea57ab0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8035),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("1b0f0a20-d243-4dfd-8dd6-c02ca3e3863f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8037),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("e0a17170-4d93-444f-a5bd-567cf720ccf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8040),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("10c879d4-8ab3-4265-9ea0-01c390665aa5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8045),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("e689db33-6c22-489d-ab15-2f91bc8f1a14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8047),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("d76f693e-ad63-4b8c-aa84-40d243101197"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8049),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("8c211ba9-a797-4208-b758-5d4fb83b89b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8051),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("0584b4fd-06ac-4e0e-8cab-5202cd144962"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8054),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("264d0e7f-06e5-48e0-b99a-22b6900e8abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8056),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("67990adf-5f9f-44c8-b0f1-18ca1a8ea4d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8058),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("687a16fa-dc04-4982-998c-ab09b24ba97c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8061),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("be4b4073-d58d-4a5c-a55d-43825cdc7cee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8065),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("2c4f8133-6e7f-46e2-904d-0bea337f22f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8067),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("e959a221-d532-48bd-a9d5-d316ac671668"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8069),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("3c3f1e36-8faf-452d-849a-672aca9620de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8071),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("7b886bf7-ca0f-4605-ab22-bc1ae64e57fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8074),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("fcea1b8c-029e-4152-b2b0-82584d2866b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8076),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("aea7ecda-ced1-41ef-b6df-109abd3c9772"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8079),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("85383e48-ff0c-4fd1-a240-53a0a42d2e55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8081),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("cb37e188-f122-443d-8788-36a87a68bcd8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8086),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("8266977e-6c46-4c71-b12b-58746e7c3626"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8088),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("935fdabe-b38b-41f8-b838-8a2f258f7bff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8090),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("69daee16-79ab-4a7f-af6c-8363c6f661ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8092),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("b209652c-e3d6-475e-8012-8fe10c614240"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8094),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("8c0ac431-70ac-4462-903e-2be3aeafd6af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8097),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("fcf42ca5-1dd3-47cd-a4a5-545b66cc2057"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8099),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("51d0fa76-7a09-4929-b88b-270856308a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8101),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("ad821cb2-2210-46dc-b55a-9ade0d86fb55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8106),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("b3a6db7d-3943-4916-8743-24ead1062df6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8108),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("dfbd718a-b673-4120-af6c-fcb7b9e955c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8110),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("b41377cb-e89b-4aca-a671-05785593286d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8112),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("6ef7e870-499a-4370-baf2-2f65a714b9f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8114),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("49367770-a8a5-4a54-b0b0-36694512deda"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8116),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("df215868-995d-4a72-9ca5-2d8de43b6b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8118),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("097f2c70-5855-4409-9a0b-287836a8b2e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8120),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("1bbd1be1-8015-4e3f-aeed-1ac04c98703e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8128),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("2a76055d-d54c-4f56-950e-f79bc6b65f40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8131),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("7834ff40-1d3d-48e9-9f84-e0ad82f86432"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8132),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("60e978fd-5399-4d37-94ce-9c3e8287202a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8134),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("ee6094b8-2428-4447-be8a-c16960a9a438"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8135),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("e261a897-ac15-4064-a3bc-afe69b702414"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8137),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("ee73941f-9fcf-41b2-ad73-35c124a385e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8139),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("db01abfa-9c6e-4427-a09f-f86fb26cda32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8141),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("1c0b5e3e-c285-402d-a0f9-74abf9d2f34c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8145),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("48ca1d97-c09c-49ae-960e-85a3f808f0c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8146),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("2d1e868e-6514-4624-b268-2da2ccdeffd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8148),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("a272bdc0-2250-4f61-a253-917a807e142a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8150),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("7f6db520-0ed9-4f40-8aea-772a616558e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8153),
                            IsDeleted = false,
                            Name = "Trust Client Acquisition",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("149f6c28-3108-4726-bfa8-28227ed28422"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8155),
                            IsDeleted = false,
                            Name = "Client Request Processing ",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("91bcf57f-0cd1-4526-8e95-7067559dba50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8164),
                            IsDeleted = false,
                            Name = "Client Investment Monitoring",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("f7f57864-523c-438c-ab03-83d87705bcaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8166),
                            IsDeleted = false,
                            Name = "Real estate asset management",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("74861e52-ebf3-407b-bea9-33ddbb1439f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8170),
                            IsDeleted = false,
                            Name = "Business Development",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("05e71617-cb70-4097-85e1-84b544f9bf0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8173),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("c5bc5bc2-da11-4dc1-9cf0-dcb51f76df03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8175),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("e50c5219-c3d0-4d9f-8afd-9e3d12e884c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8176),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("d8749318-7c4b-473c-96a8-a8171e4ce15d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8178),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("08c41a6a-32d3-458e-ae87-4735cbc2f32e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8180),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("beb06f9a-fa6e-42ac-9874-b297cc7691c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8182),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("d67e0ed9-f4c7-45ca-8df9-3d1312c19795"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8183),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("f76213db-eb63-43f0-a4b1-8511ce297699"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8187),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("2d34ebfc-702a-4363-bf44-28c8b834ce31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8188),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("5f3c6dfd-5a34-4453-a752-bdc62e8d2dbd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8190),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("7fbe12ce-aaaa-42f3-bb02-c296afefb56a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8192),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("2039a55e-b353-434b-a080-d85b555121a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8194),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("aee9d597-0d5a-4d8e-a360-77e2154963c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8195),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("aac375cd-0d54-447b-a372-f7b7856574a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8197),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("24691085-6524-4879-9299-0ab1b61ee082"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8199),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("2f60ba44-bf5f-46a0-ad7c-b6978869041f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8202),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("f5579e77-d54b-4d9d-8bd0-69272f5b5d33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8204),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("7da5eafa-bea6-4abf-bd99-dd6376975d53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8206),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("84b6a321-7fb2-4309-8eea-c0aa2c1005f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8208),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("b9c01cdd-ebc0-4f75-85ca-5345c706976e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8209),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("7204bb7a-16fe-40ad-836f-060fb2a4fde8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8211),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("b3255f2e-89c2-4bcb-9beb-e21daa7d680b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8213),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("d37b3fa6-602f-468d-ae82-c44a139f5902"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8214),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("ca11f39e-0718-4c39-b9d9-836d2715478c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8218),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("c7dc918e-0b22-460b-b385-7cdb8c59121f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8220),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("00cc7748-ef96-4715-b3a6-f8c4870d4975"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8221),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("d1c2286b-2d40-4d43-a2d0-a7c6f845e89c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8223),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("575e7478-6142-4875-af8b-7cdd6997be59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8225),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("dd5f0ea8-6e9a-4d1a-8e7e-5d99e42f720f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8226),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("88561037-a8fa-42bc-880b-7d6b018a9ebc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8228),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("784021dd-5b96-4dbd-b420-e4058284b91a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8230),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("5626661d-670b-49cf-be2a-641dcb13327e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8234),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("5417e165-780a-4085-bcde-515205c7f64a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8235),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("b4674017-df79-456a-84d2-3bf2386bcdbe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8237),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("f16be3d2-9d10-4cf5-8f90-5df5145ec7dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8239),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("43240e8b-199a-4c70-8bf2-b08d1d9c0939"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8240),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("2ece8b72-5492-4d2e-ae46-eae8f300050c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8242),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("c1e2fa72-93d4-495d-9276-6900ed018b88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8244),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("8d6f71be-44b1-450e-865c-9b760a7fd55a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8245),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("99c01d9f-0be6-40c8-8eaa-a6ed757c0f8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8249),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("e8d0de76-1526-4f27-8de7-db188c87693f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8250),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("a83211ec-d406-4f34-9d5f-be6111227758"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8252),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("309fdbf4-9230-42b4-a321-6a40f960f86b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8254),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("eebeda53-da8a-4212-a194-08dc46cd688e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8255),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("2095b847-88df-407b-93d8-3067642b34de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8257),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("76b21629-945e-4fba-8fea-4538c76aef13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8259),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("60cd3b42-b65e-4e6e-be15-d595abc27dfd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8260),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("f3fcba68-96e9-4451-b315-fd8e3cd04857"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8264),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("5819a3c3-f668-4999-bf4f-70eb7ddcb47f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8265),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("d31d6118-7d7d-42ca-81b9-3ef1ac797eed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8267),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("db749ac3-f111-4e1a-a608-7e803a166145"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8276),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ebf7714d-c871-4a7b-a35f-f6ba973e7480"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8278),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("5ffbb531-1f45-4ada-8949-1c02243bd9d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8280),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("3302c1d2-3221-41ae-8ccf-14b3ac394138"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8281),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("f9f89f68-3814-4dd0-a90e-02f724e25d04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8283),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("5f23f1b1-5cc0-42ac-9154-5cde4d5cd572"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8287),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("fbc02f3a-454d-4e0c-9de0-db31421044e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8289),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("e64fca3d-1667-43bf-840e-6373350ea122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8291),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("c051673b-1884-4c04-a32f-66b5d1dc094e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8293),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("f593c322-1ace-4a84-90c1-a5ec696c81e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8294),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("157903b9-51a3-431f-af0f-02fa00741b56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8296),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("8d3f9677-6c0a-4081-ab03-d2f6bf08cce0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8298),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("03fdbea1-2dfb-419a-ba05-4c376f1e2ade"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8299),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("015c6c2c-48bb-4ff1-86a1-b011437f5ccc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8303),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("26a46a97-72c3-449e-82e8-e6713943b3a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8305),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("5fc01f29-2860-4872-ab76-a74292567c1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8306),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("cddbcb36-98a4-4b73-908b-282b29a30bf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8308),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("9cd18575-999a-425b-92d7-3a3828fb69c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8310),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("4043ecdf-eb80-4222-8f29-0330cd241ce2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8311),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("e55f3054-761e-41f7-88e0-5145d8697cff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8313),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("8d927c06-73d1-4f5c-afa3-0eec54e4f6c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8315),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("c6cad8ff-350d-47c3-a028-7fe61c5e302d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8318),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("ecb44048-d580-497f-9246-1326e3e3340a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8320),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("4ba385a1-1e35-4ee0-b6dd-a2cc022e00fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8322),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("1826c559-305d-48fe-b900-b1e0b87c47f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8323),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("b20063ab-5cff-4b86-a340-c21802c3d020"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8325),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("927edb45-d012-4b83-ba13-a530b1a48cb3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8327),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("46f92ef6-8985-4948-b767-65c6ae3d3867"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8328),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("789f41a4-302a-4927-8315-1df874b508db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8330),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("561bd778-3936-42a9-975c-7a2fcf74aebc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8336),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("868d3ee1-7eb8-4232-9644-c4e5332b5fd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8337),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("fa318abd-716c-45bf-b764-14b6177399c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8339),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("6e852c3e-5999-401e-b866-fb09dbeddd78"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8341),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("1c586b28-adf2-4ff5-afef-188565e53327"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8342),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("8de8ec06-8fd3-4cce-9984-db000569ef5f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8344),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("3399135c-f876-4bad-853d-6dc774c60c43"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8345),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("a1db6a90-7e28-47cd-bf62-56ae5f27d57c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8347),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("519d5089-be4a-46c2-a92e-28d2e66bca23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8350),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("a25e3c09-ec41-4f01-9090-49189d535ee8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8352),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("d4726a73-475c-4530-88f6-aec0077647b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8353),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("fa8b8f4c-ff57-4c15-a746-cdbe1231c452"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8355),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("b10f3817-5794-484e-aa3c-c78cbfb621c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8357),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("54cfe8c4-150d-4f88-9fd2-da4f61ced21a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8359),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("e12015f9-f6f5-48a7-80d0-5f7aca357fcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8360),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("76b0de10-e778-400b-8b98-842a6e536d39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8362),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("918fea42-46be-46fb-8ebc-ce066d3df67d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8366),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("783b49c7-f34d-4fa1-9faf-7f68cb7cc74d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8367),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("ecbcff43-b855-44a1-af4c-69a3fe0b2558"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8369),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("e7ff3253-3cbd-4df4-b896-bc7f940983c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8371),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("7fb6edee-7b6b-459f-b675-3ff0536b77d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8373),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("44e7b3f3-a76b-43ec-bd9f-39890ab0487e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8374),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("fec2d573-9054-4d6f-92d1-82604060f56c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8376),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("ab2f6ca1-a74b-4a32-993d-3ad08e6e9e8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8378),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("72ac5bb7-3937-4cd3-814b-952a5b216b02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8381),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("b96ee3e5-7dba-491f-81b4-edc048e4ec81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8391),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("4e6e4461-2277-4d71-bf87-8dae971b7eae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8392),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("43765a0e-b70e-460a-afbd-b010cfbd2891"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8394),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("0e5f1621-55e0-475d-9a4f-9126af5ccf29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8396),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("34fd0730-76a3-4257-b9e2-d7106642c260"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8397),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("7aa15e1b-a5c4-49e2-a0a5-79a25862f6ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8399),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("fc281973-78e0-4c7a-8cd4-8678d037a2f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8401),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("b436c674-6269-4175-9d4e-f6b9ee44ef1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8404),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("e107bc3c-2e87-42fa-9077-611e0ba65055"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8406),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("3cb1671a-32ed-4ee3-a640-99b274df1702"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8407),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("1ce34d2b-cc28-46e8-b447-2614a5113d2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8409),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("21d17b2c-c605-47d4-8a7a-8823fa01f9eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8411),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("1cd1bde7-8039-4b24-ab0a-b77a4e0252ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8412),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("7a162c5b-ad79-4d5f-8958-ce91fb2d8e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8414),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("2720754e-6260-4f64-b221-b0d0ded8da2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8416),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("9ad13120-03ab-49dc-981d-848cdd24b30c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8419),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("00bcd0d1-fb89-45ae-bd4d-cb91a7bd6907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8421),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("c384aeb7-700d-45bd-9624-90624f2d50ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8423),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("2740b0f9-fe8a-4da8-846a-edf6fe421a5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8424),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("76d6621d-75b6-4333-bb07-30512168785c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8426),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("8ae20cc1-b462-4bc5-8eb2-cb0a2f48ef83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8427),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("37f79cf2-f4c3-4b49-a117-dd85bf3211a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8429),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("3e499a6a-6d07-4623-9980-f30d07ea486e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8431),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("ce98a27f-009f-4d84-9434-781a132a5644"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8434),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("2151fdac-6fc8-454e-a9de-188eb41ee81d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8436),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("8bfeabe9-4f4f-4533-abee-c0f6f4e86ac2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8437),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("98d8ee72-3380-4524-ba21-b715e9ef9482"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8439),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("73148181-6169-4035-8004-f9e2b4d66b66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8441),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("5f2ef9fc-2557-43cc-a798-556c9dd2b6c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8442),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("6138deb1-6df2-47eb-b2b0-9f333f174d40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8444),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("09543ebf-9c58-46d7-8cd9-30ddeb11a88f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8446),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("b27d463d-e571-4de7-a289-e145c23884af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8449),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("a2ed74e1-6676-4fed-9e16-6b7310645f17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8451),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("b823fa71-6e27-4d0b-bf54-44a7ea6ea94e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8453),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("b03268e7-d723-4b19-aaa9-e1701b92941b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8454),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("da9bbbb0-497f-4f32-8ec9-311e4d809eb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8456),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("ecf847d3-a7ad-4789-af48-60e0bf1aaa59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8457),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("367a8af9-b92b-4810-9f13-38ff8a766f53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8459),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("d2a5a155-11dc-405c-859f-4e9c5d357e75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8461),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("3b9db487-b049-4b66-9099-286acc60286e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8464),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("fbd7b482-fd6a-42f2-9ebf-0deb49ec1f7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8466),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("ba644332-b383-4a21-a38a-9f1c2409663b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8468),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("fa93b888-3cd0-45d2-99c0-4671240be610"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8469),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("8e683806-7b78-45f7-a815-99d59ebeb35b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8471),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("df2ed0e2-b9e1-406d-aa8a-866196fdb36f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8473),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("e1b4dd98-d2cd-4708-8e49-089fdcaf908e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8474),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("e4083f89-c14d-4767-950e-f399218bd601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8476),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("6ddac814-5396-46b9-bd44-384a5fdd68c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8480),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("36f8ff71-1af1-40b9-af55-d2299285cc82"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8481),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("4d0fa129-f492-413d-a11b-c8e4d9b46522"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8483),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("0bdab527-3a71-474f-a87f-104a9c2cffd5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8485),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("a12dd82f-8beb-448a-9f8d-d51a247998a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8486),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("1d075ef8-5822-4785-b3ad-ab5b850c7dd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8488),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("5985e171-94f0-466e-a8a8-01cbeed990d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8490),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("56902054-6c67-46bc-a32c-8cf43591b3a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8500),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("4616a0c4-92b5-4b94-be44-f8a15b63ff88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8503),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("46539c69-02cb-42fe-9b91-7dddac02ac3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8505),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("9bcb7d36-2d94-4d6c-b969-5c10afd2599a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8506),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("84128a5c-c53d-40e7-ae82-a4845b01e292"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8508),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("51b8dfac-be9b-4525-b023-f34d53c5e130"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8509),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("a543756d-5bc1-4ee1-b078-acd4cac9c6bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8511),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("4409cccf-5317-4e54-a1f7-2398e5232793"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8513),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("f8b19e5b-f614-4cec-b6af-27ac8140508a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8514),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("d910970e-ea99-44f9-84e7-24d3e851439d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8518),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("55c2411f-8d30-4590-bc0a-0d812b00d126"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8519),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("e23b73b4-7d92-4487-b535-4db25779e418"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8521),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("03c3b13f-e935-4cf1-b9ba-1f57ad9e0e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8522),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("b0c53a9e-6912-4464-ad3f-9a3f984c7a94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8524),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("c5cecd71-9e30-4866-a788-0a51f84cff40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8525),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("4581f9ef-8791-40dd-a731-9a429281a732"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8527),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("6c423bc9-ee51-473e-a6d9-6f5ac4aa91c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8528),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("922f75e0-3e96-40e3-b7d0-cda97bec87fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8532),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("502432e3-5e45-42ba-8d10-f54b2d38e7ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8533),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("7dc40c06-b11b-4074-8989-09aae9fbd0c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8535),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("60df0741-effe-4187-b207-46032528f14e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8537),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("58a98b09-b99e-4085-b3bb-1992ea81891e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8538),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("fb3ceb43-c0d9-4bd8-b647-4c7543389510"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8540),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("86189261-ae3a-472e-9e4b-f82adaef5b8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8542),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("9b0da52f-f3c6-4f02-ab19-c654edcee828"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8544),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("cfb921a9-75ce-4b53-b719-2f9b8990a612"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8547),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("2fd002a3-a24c-4d49-b91b-d41ee5c1c866"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8548),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("eb44df0b-5e43-44ad-b1ae-1fc91f44e650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8550),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("5ded0c9c-1001-4995-b6ca-6c7a9c2d1b38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8552),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("3eb41adf-e0ae-4c5b-a1a1-ed95bdce5a1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8554),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("1781064e-8a0a-44db-8f13-95b5fd85ff6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8555),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("910ae1a4-5352-4b51-b93a-380651dce6f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8557),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("cda2d569-e372-493e-8fdf-a7bdb9b54c69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8558),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("fec0c77d-5d44-4679-9fc0-5ddc97e144ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8562),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("bbc74952-22e3-4b6d-8fa8-27271fba178e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8563),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("af5a8fb9-0992-4c6e-a44e-e3fd65c49966"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8565),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("fdce375f-4340-49bb-99c3-5cac26f7ba40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8567),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("7d762329-34e0-4f3e-a6ed-a8a8237cb22e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8568),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("81aa3b97-147d-4532-ab90-e603528823a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8570),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("ee9e81e5-27e0-426b-aaee-9556d13239e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8572),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("19cb53c2-abab-4c01-b617-b814a2d6b842"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8573),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("c70b5715-5479-428b-b0dd-8067db38c9ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8577),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("bcad40ae-21a1-4560-946e-0ed3a8c51bc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8578),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("918106b8-5457-426a-b251-32a9b41b33f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8580),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("9e79149a-5b45-4bde-ba27-771b5cf9468c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8582),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("9079679c-ba79-4617-80c2-b53087f9171c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8583),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("deb3ab9b-d297-48c1-96a4-ec7224cea5d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8609),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("5340887a-a669-4be2-99b1-4400860a6f98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8611),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("ff4ec8a5-64dd-4983-9bf8-5fdfa08bca48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8612),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("93fe4281-98a3-4e3a-ade7-b7b4b8a76f94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8616),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("c2d6a962-4923-4f7f-8270-a2d8e05ca743"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8617),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("2521effa-a9fd-405e-9726-fa2f8844dbdf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8619),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("1a258750-a23b-43a1-a811-f953873f95f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8620),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("2b2b860e-29c3-407a-b4b5-2666d255a893"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8622),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("cd09745d-5581-4d99-9a73-40475951d8f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8631),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("e414418e-e8c0-4b4a-988e-6ef7d136ceaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8633),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("0be27c1d-17b2-4d3c-8558-8b42b1723c48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8634),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("2404a276-44ba-401b-adef-52e5feeea924"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8638),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("5cbe1efe-866b-4ba6-af6d-df0765d59114"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8639),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("345d3698-280c-404f-9fbf-4a757e86a7e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8641),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("a634ac80-7dbc-4d0f-afc5-a56d0b41ef21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8642),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("f13f1ecd-0cc2-4278-9576-7da775c527a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8644),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("6cfccac8-a7a6-43e9-ac07-e5a6a2b7e19c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8645),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("bbcc8c9e-2887-4b6e-b092-347f1afb13aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8647),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("43a47f9e-6b02-4fd9-a095-9bb690b8e380"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8649),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("c600848a-9131-4f4d-8feb-daaeff2817f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8652),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("4a0e9c4c-e455-45df-a88b-b2dc4b6ce387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8653),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("20cbcd35-c5c0-42a2-950e-159b94442e28"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8655),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("2032a87b-13c3-427d-a905-e9e26a466427"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8656),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("e9abd1e2-8106-4dd5-8695-a3fb95e11e7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8658),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3eaee2b7-6683-4e6a-b11b-274085220b8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8659),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("fe9b1ab5-e3d8-44cd-a439-7458691ff0ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8661),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("4a09ca46-283e-40d0-9b88-9b03f5551a3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8662),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("b0465ab2-1921-4632-a5cc-4c4af1ac59f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8665),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("55d13b2d-f27e-4e6e-b5c5-27528844166e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8667),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("d59e4b6e-ee60-4154-9d1c-4f349eacc75e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8668),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("df9c5428-4055-48eb-bf78-12efe286e331"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8670),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("de47ee15-9218-40e9-abd5-d1fd2f1cac56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8671),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("62327979-6b0a-4215-bcf7-6ab8a679afec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8673),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("6b2a1216-73e9-4552-abc7-ad5fa6b374fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8674),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("a081c935-0631-4a15-9dd5-1644e29fc208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8676),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("5ce1236b-659e-412d-8119-195944f3a562"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8679),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("0ba235fb-8698-4e41-99f5-d7c2b0eff27a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8680),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("ac6aca48-d221-433a-9003-d4e81019abc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8682),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("7a307da9-2290-447f-a91c-2a9066d22701"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8683),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("f1440ab1-1449-47b4-9b79-e35e360c9e83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8685),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("2b7a0771-3fbe-4337-a528-deb55b06e7bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8686),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("32082c76-46bd-4d86-b503-0a8988a4d17b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8688),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("b288d366-a3b1-4ca8-8e7c-5c5a0f45f499"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8689),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("35cdbafd-37c6-4434-b6e4-acfc0c687e11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8693),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("52c1b444-36bc-44e9-8b72-389b45a871a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8694),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("401f9c74-71dd-492f-976c-47cdfa7bef4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8696),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("eeb83604-d010-4d13-a5ff-7a3130a1c55f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8697),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("4e0a5a54-a997-4dbd-92b2-b866ad7ab5dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8698),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("c4fcfe47-52ac-4acf-9053-b980d112a9b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8700),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("dd3c84b7-3ba2-428d-b975-8d7f2d44788e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8701),
                            IsDeleted = false,
                            Name = "Develop Marketing and Corporate Communication (external and internal)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("d238b4d0-5245-4a2c-9030-48d171831f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8703),
                            IsDeleted = false,
                            Name = "Production of Branded Materials",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("2375f1b0-8ef7-499e-b346-8cb08e693f55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8706),
                            IsDeleted = false,
                            Name = "Web Development /Update (this is the process of developing or updating web pages)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("1506e78f-85d3-4bed-bba3-9abe9134d258"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8708),
                            IsDeleted = false,
                            Name = "CSR Evaluation & Sponsorshp Selection Process",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("3a136e48-c166-44f1-8aca-3a28b67e53b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8709),
                            IsDeleted = false,
                            Name = "Budget and Planning",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("83e70608-292d-4543-a3f5-9c44537a306b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8711),
                            IsDeleted = false,
                            Name = "Bank Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("e2d465cb-7a17-4ac7-ad5e-565a6f98e4d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8712),
                            IsDeleted = false,
                            Name = "Create Asset Master Data",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("88c6daf1-00db-449a-a367-53af910d7233"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8714),
                            IsDeleted = false,
                            Name = "Asset Disposal",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("7971e8ad-e7fc-49b2-854c-f8c16810a28c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8715),
                            IsDeleted = false,
                            Name = "Invoicing",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("7a3e2054-8822-40d7-bff7-401e3f7e6406"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8717),
                            IsDeleted = false,
                            Name = "Process Payments",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("435d5e43-365c-453e-8849-ddd613816764"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8721),
                            IsDeleted = false,
                            Name = "Cash Advance and Cash Advance Retirement",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("667973d0-974c-475b-8fc3-3f1d0264c2b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8722),
                            IsDeleted = false,
                            Name = "Reimbursements",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("a1686791-a148-41dc-ade8-36d1ee4435be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8736),
                            IsDeleted = false,
                            Name = "Investor Notes Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("b8e59e12-e2aa-4e29-98e7-0838cf088b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8737),
                            IsDeleted = false,
                            Name = "STAFF DISCIPLINARY ISSUES",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("80b2748c-adb3-4f64-baf0-f5ebf4eb3102"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8739),
                            IsDeleted = false,
                            Name = "TOTAL REWARDS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("16dccf0c-04e1-40d3-9de6-fa8708bcafd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8740),
                            IsDeleted = false,
                            Name = "STAFF FILE",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("a2e8439e-720b-4e49-a785-dd75f4a900c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8742),
                            IsDeleted = false,
                            Name = "PERFORMANCE APPRAISAL",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("86d17bbd-af49-4364-a8bb-e5773889e464"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8743),
                            IsDeleted = false,
                            Name = "HMO MANAGEMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("68d13cf3-9adb-4926-aefa-628858f1d26a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8746),
                            IsDeleted = false,
                            Name = "TALENT ACQUISITION AND ORGANIZATIONAL DEVELOPMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("e8c012cf-c360-4e2d-b346-787e2037ba83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8748),
                            IsDeleted = false,
                            Name = "STATUTORY DEDUCTIONS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("48785e96-ef91-4d4f-8959-6d5ff0e21fc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8749),
                            IsDeleted = false,
                            Name = "Staff and Visitors Identification",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("90a0ec3b-66ac-452a-9393-f65d81941d9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8751),
                            IsDeleted = false,
                            Name = "Staff Sign-in/attendance management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("e228edf0-79ed-4aca-9bcb-584b2d6ef39a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8752),
                            IsDeleted = false,
                            Name = "Keys Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("83bc16d8-7f3a-4e54-a15f-8674778a63ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8754),
                            IsDeleted = false,
                            Name = "Scrutiny of all entrants",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("97e86457-ed37-4749-b3a9-73d61c3145ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8755),
                            IsDeleted = false,
                            Name = "Cold Room Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("f7211db0-29a4-4d55-a951-b87df6094a4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8757),
                            IsDeleted = false,
                            Name = "Dispensed goods Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("7dec6e08-6298-4280-8f5d-b125ace55af5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8760),
                            IsDeleted = false,
                            Name = "Goods received register",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("259e23a6-7d76-4a5c-8621-30692fb985b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8761),
                            IsDeleted = false,
                            Name = "Community Relationships and Development",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("f9dd2213-4a1f-4803-89a2-84481fae699f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8763),
                            IsDeleted = false,
                            Name = "Procurement of Supplies and Inventory Update",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("6d2a84f5-ed2a-48d1-ad5a-999f3e18c8a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8764),
                            IsDeleted = false,
                            Name = "Store inventory management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("fd859940-303d-4f12-a3ba-86587516acea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8766),
                            IsDeleted = false,
                            Name = "Requisition Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("1fc2ebf3-d357-436d-8b8b-4541c9ca36c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8767),
                            IsDeleted = false,
                            Name = "Store key management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("7c949ab0-e086-4293-82b6-dfa3848544a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8770),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("97b92cf2-23a4-4e31-9f0a-160493938d39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8772),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("c036bd14-8a89-47ae-9979-70a47153e824"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8775),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("ae664c46-1059-41a2-867b-25ac820460df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8777),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("235c6299-edaa-4564-a54b-3a3fc86cde20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8778),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("8afbb31b-be40-4bb6-9f2d-808f0ec130a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8780),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("13cabce0-975b-445d-860b-497e2447fe79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8781),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("70e7c858-8ca9-44ab-af96-c1d73dabad9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8783),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("2fba1565-f69f-494b-97f6-cc6914763c1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8784),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("b7548d4b-e990-4665-83f9-d2337db29df4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8786),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("26185042-6347-4e37-a7b3-5598e08a11ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8789),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("21764a72-340a-40ba-ace0-6bdf3001872b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8790),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("cf9a4ed8-5aee-4aff-959c-e01dc9fdbba1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8792),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("3a64243b-383d-4423-a70c-17e2b56a0e6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8794),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("f816b994-c9df-45f3-bab1-6dab290abb05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8795),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("8db5f9be-a534-4b80-ae1d-0c63c1a036f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8797),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("90e8ff01-59d8-4773-83da-fd8656f4a52e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8798),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("692bc50c-d3db-4cf6-bbd7-0c93ffedeb02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8800),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("f0ceddea-31ae-4109-97a9-4b8c652805e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8803),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("adda54b4-468b-4d48-b293-14f91dc9721c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8804),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("7311423a-a64d-4696-95c6-fac9e08827dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8806),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("f9a6e70c-18a0-4a70-8051-9c55d8670d2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8807),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("0e753dce-77f3-487d-90ca-87ae101cef7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8809),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("05898893-6379-4552-9632-4a248485ce37"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8810),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("bb3282b7-9a86-4e82-a195-668eeff5405d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8812),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("1b3eb321-17e7-42ae-b556-902374d19679"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8813),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("321b5938-8ea6-49e1-88d8-72db187087e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8817),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("be9e6505-95a0-48c3-80ea-915554b289c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8818),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("f45229c4-97c8-4b53-9fea-c5e50fab1bba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8819),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("4de55b9f-3596-4cc2-8844-9611cd16d611"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8821),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("c2d344f8-1f36-4486-b5f6-a23b83146207"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8823),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("718423e3-6001-4770-8ca4-560b9e5d064a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8824),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("5447ab18-c272-4247-92f8-8070f6e2033a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8826),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("1248829c-43a0-4364-9fd5-17276d347452"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8827),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("07768af8-ea96-416d-9b78-3152d197c64e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8836),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("cdd7934e-5136-4c8e-9e2f-8e9063cbb420"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8837),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("26bf649f-b9b4-454f-9217-1d51e34217c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8839),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("aedb742d-c139-420d-ae93-c95c7dc2936a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8840),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("faf367a0-1ffa-407e-b1c9-652474c11802"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8842),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("aba87f2d-ea6b-4ffe-a75e-a5c2db393316"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8844),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("c471be1d-1402-4080-8bb2-f2253608e559"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8845),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("b476666d-a602-4b1a-9329-160c282f243e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8846),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("e1af2686-71ec-4ca9-ad4e-e59ca332de8b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8849),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("df91cdf3-fcf7-4db7-b33e-1d1fda645ea6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8851),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("4b5b4d26-47e9-4c14-b61e-015c9fa4f90e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8853),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("b4d19d3b-59ac-4997-8977-7590f4527c51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8854),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("ab84381f-cc29-4a86-ab61-7a69a013891f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8856),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("d52f1ef2-616d-412e-b43a-7f202210c2b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8857),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("0e432217-d896-4ebe-84b8-0b2ed7bebd91"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8859),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("491f9163-e3b5-4c11-ac24-7e3628ef8cd0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8860),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("072ac898-6c09-4fe2-ba5e-9a8935891193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8863),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("1cafadfd-de08-4505-a34c-ea65e7908802"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8865),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("c4e1c032-4adf-4236-baab-a90c0d151232"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8867),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("4968d88c-ee1e-4a7f-b692-949d8b536bde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8868),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("6af6db41-1fe6-4c8d-b783-9433cb37daa3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8869),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("4f1fecb6-00cd-4a98-88e5-840d475513e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8871),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("9f43c2cd-14df-44e4-a8fc-c7d5d952e99e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8872),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("4daa2472-b53c-4ec8-8c22-20bf6a7ca0eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8874),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("492e1448-1b54-4edd-8a67-5ca762f0708f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8877),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("b53424e6-66bb-4c44-9b93-3669c3ec4942"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8878),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("96113ffd-8b94-4b5e-af8e-221522ee2ce9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8880),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("e54a6d63-15f4-4854-b6ae-49551e38e631"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8881),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("f75b7c89-3b59-4fb2-93d0-19add5859907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8883),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("8b764574-c941-4d62-95b2-778b15b94cd6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8885),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("0a227dd2-9a9a-4d17-84eb-88d9775f8706"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8886),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("740f33c0-f87a-4863-a1a7-45722b2f0020"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8888),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("8a93ab31-4f9e-42d8-8d9e-37df379fcae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8891),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("31aa3136-30a7-498e-ae32-a8a4afd38374"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8892),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("35348635-47af-4102-b334-4fabe601f97e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8894),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("36e6867c-af55-4349-9782-0cd82e2af788"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8895),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("5e86d9b6-c487-4fa9-8547-e1e33c148b62"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8897),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("357b8227-5934-4e7f-a354-6de9aa6c4178"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8898),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("7403e4ad-7faa-4b8d-a68b-0f86a1f15add"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8900),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("66724729-ecda-49bb-a252-f144bff488e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8901),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("b768c9c1-ddc8-4ff3-9ccf-0a1fc329aaf9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8905),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("cda71f69-3703-4a70-ba6f-d7895426a170"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8906),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("86c5fa50-5f3a-47b5-bc4a-f42f0d1e9f2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8908),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("dbe85f28-6714-4a3e-954c-3f902c20fceb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8909),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("c1dde425-56d5-49df-8c7c-331eaf3df267"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8911),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("0296d8a3-2880-44fb-97af-07af2eab5411"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8912),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("3dfdcd0b-ed2a-4335-9d29-a364ba52f1b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8914),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("50fee798-23bf-4ad6-a186-4098e044097c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8915),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("5443e95c-9317-46cc-be9a-11c2c28010d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8919),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("99a2dc3c-1362-45a0-97ea-7a8d24c9133a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8920),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("621f066d-2359-48e0-a61b-3233b122263d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8922),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("4c7eda95-1235-4c3e-ad1e-d5a265e98491"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8923),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("5227ba46-c9a8-483e-9fcf-263157456f39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8925),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("e4698b81-1fc7-4bfb-ae66-3ced969a0541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8926),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("3c18c5d0-0499-461d-be4f-99cfa6a44953"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8935),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("4bd39f07-b6d8-4175-95f9-e67e115d0533"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8936),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("9ea78e80-3734-446a-ba31-10f611bdbdd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8940),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("db2b9416-eda8-48fa-8d31-1bc0b3ffa607"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8941),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("27287833-339c-4854-a73f-0253081090c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8943),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("ecfcf6c1-acb2-431c-aef2-1eb63b8f6741"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8944),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("8892b501-21b8-45e0-bb12-23c6358efc77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8946),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("0e63dfb1-661b-4e7f-a2b8-e60daeeaa3e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8947),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("cb0bc98d-afd4-44a7-b89c-53c4434a4cb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8949),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("3306976e-c507-4c1e-bf33-808dc71f483f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8950),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("f9e9a970-cebc-428e-9b4c-2941d2cfc23b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8954),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("3b39fe1b-6916-4d7b-8057-8107f88f6589"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8955),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("12269846-bb2c-46fd-b989-11fc72876424"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8956),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("7f75efe5-146a-4c2c-9f93-e1103d6dddbe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8958),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("64b5d42f-d027-45b4-b23e-d0956b44061c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8959),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("1bf2992d-c420-44e4-b4e0-4045ae18d659"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8961),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("180db113-68c1-4145-92b8-4573c8d2d82a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8984),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("062dea79-eda7-46e8-bbce-7d4cdce6a23b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8985),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("a8b929b9-dd03-427b-bec8-b2ee1ba63d60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8988),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("659f3e40-7b76-412f-92f3-01efcaceba91"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8990),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("4772fd07-4221-4b93-b07b-0e019f342bd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8991),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("889b1e1a-01e8-4dd3-8b5b-25eda85e8a4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8993),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("a8acaf3c-ad0e-4d39-bd82-82096c4ae4cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8994),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("cb6c133a-159c-4f20-a6df-47d185091ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8996),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("9a1ed1a1-80aa-41e8-a545-f9ceb4dd8ab7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8997),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("4b796ddd-2f4e-4053-bddd-1123b8e9cdc9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(8999),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("ef5fc640-9e06-4e44-9d83-e00f61c8dce8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9002),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d9763385-26c8-44ec-bfbd-dd444ee16e81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9003),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("80e72091-d2dd-48d5-b519-063094e1f7c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9004),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("50ac3f91-3452-4432-bf88-b7fd695faf0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9006),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("e054733b-86b0-4e08-af8b-ac29a7aaa10b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9007),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("eff934cb-d81c-4708-af1d-9a3295665aaf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9009),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("defea65b-9e54-4414-9e8d-4af343decbae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9010),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("6708c7d1-6898-4ae5-8bd5-947bf008d106"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9012),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("e2596ac1-13d4-4180-9844-dc1197ac021f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9015),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("10545368-cdfb-4818-9adf-586edf3d1c91"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9016),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("3cb39cdd-f254-4f7d-a7d9-f3ebfc9b8e7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9017),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("44fe26a1-e0ac-41d5-aaa1-b341236a2586"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9019),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("7fb0e99a-d5ff-42c8-a084-639b477bc3f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9020),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("d1ae5dcc-b5e5-481c-aa4a-d47e96b03e64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9021),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("880ad8c0-7ee8-40d9-b7cf-11b12c9201a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9023),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("f2e23065-f51f-4a14-a4ce-30f957145b29"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9024),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("e1943d2e-1057-401c-8b70-da46962a659f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9027),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("0d99059f-7c51-4bbc-a3a6-6083cd4a132f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9029),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("3e4ed19c-0389-487e-8b3b-2697886eb380"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9030),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("65642cdf-69ef-41a7-96b4-eb5a73e7e091"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9031),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("b7c0a540-2481-474a-bfd9-939d3d555965"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9033),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("190277f6-5d7b-4e36-b7a5-459fde7c7994"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9034),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("4720fd52-f922-4825-bee7-e6b601bcb071"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9036),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("08cbb2e5-4889-4480-b422-c37f58af6ff7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9037),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("d4567edc-ffad-48c8-88d8-1e3ded9226e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9040),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("653f5474-b915-4ced-8c6a-9413ac3b091c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9042),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("f3814698-a82f-4a16-8c34-efcd276be0ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9043),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("ab30cef4-3142-45ae-bd69-3e2cefd35f58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9045),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("608d7d3a-7d58-4dd8-b51c-b6deeb86475a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9053),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("e96a31b2-3327-4902-88ca-394f9cf3bace"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9054),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("039e151c-1767-457c-8cce-8bee9e73b90c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9056),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("f65c0536-e85a-40d7-b5bd-e8574747edc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9057),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("b78b6e9a-84db-49f7-9062-3c844a181ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9060),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("81f0ca98-0b3f-4398-9719-f4e25e715078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9062),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("8e78e69a-92a1-4c9a-be99-7ab2b8b74478"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9063),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("caf0b7ef-5863-4e23-bf0d-ab8f1280cc8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9064),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("c0efa7b1-0333-4df0-86aa-4e50ca69d212"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9066),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("a0522fb1-ac61-412a-ac2f-62d45124c843"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9067),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("fb95ab42-d219-4dd9-9918-7cb7464ef1af"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9069),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("cd6ecd9b-1ed0-46cd-8d0f-abc321efd098"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9070),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("9a0b0684-0c77-40ba-adca-c7264f7f7ca4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9073),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("db71f1bf-44a4-4f54-8132-a0ed510b046d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9075),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("4d9ab983-0a6d-4dca-9d76-c90d3f15e8a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9076),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("2d02bfbc-08b1-4c60-bd32-cd74ce4fab65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9077),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("0cd940b7-9007-4483-b5d7-8c8cbe7903e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9079),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("96934789-0b5b-45c6-a2ae-ac1058813ec8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9080),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("0eb068cb-60a7-47d6-860c-47c690abfbd8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9082),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("e6de2698-5f5e-404c-bd6f-d859f971ab9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9083),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("43a6ddfb-412c-4726-8be0-fc3b50173206"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9086),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("4206b07b-ca7d-452d-95f0-cc585f4a985d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9087),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("2cd13c7b-23d4-44f9-b7ed-3f327eee8308"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9089),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("484b443b-e429-4656-b29c-4554232a5969"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9090),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("03699b5a-7b55-49bf-8c5e-1ac9c3b69187"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9091),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("b42cf9a5-934a-43de-8837-b8be945dad84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9093),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("3d187d30-b4bc-4555-b253-864e2f27a8cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9094),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("36a20264-a82d-47e4-94ce-037af529f193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9096),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("39eaf718-ea7f-4f94-b2d5-25b5e536ad36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9098),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("60bed992-4ee8-4936-b81c-fada51f35d13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9100),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("5a1880f5-f50f-49ab-9ceb-298ba56d034c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9101),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("0bb557db-a575-4435-b0fd-b8b26062fe46"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9102),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("61401f05-383d-401b-b387-ad301642ea5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9104),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("98bed33c-63d6-4deb-8f12-b5231c369054"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9105),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("18a52f16-bb5a-4853-b1a0-4ca31e1f770e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9106),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("b3ac4613-9523-499e-9322-ac51e8c3fe71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9108),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("c7ad1a3f-f24c-434a-af4a-75999f60bc9b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9111),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("722bba9a-9ab8-4eeb-84e4-494421f33dcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9112),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("189f8107-8170-4ef9-9d1b-aef357a85ac5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9113),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("e4742ad8-39fb-4719-b56f-6d1a13e8666f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9115),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("bddd85d7-21cb-4f90-a8f8-c0cccd4efe34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9116),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("5faffca6-6687-457e-a0f5-95be86ae2877"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9117),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("8ef7de93-49aa-45eb-8261-9a4eadec2038"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9119),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("c35fe0e6-0b52-417e-b8c2-72069136ff1b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9120),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("ed79309e-38c9-49ab-8767-7989a97785d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9123),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("057a01ef-0b6a-47e5-9ce9-a0665435a25b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9125),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("a853e57c-4469-476b-a1ce-5d87ee1a17e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9126),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("ef7c16a6-001a-4c5e-bf1c-0714352ec868"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9128),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("726afdd3-b4f8-4692-af26-fb01580b51e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9129),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("5070b246-f756-4174-93ad-ce10063a3c16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9130),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("da84f81f-574d-4237-b1dd-2533e88b617f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9132),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("363783fb-8a12-4f77-a378-6e8a96dc2433"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9133),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("06e7a626-ce39-48b8-a92a-c902f8b9b115"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9136),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("29d92ffe-ef5e-4c0d-b9b5-3c6aa21e78ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9144),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("8f9e6bd0-56fc-4328-b3d7-99a88ce33c1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9145),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("7be76d84-eedd-460e-85fe-afebd2603124"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9147),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("49c5821c-0239-46fd-a30f-d939b5aaa454"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9148),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("b38d8828-d90b-4f74-8be6-1f94d8674318"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9149),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("c18c018d-f4f4-478e-ab79-609216da1b95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9151),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("5723e513-ebbd-47fb-9c2f-880d68fe27aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9152),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("de15088f-2887-40ca-9e49-26ca11089a3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9155),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("0c16c1fd-54c6-4dac-b96e-0156cdd69b22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9156),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("c9ce8eb2-f40a-4f95-a2f4-100fe70e7989"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9157),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("4c6ad767-d271-415e-9366-7fbc0a6b8c34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9159),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("12d189f6-4549-497e-87e1-a3d23d7f3fea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9160),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("08186a79-e6bb-420f-aad9-1734082579a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9161),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("d27f1b9c-6661-4e21-848c-8d085231a692"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9163),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("eee396d0-8c64-423b-93f8-1c14ba3c2bb7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9164),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("19e306e5-4dbd-45ea-9a83-99dbb43e1586"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9167),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("b08402e7-81d9-45aa-8f2b-247df38586f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9168),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("27229abd-c2ce-4207-9a55-452e8e153324"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9170),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("12202808-ff46-4e0b-ac9d-1f1bc857fd71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9171),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("6d8189a0-82a8-4560-aadb-19e055a2ddbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9172),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("d1f3bd84-c2a8-4e70-85e5-6775b201a387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9174),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("cc4c693f-58d0-4b72-9663-0d548ba7342b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9175),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("88bcbc8d-9803-4a45-ad41-629d595469f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9176),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("f3ade202-0d19-4c4e-a56f-5263aa538fb0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9179),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("7aa15ec8-d3e6-4d91-ac5f-8e66d7a2fe52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9181),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("d50838c2-ef61-45d5-81a0-e0efc812b564"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9182),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("f0690f89-7e70-4a35-8bca-f2814e432d49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9183),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("aad8d958-2aa1-41ab-872d-24ac48d5684b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9185),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("5083c42e-6abd-432f-9a88-614bfb10214d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9186),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("20a720be-9049-4b4c-baa2-6fdf77902c66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9187),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("476f9011-9912-4d80-90b0-a993f491d296"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9189),
                            IsDeleted = false,
                            Name = "Agile Delivery Process",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("40035e80-9a38-4457-b1f6-99da32627a9b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9192),
                            IsDeleted = false,
                            Name = "DEVOPs Operations (Deployment to Production)",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("5dff5b13-3a4f-4cac-854b-315468ee9206"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9193),
                            IsDeleted = false,
                            Name = "Functional Testing – User Acceptance Test",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("0539597f-6645-4410-9bb0-1908959219ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 315, DateTimeKind.Utc).AddTicks(9194),
                            IsDeleted = false,
                            Name = "Post Go Live Support",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RiskControlSelfAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskControlSelfAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("RiskControlSelfAssessmentId", "Id")
                        .IsUnique();

                    b.ToTable("RiskControlSelfAssessmentUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActionResolutionDate")
                        .HasColumnType("date");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("ActionManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountImpacted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GrossLossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetLoss")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal>("RecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("date");

                    b.Property<string>("RecoveryDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecoveryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalRecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("LossManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RecoveryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RecoveryType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64c5f5ee-ff08-4c03-914b-57c7e01b391e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 312, DateTimeKind.Utc).AddTicks(5216),
                            IsDeleted = false,
                            Name = "recovery1"
                        },
                        new
                        {
                            Id = new Guid("c359ee33-8b9f-4543-8750-2738d0ea9ae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 312, DateTimeKind.Utc).AddTicks(5224),
                            IsDeleted = false,
                            Name = "recovery2"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RiskDriver", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(4830),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(4839),
                            IsDeleted = false,
                            Name = "Process"
                        },
                        new
                        {
                            Id = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(4842),
                            IsDeleted = false,
                            Name = "Systems"
                        },
                        new
                        {
                            Id = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(4845),
                            IsDeleted = false,
                            Name = "ExternalEvents"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(541),
                            IsDeleted = false,
                            Name = "Skills",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(551),
                            IsDeleted = false,
                            Name = "Motivation",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(555),
                            IsDeleted = false,
                            Name = "Capacity",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(558),
                            IsDeleted = false,
                            Name = "Industrial Action",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(571),
                            IsDeleted = false,
                            Name = "Process complexity",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(575),
                            IsDeleted = false,
                            Name = "Change management",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("269387bf-03b1-4b60-95fc-a62977783334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(579),
                            IsDeleted = false,
                            Name = "Quality of controls",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(582),
                            IsDeleted = false,
                            Name = "Roles and responsibilities",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(586),
                            IsDeleted = false,
                            Name = "Adequacy of procedures",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(588),
                            IsDeleted = false,
                            Name = "System adequacy",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(591),
                            IsDeleted = false,
                            Name = "System availability",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("2094ab76-2766-4a88-9a45-fd5444570151"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(593),
                            IsDeleted = false,
                            Name = "System security",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("96912526-6283-4f3c-9079-769b5d08f06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(598),
                            IsDeleted = false,
                            Name = "System Complexity",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("00a54610-0522-4313-ac74-d39f550ff600"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(601),
                            IsDeleted = false,
                            Name = "Data protection",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(603),
                            IsDeleted = false,
                            Name = "Outsourcing",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(606),
                            IsDeleted = false,
                            Name = "Regulatory",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(608),
                            IsDeleted = false,
                            Name = "Legal",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(610),
                            IsDeleted = false,
                            Name = "Social, and natural environment",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(613),
                            IsDeleted = false,
                            Name = "Client / customer relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(615),
                            IsDeleted = false,
                            Name = "Third-party Relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverCategoryId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("777e3b89-eb69-427c-ab42-9e75f931d0d3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8157),
                            IsDeleted = false,
                            Name = "Staff selection (poor educational levels etc)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("c366c0ff-7180-4a63-b514-3b005a3e110e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8170),
                            IsDeleted = false,
                            Name = "Inadequate skills development (e.g. training)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("215816d3-2693-414e-867d-3a62f3ce9850"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8172),
                            IsDeleted = false,
                            Name = "Key man retention",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("f162b10d-eef5-4eb7-b8fa-4efc23b23d52"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8174),
                            IsDeleted = false,
                            Name = "Lack of management oversight",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("6aa5b7fc-00b7-4066-a51c-1398ab21c72f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8180),
                            IsDeleted = false,
                            Name = "Lack of staff experience in relation to performed tasks",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("1e50b14c-a7a8-49a2-84d3-bf84266c9141"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8182),
                            IsDeleted = false,
                            Name = "Negligence of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("255c0771-51e0-4050-b3c2-9cb48e227637"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8183),
                            IsDeleted = false,
                            Name = "Performance failure of Support unit",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("c95b4327-2bd6-43ff-bdbc-cf11fea50012"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8185),
                            IsDeleted = false,
                            Name = "Inadequate staff compensation (basic salaries, bonuses, reward-system for vigilance etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("d88da739-0af4-4849-893d-0222a8116de7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8186),
                            IsDeleted = false,
                            Name = "Working Atmosphere (level of stress, social climate, interpersonal relationships, malicious Intent)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("b0067af6-2422-4d3d-acd0-0e09b5b66b30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8188),
                            IsDeleted = false,
                            Name = "Workload perception (lack of clearly stated goals and objectives etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("518a51c2-4636-4356-9ae2-719838c5f466"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8189),
                            IsDeleted = false,
                            Name = "Corruption / Criminal Intent",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("e1fbe0eb-efce-4b9d-84be-aa8426cf968f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8191),
                            IsDeleted = false,
                            Name = "Staff shortages within unit (lack of capacity in unit)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("0fe22583-95d8-4fb7-856d-0347d9fca8e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8195),
                            IsDeleted = false,
                            Name = "Staff shortages within support units (lack of capacity in supporting units)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("b8cb23f3-bba6-4253-bfe8-dc8cdb6527ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8196),
                            IsDeleted = false,
                            Name = "Disagreement on issues of mutual interest",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("c175f1c2-096d-4e5e-b746-625e6a604797"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8197),
                            IsDeleted = false,
                            Name = "Failure to consult organised labour on HR policies",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("a256c11d-6c7d-482b-b10c-d678f56aa886"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8199),
                            IsDeleted = false,
                            Name = "Complexity of policies / procedures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("ddd5a237-5abd-42c9-9edf-b22a212aea53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8200),
                            IsDeleted = false,
                            Name = "Complexity of client agreements",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("46e38605-ad5b-43ad-9e81-1f506724b175"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8202),
                            IsDeleted = false,
                            Name = "Process inappropriate for geographic / physical location",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("b54c56cb-3f54-4d65-98cf-c678b934a74c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8203),
                            IsDeleted = false,
                            Name = "Automated process failures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("f805c637-815b-4b56-8690-603aed26207a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8205),
                            IsDeleted = false,
                            Name = "Introduction of new processes and procedures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("dae88727-6f3c-4659-8498-3782f46d42ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8208),
                            IsDeleted = false,
                            Name = "Internal communication failures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("21948551-9006-42f1-986d-ac1c7db9af7d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8209),
                            IsDeleted = false,
                            Name = "Lack of documented guidelines for new processes / services developed",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("2f71c504-f530-40b7-a507-5a503a00aa55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8211),
                            IsDeleted = false,
                            Name = "Rate of change / diversification of products / services",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("aaa7a14f-a111-4845-801a-18544ee94ff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8212),
                            IsDeleted = false,
                            Name = "Inadequate controls in place (specific / pervasive / monitoring)",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("c6cdb52a-42dd-45fc-9484-61715bb82061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8214),
                            IsDeleted = false,
                            Name = "Lack of reporting of control weaknesses / failures",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("d9a17759-b77f-4596-84d8-04c32c72db55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8215),
                            IsDeleted = false,
                            Name = "Failure of automated controls",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("4769479f-4715-490b-b349-ee9252d9b6cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8216),
                            IsDeleted = false,
                            Name = "Management ability to override controls or processes",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("c3e7e352-6203-460a-8d90-39184366eed6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8218),
                            IsDeleted = false,
                            Name = "Inadequate clarity of authority (ultimate decision maker) and reporting lines",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("9aaa00ec-6b83-468c-b0f5-831b241fb514"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8221),
                            IsDeleted = false,
                            Name = "Inadequate delegation of power (scope, limits, communication, reporting etc)",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("666b87d3-6f43-4619-89b3-06628cf2410d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8223),
                            IsDeleted = false,
                            Name = "Inadequate definition of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("71904197-ea51-4863-9bc8-2e7fb9ee0488"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8224),
                            IsDeleted = false,
                            Name = "Inadequate segregation of duties",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("53f20742-d684-4c53-9527-67dd5b518083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8225),
                            IsDeleted = false,
                            Name = "Lack of formal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("95a5ff6d-36c4-4078-b0a4-d2f5622052b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8227),
                            IsDeleted = false,
                            Name = "Inadequate / incomplete procedure (Internal communication failure)",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("2a61149a-ea1e-43eb-a360-90b7d8b3ecfd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8228),
                            IsDeleted = false,
                            Name = "Lack of access to internal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("79c7245e-b327-42f2-ad99-13904b564d98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8230),
                            IsDeleted = false,
                            Name = "Lack of SLA's between internal units",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("62cae498-d789-4666-9d7b-b5e5cadc8ced"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8231),
                            IsDeleted = false,
                            Name = "Non adherence to processes and procedures",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("727ff237-ddc8-43c5-8ff3-bb407a4c7a55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8234),
                            IsDeleted = false,
                            Name = "System inadequate for nature of required tasks",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("b1841e95-cef6-43e4-a0b7-9ba992044ba4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8236),
                            IsDeleted = false,
                            Name = "System inadequate for volume of activities (speed, storage etc)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("ea3431c7-2a11-4c29-ad3a-fd35e9744eb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8237),
                            IsDeleted = false,
                            Name = "Inadequate technical or functional documentation (user guides)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("9ccfda6a-f012-4d2f-b5de-be34e56f19a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8239),
                            IsDeleted = false,
                            Name = "IT helpdesk inefficiencies",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("885d1c7d-3769-4480-8bc6-4bca7f7f9a13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8240),
                            IsDeleted = false,
                            Name = "Technological obsolescence",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("60efa593-ee02-4905-b28d-6c74db7766ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8241),
                            IsDeleted = false,
                            Name = "Software failure (Software / data corruption etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("a7f21746-dccb-4c8c-a22f-2d0bcd72126e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8243),
                            IsDeleted = false,
                            Name = "Hardware failure (Failure of wearing parts etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("697c6934-d990-4c35-9b69-94c110744c61"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8244),
                            IsDeleted = false,
                            Name = "System unavailable due to extended period of power outage",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("24d3c54a-cc4b-41ec-a43c-3dbd74aff551"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8247),
                            IsDeleted = false,
                            Name = "Other Equipment failure (Failure of other assets/ equipments other than IT related equipments etc.)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("5beb98d1-4646-46b7-945b-6b0a495f3973"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8249),
                            IsDeleted = false,
                            Name = "Inadequate security of user profiles (passwords etc)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("76b936f4-c55a-491c-934c-c440ffc2d6eb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8250),
                            IsDeleted = false,
                            Name = "Inadequate security over critical data areas",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("f54d9548-6ecd-4594-bfe3-e9da2c98fc1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8252),
                            IsDeleted = false,
                            Name = "Inadequate logical system control checks (e.g. log monitoring)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("26e6982c-3968-4eaf-958f-06169b5c672e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8253),
                            IsDeleted = false,
                            Name = "Inadequate synergy between disparate systems with common users",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("8b348c7e-f087-4cd4-a588-939f09abb1cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8254),
                            IsDeleted = false,
                            Name = "Poor systems user interface",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("f45206f6-ae10-4204-a6c4-485b6c691609"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8256),
                            IsDeleted = false,
                            Name = "Inadequate system / data backups",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("1e294f95-b74f-4cc4-98d8-f087b5cb5050"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8257),
                            IsDeleted = false,
                            Name = "Virus / Intrusion attacks",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("e53c93a8-1142-4030-92b9-341cfb060a93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8260),
                            IsDeleted = false,
                            Name = "Lack of formalization of relationship with outsourcer (duties, deliverables etc)",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("a6e213a0-6042-4519-9f35-50937841fa8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8262),
                            IsDeleted = false,
                            Name = "Performance failure of outsourced vendor / service provider",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("67e51e3f-f988-4e78-a280-1b2fb72476a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8272),
                            IsDeleted = false,
                            Name = "Regulatory compliance breaches",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("be508a92-7ed2-4291-9284-9192c1626a4f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8273),
                            IsDeleted = false,
                            Name = "Government discretion to impose will and decisions without prior notice.",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("e4b5130b-b9fb-43f6-b7d5-98ed348826d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8275),
                            IsDeleted = false,
                            Name = "Ambiguity in Regulations",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("c3ea9ab4-50b5-4948-833f-d11c2d0f6a59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8276),
                            IsDeleted = false,
                            Name = "Inadequate response to legal / contractual disputes",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("defe711d-a76c-402f-9aa6-695738a0a8f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8278),
                            IsDeleted = false,
                            Name = "Inadequate pre-agreement investigations",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("241df46e-fe5d-4b8c-a12b-5e42c7bf6e11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8279),
                            IsDeleted = false,
                            Name = "Inadequate legal structures",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("043363f0-f778-4ffd-890b-a7c6691752d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8282),
                            IsDeleted = false,
                            Name = "Natural disasters (Fire, floods, etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("22eec760-0305-4e49-978d-94df071d6b92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8283),
                            IsDeleted = false,
                            Name = "External attacks (burglary, robberies, vandalism etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("69ccbc07-837c-4fd6-bdd5-b45bf8c8eca1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8284),
                            IsDeleted = false,
                            Name = "Political or social unrest",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("d0108e0e-7ecc-4389-9788-de6b0347566b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8286),
                            IsDeleted = false,
                            Name = "Unethical Social and Business Environment",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("c0db6ac0-999b-4872-8b2b-cdf27a625b88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8287),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by the client",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("7c833e41-8801-4000-adeb-3d05ecb54d2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8289),
                            IsDeleted = false,
                            Name = "Client/Counterparty Failures",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("5e5d6184-7801-4faf-ba2d-90df88da73bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 314, DateTimeKind.Utc).AddTicks(8291),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by third-parties",
                            RiskDriverCategoryId = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RiskEffectCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("19cdb428-3932-4107-bcb3-a5d708b794ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(648),
                            IsDeleted = false,
                            Name = "Legal Liability"
                        },
                        new
                        {
                            Id = new Guid("4d188492-3128-4b4c-8efc-759c857ab1d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(652),
                            IsDeleted = false,
                            Name = "Regulatory Action"
                        },
                        new
                        {
                            Id = new Guid("b7fd83c6-5940-40c0-b2b1-9d69eec66afa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(654),
                            IsDeleted = false,
                            Name = "Loss or Damage to Assets"
                        },
                        new
                        {
                            Id = new Guid("4bdde0f3-a34b-4440-894c-89147c9f80f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(655),
                            IsDeleted = false,
                            Name = "Restitution"
                        },
                        new
                        {
                            Id = new Guid("91188f9f-e0c9-449a-898d-7ab0beeed0b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(657),
                            IsDeleted = false,
                            Name = "Loss of Recourse"
                        },
                        new
                        {
                            Id = new Guid("cd69d692-ca3b-459f-a99a-bdfb9679bf09"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(658),
                            IsDeleted = false,
                            Name = "Write-down"
                        },
                        new
                        {
                            Id = new Guid("62bb03d6-7507-4478-9e9b-061784064061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(660),
                            IsDeleted = false,
                            Name = "Outsourcing / Vendor Costs"
                        },
                        new
                        {
                            Id = new Guid("62fedf17-a123-455e-8f0f-9848c9c2a7f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(661),
                            IsDeleted = false,
                            Name = "Reputational Loss"
                        },
                        new
                        {
                            Id = new Guid("0a77abc8-3b33-4521-bcf9-62ffad5e5e51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 297, DateTimeKind.Utc).AddTicks(666),
                            IsDeleted = false,
                            Name = "Reduced operational capacity"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EffectCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EffectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EffectType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RationaleForGrossLossValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EffectCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEffectManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approval")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssesmentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIdentification")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOccurence")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("EstimatedLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportedByUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Requester")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskEventDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BusinessEntityId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UnitId");

                    b.ToTable("RiskEvent", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoundaryEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RiskDriverDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskDriverSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("EventSubCategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("RiskDriverCategoryId");

                    b.HasIndex("RiskDriverId");

                    b.HasIndex("RiskDriverSubCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEventManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId", "Name")
                        .IsUnique();

                    b.ToTable("Unit", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2650),
                            DepartmentId = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("085af12a-41d1-4516-adc4-7e6aba212354"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2655),
                            DepartmentId = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2659),
                            DepartmentId = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            IsDeleted = false,
                            Name = "Securities Operations"
                        },
                        new
                        {
                            Id = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2661),
                            DepartmentId = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2664),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2673),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2676),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2678),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("556d5367-6794-4355-974f-e2ebb6447695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2682),
                            DepartmentId = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2686),
                            DepartmentId = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6b2c5f66-56fe-4a29-9393-5a8b7623d880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2688),
                            DepartmentId = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("c8ba310f-753d-4317-bce6-1559fb079142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2692),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2695),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("840c5c87-0155-4c39-85f4-f3736f04e540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2699),
                            DepartmentId = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("3f4ee577-f743-4614-adda-5bd4e641c85c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2701),
                            DepartmentId = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("a7f38bb3-596e-486d-b7ef-3e30b893a622"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2704),
                            DepartmentId = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("dda976b6-ac1f-42ed-a9cf-860ab77826ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2706),
                            DepartmentId = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2710),
                            DepartmentId = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2713),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2716),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f849e3eb-bc9e-46f7-9d8e-45912925298d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2718),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("2108a385-5b39-4953-97e7-216523683078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2722),
                            DepartmentId = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2724),
                            DepartmentId = new Guid("2b4752e0-89e3-45ab-b4d6-f3809bd9c015"),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2726),
                            DepartmentId = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("575a8a92-112f-4752-a875-24999b3f69ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2728),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2731),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("0aacc5ae-ea42-41e1-98c9-9b28d3628d08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2734),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("bfe9d961-8677-4fe2-9727-65f633759353"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2737),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("eaa2f32a-bd71-4b87-a692-6b7eae9f560f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2739),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2754),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("0845fb19-2120-461d-b291-74e1aafa9adb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2756),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2761),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2764),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2767),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2771),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2774),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2778),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2785),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2787),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("941c57d3-66c5-4083-85b9-20bf746b0def"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2790),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2792),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2794),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2796),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a16649cf-8b89-4027-9628-8af108db66fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2799),
                            DepartmentId = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2803),
                            DepartmentId = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e3eaede4-d14c-4c91-b986-f19350038ab4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2807),
                            DepartmentId = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2809),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2811),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("bae03f16-d1e7-410b-ad67-46bfe376c873"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2815),
                            DepartmentId = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("a6dc58d2-3ca3-442c-a2f2-74a3e2f861e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2817),
                            DepartmentId = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("6944d275-92d3-400f-bf70-00f6d9a271ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2819),
                            DepartmentId = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("67552124-7cee-4f19-8e6c-4b9598f1510f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2821),
                            DepartmentId = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2823),
                            DepartmentId = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2827),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2829),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("201b2b9b-55a4-49eb-82b7-05afb9110eae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2831),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("209cfd77-d2b6-4264-963c-bd02558837e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2833),
                            DepartmentId = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("d421d758-faec-4fc4-bab7-9f022d03698d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2835),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("eb42b40b-bfd0-443b-b03f-956ab9d03db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2838),
                            DepartmentId = new Guid("2214335d-9ca8-4ac9-8fe1-352deda923bf"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("d1904219-86a4-44a5-85a0-754ff2dcadc0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2840),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2842),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Operations Settlement"
                        },
                        new
                        {
                            Id = new Guid("81c6034f-0951-4de7-a51b-f4471168c94d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2845),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Customer Onboarding & Data Mgt Team"
                        },
                        new
                        {
                            Id = new Guid("bb208834-9b69-4f5b-a283-54c0fd69cf45"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2847),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Relationship Manager"
                        },
                        new
                        {
                            Id = new Guid("268d2016-a662-4c85-a3b2-5d4cfeeb33ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2849),
                            DepartmentId = new Guid("059d49f4-3cdc-4c20-8a1c-d5ed7f8d2791"),
                            IsDeleted = false,
                            Name = "Account Executives"
                        },
                        new
                        {
                            Id = new Guid("07d965be-1bd6-40df-bfe9-9679b6a4a3c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2852),
                            DepartmentId = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2854),
                            DepartmentId = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("9ec38d97-5e77-4410-90fd-30c179766021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2857),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2859),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2861),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2865),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2867),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2876),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("fb274136-84fe-430d-bab9-6647909a1a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2878),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("d638462f-bde3-4555-889b-2af892201b07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2880),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("e1671ffd-98d2-4063-b883-310378ac972a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2882),
                            DepartmentId = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2884),
                            DepartmentId = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("eaaafeef-5b77-4370-bd8f-21fd1b9e1b94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2886),
                            DepartmentId = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2890),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2892),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("156818e3-1ea6-42b0-a785-7dfaac6f5371"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2894),
                            DepartmentId = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("e60519ac-2af8-40be-94ed-2218e244d1d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2896),
                            DepartmentId = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("19331c05-77f0-4f49-bb90-2af3a78a7793"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2898),
                            DepartmentId = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("9fb66e98-951d-462e-a559-4f19a955bd5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2900),
                            DepartmentId = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2902),
                            DepartmentId = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2904),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2908),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f4c145fb-e830-4fa2-ba1d-77963b39eccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2910),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("598f6cac-69ce-47bb-8be4-f0697c1eb47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2912),
                            DepartmentId = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b79352c2-c526-46ce-91fc-c94915ea6ce3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2914),
                            DepartmentId = new Guid("1777e6a2-05bc-4322-81f0-10a205779214"),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("55b730f9-4550-4829-a479-9fc651b7946f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2916),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury Operations"
                        },
                        new
                        {
                            Id = new Guid("a3f65993-988f-49aa-9268-ae88d2472739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2918),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury Sales"
                        },
                        new
                        {
                            Id = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2922),
                            DepartmentId = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2924),
                            DepartmentId = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("54578f13-6ee3-418d-aede-e77041ef4878"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2927),
                            DepartmentId = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2931),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2933),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("16bedab4-1eb0-484a-9845-e1581085f146"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2935),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2938),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2942),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2946),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2948),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8f3b081b-f835-4577-aa13-9aefd6559760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2951),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("bb28a222-8895-4def-a8a2-1320ad8eb17b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2953),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("ada4d1eb-bcaf-40b1-9790-82c54a225fc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2955),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("e35aaace-aeba-48df-867c-750aef56d05f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2958),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2960),
                            DepartmentId = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2962),
                            DepartmentId = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db3aeece-97b4-42b0-bf58-0f02b87ae4cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2964),
                            DepartmentId = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2967),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2971),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("f60b1ae5-e26f-41bc-a5f3-814f19bdaf0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2973),
                            DepartmentId = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("dcea9d1b-56d2-47b3-901e-1e6b8a6365d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2975),
                            DepartmentId = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("7fc65d4a-e0ad-4274-b1ba-c447f49cd208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2977),
                            DepartmentId = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("e3ccc14e-8d7b-4817-a4c2-8d7eca698d72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2980),
                            DepartmentId = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2989),
                            DepartmentId = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2991),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2993),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d09befe1-8e69-4e76-9735-88597aeb09a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2997),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("cb66fa72-3399-4483-9766-bf35f2033862"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(2999),
                            DepartmentId = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3003),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d33101c-f8c2-44f0-8774-5eda11b05df3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3005),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3007),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3009),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("ad83f6ba-ea3b-4d12-a50a-5f00899e3f0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3011),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("3bc7f31c-9502-492b-8a0d-4204be7a5614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3013),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3017),
                            DepartmentId = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3019),
                            DepartmentId = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("36e6ae73-2270-40ea-ae16-64d610c1e5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3021),
                            DepartmentId = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3024),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3026),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("087015b4-acdb-4487-a687-0f084390f387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3028),
                            DepartmentId = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2289ecd3-d422-42e9-95d1-aa91425d1c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3030),
                            DepartmentId = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("9a3f56c3-6249-46eb-880d-01b01cbe7078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3032),
                            DepartmentId = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7979d030-e342-426c-b1e6-6ce2ba29cb20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3036),
                            DepartmentId = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("9f4432a0-9002-4553-997d-633869423d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3038),
                            DepartmentId = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3040),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("e4789074-ab43-463f-b18f-42606e28db63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3042),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d79f8f8d-8fe1-4ff4-94f0-2550f51d8186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3044),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("ea600662-5dbb-4ad6-8200-cc3b2cf39a10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3046),
                            DepartmentId = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1df86816-2842-4941-8710-36822d6240e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3048),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3051),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3054),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3056),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("eb862f6f-9693-4a7a-b2b8-df539e26a8c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3058),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("be3396b5-e02e-48ac-ae55-d64dad1cbd76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3060),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3062),
                            DepartmentId = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3064),
                            DepartmentId = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8581332b-8d77-4f1c-8a3b-79a996ff575f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3066),
                            DepartmentId = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3068),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3072),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3074),
                            DepartmentId = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3076),
                            DepartmentId = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3078),
                            DepartmentId = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3080),
                            DepartmentId = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3082),
                            DepartmentId = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3084),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3093),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("30306755-5207-4d72-9c62-359afa8a5f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3097),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3100),
                            DepartmentId = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3102),
                            DepartmentId = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("0c3dc3f2-d704-4d25-9177-46bde182bf5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3104),
                            DepartmentId = new Guid("865be81a-ebe9-4c50-b5b9-9c07c28b1d9f"),
                            IsDeleted = false,
                            Name = "Company Secretariat"
                        },
                        new
                        {
                            Id = new Guid("856f2fcf-81ba-4ff8-84e5-f61b0acb9128"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3106),
                            DepartmentId = new Guid("37d376e3-5e1f-42a7-9d77-e63f07ca4475"),
                            IsDeleted = false,
                            Name = "Data and Insights"
                        },
                        new
                        {
                            Id = new Guid("b625ff03-0916-4369-882d-0ffcd322660d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3108),
                            DepartmentId = new Guid("252cf529-9e73-4257-a718-d9cf51251ae0"),
                            IsDeleted = false,
                            Name = "Environmental, Social and Governance"
                        },
                        new
                        {
                            Id = new Guid("3ff75ac7-8e21-4e8a-8895-a77a4dfb5dee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3110),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("5e3f8a3a-4451-4153-8871-eaf7f24aa0e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3112),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("789c6900-e5a3-44d4-9e6e-f165c0f94650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3116),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3118),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("2abce038-72a5-4fd5-9cfc-deef8348f4d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3120),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("38bf0e6d-58f3-47f8-8324-4938c42ac62b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3122),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("7d22672e-a552-4944-a418-d7678717c193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3126),
                            DepartmentId = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3128),
                            DepartmentId = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("ad196f3c-1065-439f-a8d4-4a88a6933949"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3130),
                            DepartmentId = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3132),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3136),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2570f9e3-7c71-41de-9a32-0981e29c14b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3138),
                            DepartmentId = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("bec6c783-ba3c-4180-9d8a-052ce433f695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3140),
                            DepartmentId = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("33cdd2bc-364b-4975-a2ba-3f40cecca022"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3142),
                            DepartmentId = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("5efbbf5f-3081-4492-9ec4-b8880b3eb06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3144),
                            DepartmentId = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3146),
                            DepartmentId = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3148),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3150),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6194902-48f8-4bed-bb0d-0aae5b24df4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3154),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("bedd46ce-899c-4c9d-a098-bb49c3633b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3156),
                            DepartmentId = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("9e089a8d-603a-4c72-a278-0aeb843f9015"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3158),
                            DepartmentId = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4914b69b-1b5e-499a-8350-9fcf5b2e4dca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3160),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("185e0a8b-5aa5-43e5-8828-edeae97cd121"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3162),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("2d544b75-9bda-4aff-a212-a2998fc28cfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3164),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("2470d7cf-0bea-49c7-a2c7-04c9fa36ade6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3166),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("30c9c38f-23b7-4694-acd9-bac0da70eb4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3168),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("cc9fd72b-9a83-43f9-b28f-f8376af33ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3171),
                            DepartmentId = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("8618dc34-8edc-471a-8bab-e7d8b0670462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3173),
                            DepartmentId = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("fa110f66-701d-43b3-9cea-35ca0aaeece1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3175),
                            DepartmentId = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("a9e024ce-d1e7-42c6-b833-73bb43471c8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3178),
                            DepartmentId = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("db1294f5-ada3-42c3-bc59-cd554818e099"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3181),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("64e5f632-d1a0-4ed0-b133-629f6c5d05c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3183),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("4771bfd1-bcba-463a-84ed-f6e8a53f207a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3185),
                            DepartmentId = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("659a83bc-cee9-4939-8669-d2c5617b7845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3187),
                            DepartmentId = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("1e382c5d-6b22-43a6-9ce9-521244c1f555"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3191),
                            DepartmentId = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("ad6a7903-fb1b-4bf2-a55c-2d06f83e7707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3193),
                            DepartmentId = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("8a454ad0-80d6-4ded-a89e-c5e9023357ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3203),
                            DepartmentId = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("12fc7195-2c3f-4bca-88b4-beef3f234d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3205),
                            DepartmentId = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("491cdc51-64aa-4f6b-b5ba-b036b0174852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3208),
                            DepartmentId = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("d6733360-b4e1-4b88-9cbb-364cf2c3fd9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3210),
                            DepartmentId = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("5d296ac9-f9f9-4f69-bb40-0f8b616a6d0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3212),
                            DepartmentId = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("35a7256f-7c2a-45ea-8cbb-2e7509b1cd21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3214),
                            DepartmentId = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("3d1ba0a1-ce2d-4806-b60e-4002c054f341"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3218),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("5b77ef60-1c4a-474a-a320-30b120509229"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3220),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3222),
                            DepartmentId = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3224),
                            DepartmentId = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3226),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3228),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("8eb2aa8b-3cd7-41b1-9628-436aaace8df5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3230),
                            DepartmentId = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("79f64fe8-0a3e-4f2a-b499-8f48e6ea37e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3232),
                            DepartmentId = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("2f7f4b7b-25de-490c-9db4-5ecbb9265268"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3235),
                            DepartmentId = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7c0261cb-0d3e-496d-aa86-9cf5f37da1ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3237),
                            DepartmentId = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3239),
                            DepartmentId = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3242),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3244),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("757ecc97-7a10-420e-b919-2ac7aa557b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3246),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("19704b51-99bb-439f-a4db-6603c6089a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3248),
                            DepartmentId = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3250),
                            DepartmentId = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("5a96a0a8-8d71-45dc-9736-befceefbecb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3253),
                            DepartmentId = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3256),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3258),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3260),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3262),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3264),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3266),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("329d8cac-d18b-4a9b-bd38-8535e19d2b60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3268),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("e0df9434-41f4-454a-a02b-45d644b4d08d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3271),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("83d63b3c-f20b-4e30-8384-6d603fd67bd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3273),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6f9b36b-1d78-475e-b7e0-ffdd9f6e45e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3275),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("b88ebfeb-5f91-4718-aa00-ec6ef714f50e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3278),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3280),
                            DepartmentId = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("003ed424-1724-44b1-bcb1-924abb94e338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3282),
                            DepartmentId = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("5a64f00c-b288-46b3-aa77-ecc4d35b212d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3284),
                            DepartmentId = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3286),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3290),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a39f7dfe-55bb-433d-aabd-70476e81a9f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3292),
                            DepartmentId = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6c300c5e-fba6-467e-952f-4bb3d1d15ea4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3294),
                            DepartmentId = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("b8bc161a-36be-433c-b9b2-2502b40786de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3296),
                            DepartmentId = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("36998696-f319-43d4-bcbf-61b52d0556bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3298),
                            DepartmentId = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3311),
                            DepartmentId = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3313),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3315),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("b0c9d7c8-a875-4f67-b386-d3475c0b2585"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3318),
                            DepartmentId = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("10f06e8a-0531-458a-9131-3d1820112a49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3321),
                            DepartmentId = new Guid("840c2b0e-4146-41fb-a771-ede34bd0d915"),
                            IsDeleted = false,
                            Name = "ARMHIIL"
                        },
                        new
                        {
                            Id = new Guid("1fe23b5b-08a7-450f-9f19-19c41aff6037"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 316, DateTimeKind.Utc).AddTicks(3323),
                            DepartmentId = new Guid("b0b881eb-8beb-412e-8b63-ebfb5fbe0c0a"),
                            IsDeleted = false,
                            Name = "ARM Capital"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Infrastructure.Data.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMessageSent")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EmailId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EmailId"));

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline", b =>
                {
                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditPlanningMemoAuditExecutionId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditPlanningMemoAuditExecutionId", "AuditPlanningMemoAuditExecutionId1");

                    b.HasIndex("AuditPlanningMemoAuditExecutionId1");

                    b.ToTable("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline");
                });

            modelBuilder.Entity("AuditProgramAuditExecutionCommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("AuditProgramAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AuditProgramAuditExecutionId", "CommenceEngagementAuditexecutionsId");

                    b.HasIndex("CommenceEngagementAuditexecutionsId");

                    b.ToTable("AuditProgramAuditExecutionCommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionOwnerUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToPreventReoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ActionToResolve")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("WorkerPaperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerPaperId")
                        .IsUnique();

                    b.ToTable("AuditFindings");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExceptionsNoted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueRating")
                        .HasColumnType("int");

                    b.Property<string>("IssueSummary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Reoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ReviewResult")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuditProgramId")
                        .IsUnique();

                    b.ToTable("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Permission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9353),
                            IsDeleted = false,
                            Module = "Risk Identification",
                            Name = "Create risk event"
                        },
                        new
                        {
                            Id = new Guid("e6ca00e4-7080-4198-b75c-37a2a99d4bc2"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9359),
                            IsDeleted = false,
                            Module = "Risk Identification",
                            Name = "Review risk event"
                        },
                        new
                        {
                            Id = new Guid("226501c2-60c7-4254-bb7f-975480eae817"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9362),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Start RCSA"
                        },
                        new
                        {
                            Id = new Guid("836b6390-aa37-4c3c-bdc1-42f9977a16b4"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9364),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Initiate RCSA"
                        },
                        new
                        {
                            Id = new Guid("6306f9e3-2489-4d8d-9846-fe741faab813"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9365),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Review RCSA"
                        },
                        new
                        {
                            Id = new Guid("559c4f59-68ac-4f83-a708-6632b8a080f4"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9367),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Process control risk rating"
                        },
                        new
                        {
                            Id = new Guid("2e44d6a0-5c92-40be-8d5e-28a586ddeb26"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9368),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Apply test to process inherent risk"
                        },
                        new
                        {
                            Id = new Guid("ed334b91-9e47-46f0-92b7-84c9a1e34b9e"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9369),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Approve initiated RCSA"
                        },
                        new
                        {
                            Id = new Guid("6ae48c8e-e15c-40aa-a660-3a7556d53f3c"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9371),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Reject initiated RCSA"
                        },
                        new
                        {
                            Id = new Guid("4467735e-4043-40a7-b571-654751d1b8d5"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9372),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Approve reviewed test applied"
                        },
                        new
                        {
                            Id = new Guid("f2641950-69d9-499c-8e7b-4b7b2a8a6efb"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9373),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Reject reviewed test applied"
                        },
                        new
                        {
                            Id = new Guid("80041e2a-9387-4554-ba14-496dfc07358a"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9375),
                            IsDeleted = false,
                            Module = "Risk Control Self Assessment",
                            Name = "Finalize RCSA"
                        },
                        new
                        {
                            Id = new Guid("b5333a97-47ae-4464-82e7-eb552230fd2c"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9377),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Initiate product risk assessment"
                        },
                        new
                        {
                            Id = new Guid("e4db911f-91dd-463e-a310-b441708198aa"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9378),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Create assess risk"
                        },
                        new
                        {
                            Id = new Guid("f8684d71-0b28-4f93-bcd7-d1f7c107708f"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9379),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Approve product risk assessment"
                        },
                        new
                        {
                            Id = new Guid("e1f00b8c-9704-4406-9d61-468146fe06dd"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9381),
                            IsDeleted = false,
                            Module = "Product Risk Assessment",
                            Name = "Reject product risk assessment"
                        },
                        new
                        {
                            Id = new Guid("9f554761-84a3-4c52-9a3d-3955983c4cc3"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9382),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Starts the Business Impact Analysis"
                        },
                        new
                        {
                            Id = new Guid("c42a1ac1-014c-4bfa-a258-7ddb9b257b58"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9383),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Initiate the Business Impact Analysis"
                        },
                        new
                        {
                            Id = new Guid("0f4e423f-2a2d-48bb-b8b7-3c1a4d444fa2"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9385),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Approve initiate business impact analysis"
                        },
                        new
                        {
                            Id = new Guid("7f5e914d-5c48-4659-a46e-9461f64f4c9b"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9386),
                            IsDeleted = false,
                            Module = "Business Impact Analysis",
                            Name = "Reject initiate business impact analysis"
                        },
                        new
                        {
                            Id = new Guid("42a05247-8579-4c6c-96bf-d5cd3a73a89f"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9387),
                            IsDeleted = false,
                            Module = "Action Tracker",
                            Name = "Update action progress and status"
                        },
                        new
                        {
                            Id = new Guid("a17e0b76-5d29-4c79-a8df-bae18da34cb1"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9388),
                            IsDeleted = false,
                            Module = "Action Tracker",
                            Name = "Update action progress and status inherent risk"
                        },
                        new
                        {
                            Id = new Guid("078c30e2-702e-4abe-af61-fc86357535d7"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9390),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Create rule"
                        },
                        new
                        {
                            Id = new Guid("ac289fc1-4149-42e3-9870-3ec94de81bfa"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9391),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Update rule"
                        },
                        new
                        {
                            Id = new Guid("e36a0878-2621-4749-849c-0cc979ec0b32"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9392),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Create business"
                        },
                        new
                        {
                            Id = new Guid("4ca6b903-3f45-446d-b1ae-6d99b696c845"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9393),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Update business"
                        },
                        new
                        {
                            Id = new Guid("34e8d57a-e3f3-471e-be17-b8b70988282b"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9395),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Create regulator"
                        },
                        new
                        {
                            Id = new Guid("3fa5b006-8d8f-4fec-aff9-249615a896a1"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9396),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Upload report"
                        },
                        new
                        {
                            Id = new Guid("0291715f-c93a-425f-91e3-3f4d64cbe720"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9397),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Approve attached report"
                        },
                        new
                        {
                            Id = new Guid("c135ca16-e877-4e16-aed0-9e330456f33f"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9398),
                            IsDeleted = false,
                            Module = "Compliance Planning",
                            Name = "Reject attached report"
                        },
                        new
                        {
                            Id = new Guid("cf2a9cde-97eb-41e0-b17f-d7ac38ff601b"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9399),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Initiate regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("316f9d9a-3f5c-40e9-b5a5-25833587bda3"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9400),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Update regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("0d542309-09b4-4176-ad55-e7d42e028d14"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9402),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Make Regulatory Payment"
                        },
                        new
                        {
                            Id = new Guid("05ca74cc-cd70-4965-9ea5-2530e2171774"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9403),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Approve regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("a9e34482-dd6b-4274-ae9f-0214d6490b3e"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9456),
                            IsDeleted = false,
                            Module = "Regulatory Payment",
                            Name = "Reject regulatory payment"
                        },
                        new
                        {
                            Id = new Guid("438d86f6-f78c-44a8-b0fe-deb55693e80a"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9457),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Initiate statutory payment"
                        },
                        new
                        {
                            Id = new Guid("f5b16af9-1c7d-4c03-8c4c-5669819f74cf"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9458),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Update statutory payment"
                        },
                        new
                        {
                            Id = new Guid("9425e21e-0372-466c-bff1-70b685a75ee8"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9459),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Process statutory payment"
                        },
                        new
                        {
                            Id = new Guid("3889f9f8-25a5-4904-9d9c-56bf9d506a1d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9461),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Submit statutory payment"
                        },
                        new
                        {
                            Id = new Guid("f0157a4d-de6c-47c7-a4b3-243ebf8076ca"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9462),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Approve statutory payment"
                        },
                        new
                        {
                            Id = new Guid("5c9bd282-d701-4591-877b-9e36a61cff69"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9463),
                            IsDeleted = false,
                            Module = "Statutory Payment",
                            Name = "Reject statutory payment"
                        },
                        new
                        {
                            Id = new Guid("3cb6772e-8370-41e2-a4ff-9adfa83e038c"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9466),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Approve created Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d1ada3b1-3e74-4d43-8b65-0da982aff7e5"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9467),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Reject created Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b67903bd-6435-412d-947c-46a0d2db14ae"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9468),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Create Internal Control"
                        },
                        new
                        {
                            Id = new Guid("57afe880-14b9-4fcb-b627-afe5f63b3029"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9469),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Update Created Internal Control"
                        },
                        new
                        {
                            Id = new Guid("91dc6d3f-dd35-451e-b04a-fa455816c09c"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9471),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Upload attachment for created investigation"
                        },
                        new
                        {
                            Id = new Guid("ffe65ef0-6506-47e6-b8ca-a9290f13c7c5"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9472),
                            IsDeleted = false,
                            Module = "Internal Control",
                            Name = "Update investigation status"
                        },
                        new
                        {
                            Id = new Guid("69a2e6e4-0837-47fa-8da9-958f632aff10"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9473),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Update Created Exception Tracker"
                        },
                        new
                        {
                            Id = new Guid("8aea0f36-ab57-4f65-b9f2-5945eb3e9436"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9474),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Create Exception Tracker"
                        },
                        new
                        {
                            Id = new Guid("fc74be96-ce8e-469e-8a1a-83a98aaddd08"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9475),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Delete Created Exception Tracker"
                        },
                        new
                        {
                            Id = new Guid("5ed6a1a1-55a1-4f6f-a9bb-f61f3ca03df1"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9477),
                            IsDeleted = false,
                            Module = "Internal Control - Exception",
                            Name = "Share Exception report"
                        },
                        new
                        {
                            Id = new Guid("218b0863-5156-4488-ab9a-b71c8ae9d2b4"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9478),
                            IsDeleted = false,
                            Module = "Internal Control - Dashboard",
                            Name = "Create Task"
                        },
                        new
                        {
                            Id = new Guid("b2a7429b-74b8-419f-b3ec-a5cab34abfc9"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9479),
                            IsDeleted = false,
                            Module = "Internal Control - Dashboard",
                            Name = "Supervisor to Update task"
                        },
                        new
                        {
                            Id = new Guid("55b7f825-39a1-4437-a42e-2a333ae6658d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9480),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Approve created Call Over Report"
                        },
                        new
                        {
                            Id = new Guid("26aecbd2-eb44-42b2-b83d-4b6778a9a6b8"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9481),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Reject created Call Over Report"
                        },
                        new
                        {
                            Id = new Guid("c54a7d72-d291-49a0-a6ae-ba94f662ee8e"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9484),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Save call over report attachment"
                        },
                        new
                        {
                            Id = new Guid("d4c9affa-992a-48b5-8e17-97e44aa3e232"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9485),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Submit call over reports"
                        },
                        new
                        {
                            Id = new Guid("d20f5128-ef29-4b73-bac2-28f115906938"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9486),
                            IsDeleted = false,
                            Module = "Internal Control - Call Over",
                            Name = "Save call over score"
                        },
                        new
                        {
                            Id = new Guid("1c10cda1-cd2a-42a4-b295-53404768dc35"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9487),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Create operation control exception"
                        },
                        new
                        {
                            Id = new Guid("d35ab363-6ba9-4812-b0e1-c4685725d688"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9490),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Re-assigned exception"
                        },
                        new
                        {
                            Id = new Guid("9f95e4c7-2d36-495c-b30f-44b3c136fa40"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9491),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Approve operation exception"
                        },
                        new
                        {
                            Id = new Guid("98bd95cd-1c4a-4427-bd76-957624b0ca75"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9492),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Reject operation exception"
                        },
                        new
                        {
                            Id = new Guid("4ba7de16-cc9b-4f2e-9ca6-4133cd025310"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9493),
                            IsDeleted = false,
                            Module = "Operation Control",
                            Name = "Update operation control exception"
                        },
                        new
                        {
                            Id = new Guid("df5b084e-654d-4e82-84b2-45132d8379b7"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9494),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit announcement memo execution plan"
                        },
                        new
                        {
                            Id = new Guid("183358b1-ecb3-4280-bcd1-50d6cbb31e1d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9496),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit engagement letter plan"
                        },
                        new
                        {
                            Id = new Guid("a78e57af-08fc-4eae-9dcc-0bbc0b973ad7"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9497),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Information requirement execution plan"
                        },
                        new
                        {
                            Id = new Guid("f6f0bfe0-8f31-484c-9d92-45803b717168"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9498),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit planning memo execution plan"
                        },
                        new
                        {
                            Id = new Guid("1700f355-1943-49cb-bb43-09d91ae939d9"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9500),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Audit program"
                        },
                        new
                        {
                            Id = new Guid("de6f0445-9768-4cdf-b4a6-48c5afbf666e"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9501),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve audit announcement memo"
                        },
                        new
                        {
                            Id = new Guid("87fb2cbd-b5da-48bd-8966-a6bc109e7e9d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9502),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Engagement Letter"
                        },
                        new
                        {
                            Id = new Guid("a777e12a-f2d2-40e4-a6a3-1673fea21290"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9503),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Information Requirement"
                        },
                        new
                        {
                            Id = new Guid("d9e92885-ddd4-4a6e-b779-3216e1bb2b4d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9504),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Audit Planning Memo"
                        },
                        new
                        {
                            Id = new Guid("dc200a69-bb01-4d07-94a8-79844de5170d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9505),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve Audit Program"
                        },
                        new
                        {
                            Id = new Guid("67805da5-8bd6-441d-9b6b-9c370673c435"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9507),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Audit Announcement Memo"
                        },
                        new
                        {
                            Id = new Guid("d9d45947-d2e5-480e-95cf-379efd384766"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9508),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Engagement Letter"
                        },
                        new
                        {
                            Id = new Guid("9da49c2d-b60c-43dc-9850-04e8e8fcd945"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9509),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Information Requirement"
                        },
                        new
                        {
                            Id = new Guid("26a31c04-6b1d-43d5-a0d0-ea73756fa20f"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9510),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Audit Planning Memo"
                        },
                        new
                        {
                            Id = new Guid("706a5ced-92e3-46f1-8379-bf78129c1f68"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9512),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject Audit Program"
                        },
                        new
                        {
                            Id = new Guid("1178eaab-7eac-4a3c-9a98-3d8c4b88a5f1"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9513),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Initiate work paper"
                        },
                        new
                        {
                            Id = new Guid("c56be2cd-feb9-4186-aadb-5c631b12ca35"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9518),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Initiate audit findings"
                        },
                        new
                        {
                            Id = new Guid("d8417df3-e5b7-4ac5-98ef-8f7e0431d9bb"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9519),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve work paper"
                        },
                        new
                        {
                            Id = new Guid("e40ce5f0-19e6-49b9-a0cb-795c3ec26b67"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9520),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject work paper"
                        },
                        new
                        {
                            Id = new Guid("f6f8e3f6-d1cc-48d9-987a-bbc42eebf7f3"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9521),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Approve audit findings"
                        },
                        new
                        {
                            Id = new Guid("eae56b73-b087-4fd8-81dd-f35f54485718"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9522),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Reject audit findings"
                        },
                        new
                        {
                            Id = new Guid("39bca629-6bef-4af2-94e2-920d9ff9bc31"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9524),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Audit Announcement Memo"
                        },
                        new
                        {
                            Id = new Guid("a5df59df-b003-42fc-802d-830bd167cb7e"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9525),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update audit engagement letter"
                        },
                        new
                        {
                            Id = new Guid("689e70cd-0249-49ef-8518-04a0e344484d"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9533),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Information Requirement"
                        },
                        new
                        {
                            Id = new Guid("5d027a16-4660-445c-850e-63c81242f5ea"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9535),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Audit Planning Memo"
                        },
                        new
                        {
                            Id = new Guid("5f870a71-0928-4655-a95d-ff677c4a31ff"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9536),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update Audit Program"
                        },
                        new
                        {
                            Id = new Guid("607259d7-edb7-4a94-a794-72f90ce076a0"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9537),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update work paper"
                        },
                        new
                        {
                            Id = new Guid("51e387a4-bca5-48bd-b919-5c5e466f49b9"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 334, DateTimeKind.Utc).AddTicks(9538),
                            IsDeleted = false,
                            Module = "Audit Execution",
                            Name = "Update audit findings"
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.SessionManagement.SessionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockDuration")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("NumberOfTry")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionTracker", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ec907e7-f000-42d4-8845-c91f2c5f9dd0"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7221),
                            Email = "chukwuebuka.obieri@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwuebuka Obieri",
                            Status = 0,
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("f8c0dce7-b226-405c-a7d8-d384859b89ba"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7228),
                            Email = "iwasam.elemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Iwasam Elemi",
                            Status = 0,
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("c7c683ce-3fd8-4b1a-b934-6aff9dc9e47d"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7231),
                            Email = "thelma.uwandu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Thelma.Uwandu",
                            Status = 0,
                            Unit = "Risk Management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("55568095-0cc3-4845-85c5-d8df220c473d"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7247),
                            Email = "nehizena.ibhawoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Status = 0,
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("06b6f60c-5608-4f19-9ed4-797abba5e89d"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7249),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Status = 0,
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("df36197b-453a-403c-bc19-da7669fffd58"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7255),
                            Email = "ediagbonya.osayomwanbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ediagbonya Osayomwanbo",
                            Status = 0,
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784")
                        },
                        new
                        {
                            Id = new Guid("5ac866aa-f0c0-497c-9e6f-d61ea0353e54"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7256),
                            Email = "james.ewah@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Ewah",
                            Status = 0,
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784")
                        },
                        new
                        {
                            Id = new Guid("98537b19-26e2-44c2-8f11-ad74d542edc4"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7258),
                            Email = "olayemi.toye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olayemi Toye",
                            Status = 0,
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("7319d0b0-9762-40dc-aafa-2babd2f63b23"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7260),
                            Email = "phoebe.ohiembor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Phoebe Ohiembor",
                            Status = 0,
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("8dd02e2d-cc3f-4808-a10c-c398695a0f19"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7262),
                            Email = "ethan.okwara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ethan Okwara",
                            Status = 0,
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("591da812-001f-4d55-bc45-cac3277d3c5f"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7264),
                            Email = "ubi.torsam@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ubi Torsam",
                            Status = 0,
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("65b6952a-dfc0-4e10-8186-40cf64961084"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7267),
                            Email = "stephen.igwenwanne@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephen Igwenwanne",
                            Status = 0,
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b")
                        },
                        new
                        {
                            Id = new Guid("f3cd693e-27c3-47d2-b94b-364de584441a"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7269),
                            Email = "ndubuisi.anya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ndubuisi Anya",
                            Status = 0,
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b")
                        },
                        new
                        {
                            Id = new Guid("b6d5f50d-a17e-4906-910d-dc5f6d6011ad"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7273),
                            Email = "hassan.adeObafemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hassan AdeObafemi",
                            Status = 0,
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("173b86b1-35a4-4bc6-8f8d-b8d4b1ae60cd"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7274),
                            Email = "david.akinboade@arm.com.ng",
                            IsDeleted = false,
                            Name = "David Akinboade",
                            Status = 0,
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("d59bff7b-7bb1-40b1-8182-38d9942f92ba"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7277),
                            Email = "eddy.ayikimi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Eddy Ayikimi",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("c6e70be3-4b73-4f4f-96e9-c85f0b050604"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7279),
                            Email = "akpesiri.kodu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Akpesiri Kodu",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("3d0cff04-bb87-4e68-9196-6300ac6fa6f6"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7283),
                            Email = "adeleye.adewusi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adeleye Adewusi",
                            Status = 0,
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e")
                        },
                        new
                        {
                            Id = new Guid("2afa9355-40fb-41d6-bc24-325aa8dede94"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7285),
                            Email = "olatunde.samuel@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olatunde Samuel",
                            Status = 0,
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e")
                        },
                        new
                        {
                            Id = new Guid("fa541e0b-ee6a-42e8-8759-a603ca056df7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7292),
                            Email = "bimbo.moses@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("09329a75-1fe8-497b-8d8a-666f17584bdb"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7294),
                            Email = "aminat.ashafa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Aminat Ashafa",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("a0ae67cf-80c7-4ffe-9d4a-99917eec1930"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7298),
                            Email = "oluwaferanmi.olorunleke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwaferanmi Olorunleke",
                            Status = 0,
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("865111b5-422e-4efb-a938-cb52f29a2984"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7300),
                            Email = "folarinde.ayenuwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folarinde Ayenuwa",
                            Status = 0,
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("e5928aac-3cec-4a4e-99fd-7578207edaea"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7304),
                            Email = "ibukun.ajose@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ibukun Ajose",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805")
                        },
                        new
                        {
                            Id = new Guid("d57ff74c-8f7b-4b83-9459-591dea0f225b"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7305),
                            Email = "kevian.kevin@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kevian Kevin",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805")
                        },
                        new
                        {
                            Id = new Guid("d87233bd-a8de-4eff-85dd-afd6cca917de"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7309),
                            Email = "raymond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raymond Akorah",
                            Status = 0,
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e9625f9b-94a5-4c12-b596-b893a3ce269c"),
                            Business = "ARM Digital Financial Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7315),
                            Email = "ina.alogwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ina Alogwu",
                            Status = 0,
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("9a8fb10c-6541-4936-9051-8f9ede3c4362"),
                            Business = "ARM Digital Financial Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7318),
                            Email = "folaranmi.adefila@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folaranmi Adefila",
                            Status = 0,
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("ec80c335-b939-4d65-8c63-ff50aa72dee2"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7322),
                            Email = "oritsegbemi.agbajor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oritsegbemi Agbajor",
                            Status = 0,
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083")
                        },
                        new
                        {
                            Id = new Guid("50ec1c98-e033-4746-95cd-14cf467ac2c1"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7323),
                            Email = "chidinma.mbakwe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chidinma Mbakwe",
                            Status = 0,
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083")
                        },
                        new
                        {
                            Id = new Guid("09a1d9e8-2c78-4714-a467-163d08e6ca2d"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7327),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("93ec0197-a481-4786-a352-01453948d442"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7337),
                            Email = "joy.oyekan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("388c5307-a94a-40ad-837c-57d29680db5b"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7340),
                            Email = "oluwabunmi.abiodun-wright@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwabunmi Abiodun-Wright",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("247740ec-52b7-4fe9-86f6-54fb88377f41"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7341),
                            Email = "ezekiel.solomon@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ezekiel Solomon",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("d6b4f78f-dd29-4e5d-a747-4ff3d3680eda"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7345),
                            Email = "judith.okeke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Judith Okeke",
                            Status = 0,
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7")
                        },
                        new
                        {
                            Id = new Guid("9f4477f0-a895-4d9e-88d5-950297491ea2"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7348),
                            Email = "carol.ariyibi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Carol Ariyibi",
                            Status = 0,
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621")
                        },
                        new
                        {
                            Id = new Guid("6958ec91-e426-489b-83e8-9ffb6da2edc3"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7350),
                            Email = "olaoluwa.omolayole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olaoluwa Omolayole",
                            Status = 0,
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621")
                        },
                        new
                        {
                            Id = new Guid("bafb2194-0b3e-4920-9a6a-a7cefd184b92"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7352),
                            Email = "jacqueline.adefeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jacqueline Adefeso",
                            Status = 0,
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9")
                        },
                        new
                        {
                            Id = new Guid("00c2f894-ac84-4a47-9525-33278b59e2f3"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7354),
                            Email = "moradeke.odugbesan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moradeke Odugbesan",
                            Status = 0,
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9")
                        },
                        new
                        {
                            Id = new Guid("c612165f-a864-4689-9d6e-7e642d5969f6"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7358),
                            Email = "dare.shobajo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Dare Shobajo",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("ce46acf8-8f53-4944-984f-3fe393ec9995"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7359),
                            Email = "moshood.hassan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moshood Hassan",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("1af07145-eb79-42ba-b22f-9287789d1f6a"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7361),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("775d1917-abab-4f68-b620-21e93d466c1b"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7363),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Status = 0,
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("71da43da-6b37-418d-a341-e439bb1820cd"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7369),
                            Email = "doyinsola.ola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Doyinsola Ola",
                            Status = 0,
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507")
                        },
                        new
                        {
                            Id = new Guid("9d285e65-bcf5-47b1-9193-872cde03a83c"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7370),
                            Email = "rasheed.adebola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rasheed Adebola",
                            Status = 0,
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507")
                        },
                        new
                        {
                            Id = new Guid("8ed8377d-c4aa-46c3-a790-3e22875f1239"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7372),
                            Email = "gozie.alozieuwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gozie Alozieuwa",
                            Status = 0,
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("574b7e98-b02f-4e1f-a9ad-81ad5bb8c5da"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7374),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Status = 0,
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("5889f616-471c-4f82-9f0e-f3531ee5a88e"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7375),
                            Email = "oyinkan.aregbesola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oyinkan Aregbesola",
                            Status = 0,
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d")
                        },
                        new
                        {
                            Id = new Guid("cc43d9d3-7a0a-4587-933e-2b911260b854"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7377),
                            Email = "moyosore.taiwo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moyosore Taiwo",
                            Status = 0,
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d")
                        },
                        new
                        {
                            Id = new Guid("e23ab075-e1ec-45e3-9a79-fcf902e481d1"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7382),
                            Email = "jobalo.oshinkalu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jobalo Oshinkalu",
                            Status = 0,
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d")
                        },
                        new
                        {
                            Id = new Guid("3fa2c3f1-80df-4ee3-8d51-bde8e1344ba3"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7384),
                            Email = "oyedele.oyinbojuni@armharith.com",
                            IsDeleted = false,
                            Name = "Oyedele Oyinbojuni",
                            Status = 0,
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d")
                        },
                        new
                        {
                            Id = new Guid("8c4a47e5-d14d-487e-a728-02ca076320c1"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7390),
                            Email = "isaac.elakhe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("e79bdd0f-9bb5-422c-bcab-4180074feb32"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7392),
                            Email = "oladupe.oshinuga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oladupe Oshinuga",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("d42fdf38-8f77-47b6-8d0d-51823daaa4a5"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7396),
                            Email = "adetayo.adebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adetayo Adebiyi",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("6089a36f-a44e-4d7f-a7ba-da3aa407ea2f"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7398),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("717056f1-237d-40f9-b7b1-a76f94ef6e70"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7400),
                            Email = "itunu.olatunde-folaji@arm.com.ng",
                            IsDeleted = false,
                            Name = "Itunu Olatunde-Folaji",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("928cde44-7794-4bd7-8703-c7e46f03e4c0"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7402),
                            Email = "roselina.ajah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Roselina Ajah",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("ff7c227e-8414-4a29-8f19-8e07e59d05b9"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7403),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("be484a13-b271-4b75-82a5-8034c8ff6b9f"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7405),
                            Email = "faith.sani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("40cb3e00-aaa6-47bc-be6c-396ad62715f3"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7410),
                            Email = "mounir.bouba@arm.com.ng",
                            IsDeleted = false,
                            Name = "Mounir Bouba",
                            Status = 0,
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("ebabf11b-89b4-4077-9ccf-55a6f9bfe815"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7412),
                            Email = "chukwufumnanya.chizea@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwufumnanya Chizea",
                            Status = 0,
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("b2abd579-248d-4ee0-afb7-80758bd01cb8"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7415),
                            Email = "raphael.emenyonu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raphael Emenyonu",
                            Status = 0,
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3")
                        },
                        new
                        {
                            Id = new Guid("4f97d861-061f-4c71-8230-cdd21b710e1e"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7416),
                            Email = "hamed.omotayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hamed Omotayo",
                            Status = 0,
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3")
                        },
                        new
                        {
                            Id = new Guid("9bd1ffb4-a970-489c-ac91-e253cefb717f"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7418),
                            Email = "anuoluwapo.sebanjo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anuoluwapo Sebanjo",
                            Status = 0,
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("3df415a7-12a2-4979-a987-c59276059160"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7420),
                            Email = "philip.aikinomiora @arm.com.ng",
                            IsDeleted = false,
                            Name = "Philip Aikinomiora",
                            Status = 0,
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("451dc408-c50d-4df9-8f39-868ebdc08b16"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7423),
                            Email = "gbeminiyi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbeminiyi Onipede",
                            Status = 0,
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb")
                        },
                        new
                        {
                            Id = new Guid("d20bf2c5-0d24-494a-aa9e-8192cb627833"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7426),
                            Email = "olukayode.fajuyagbe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olukayode Fajuyagbe",
                            Status = 0,
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb")
                        },
                        new
                        {
                            Id = new Guid("6ffdf3e1-da61-44e0-ba10-46747aee98c0"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7431),
                            Email = "opeyemi.oshinyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Oshinyemi",
                            Status = 0,
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("6be22db5-afd8-4af2-89b5-3fe8237e75e2"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7433),
                            Email = "james.agu@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Agu",
                            Status = 0,
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("2e0a40ba-0fee-4739-b0ac-111047dd21ae"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7441),
                            Email = "olawale.bakir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olawale Bakir",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("5bd84376-b8ed-4fd7-823a-e137717cebdf"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7443),
                            Email = "barakat.olusanya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Barakat Olusanya",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("cf0ce301-026a-469f-b8aa-22c5b74c1181"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7445),
                            Email = "gbenga.sonubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbenga Sonubi",
                            Status = 0,
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("64546f43-7ef6-4231-a9ab-0533c8659f58"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7446),
                            Email = "kareem.bashir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kareem Bashir",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("56f6b17b-0b18-4f6f-bb7a-feead8bd19f2"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7448),
                            Email = "patrick.ayele@arm.com.ng",
                            IsDeleted = false,
                            Name = "Patrick Ayele",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("ddd008f2-9466-4d88-bb89-62bc7cca75c7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7450),
                            Email = "oluyemi.omodayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluyemi Omodayo",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("c045590d-7e65-429d-b489-0883053cf482"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7454),
                            Email = "oluwatosin.adeboyejo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Adeboyejo",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("95301165-3720-476b-9dc8-36dd2726b88f"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7455),
                            Email = "elizabeth.alloy@arm.com.ng",
                            IsDeleted = false,
                            Name = "Elizabeth Alloy",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("4b35d4b4-e779-4f19-a374-ab2a29b08678"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7457),
                            Email = "stephanie.gber@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephanie Gber",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("be2ed3bc-1829-4bba-8a6d-ed8a0069ad79"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7460),
                            Email = "temitope.akinola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Temitope Akinola",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("fdc03533-d224-49a4-ad44-515d5c02fc59"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7462),
                            Email = "valerie.okosun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Valerie Okosun",
                            Status = 0,
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("fcbf44d9-8cd0-45a3-b8fc-4ef705da8de5"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7464),
                            Email = "kingsley.ottah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kingsley Ottah",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("620d59cf-c44f-4c6b-8223-cb00af5b4454"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7466),
                            Email = "ramond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ramond Akorah",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("ed6c5349-131a-4ae4-b4ae-d84f19712dc6"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7468),
                            Email = "oluwatosin.afolayan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Afolayan",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604")
                        },
                        new
                        {
                            Id = new Guid("46e24dc0-5f64-44c8-a176-2794ffcd8a60"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7473),
                            Email = "evelyn.nwogu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Evelyn Nwogu",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("1d21586d-dc9a-482d-aaea-a5fa98ae6009"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7475),
                            Email = "babatunde.osho@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Osho",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31")
                        },
                        new
                        {
                            Id = new Guid("33dd4afb-e8e8-40fe-b808-573368ca847d"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7477),
                            Email = "augustine.chukwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Augustine Chukwu",
                            Status = 0,
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb")
                        },
                        new
                        {
                            Id = new Guid("0b610411-fce7-4e25-b120-51f3c94d425d"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7478),
                            Email = "kiadum.nwakoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kiadum Nwakoh",
                            Status = 0,
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("d93394e3-a53c-49ec-89e2-d9bc1427e4bf"),
                            Business = "ARM TRUSTEES",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7481),
                            Email = "emmanuella.anaza@arm.com.ng",
                            IsDeleted = false,
                            Name = "Emmanuella Anaza",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e")
                        },
                        new
                        {
                            Id = new Guid("e610f1be-9f13-471a-833c-9fd02f73b5e6"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7483),
                            Email = "sandra.onwordi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Sandra Onwordi",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76")
                        },
                        new
                        {
                            Id = new Guid("561f895c-f77b-4c60-9f18-825fa0ce6507"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7484),
                            Email = "oluwatomilola.oduntan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatomilola Oduntan",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("f924f7e2-f4e6-4e6b-953b-e4555e98fb74"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7486),
                            Email = "ogugua.emamoke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ogugua Emamoke",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("3df1f66a-3fac-4f41-a855-6861a51f0fe7"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7490),
                            Email = "abiola.itakpe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abiola Itakpe",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("3b969089-29d2-4704-9835-52d2733a737e"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7492),
                            Email = "chidinma.akosa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chidinma Akosa",
                            Status = 0,
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("abf85b63-c918-4fc0-9f1e-ae7f9e2fda78"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7494),
                            Email = "ifeoma.ofili@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeoma Ofili",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("6f145a57-3671-4821-9939-849ca6b5ed89"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7496),
                            Email = "ademola.adebisi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ademola Adebisi",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("334bfaca-3f9b-4002-9ca4-a50b6c8bc9ce"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7497),
                            Email = "victoria.itrechio@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victoria Itrechio",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287")
                        },
                        new
                        {
                            Id = new Guid("2b9cb9d2-b4fa-43ec-a8ba-272ac48b7730"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7499),
                            Email = "adebayo.fagbola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adebayo Fagbola",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("23bca8ad-cd4d-4b99-820e-6333db3f3ef1"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7501),
                            Email = "maryann.kakulu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Maryann Kakulu",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("a95d1a2e-ad00-449f-bf1e-6e9ad4ba6228"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7503),
                            Email = "babatunde.abimbola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Abimbola",
                            Status = 0,
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f233beb8-c83c-47dc-a792-0f27f54818e9"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7506),
                            Email = "kai.orga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kai Orga",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("8b416aed-da8d-4010-8721-5690b453ff0d"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7509),
                            Email = "moronke.bamgbala@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moronke Bamgbala",
                            Status = 0,
                            Unit = "ARM Trustees",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("adb84756-17ee-4f92-8352-dbf5bd844f68"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7511),
                            Email = "uche.azubuike@arm.com.ng",
                            IsDeleted = false,
                            Name = "Uche Azubuike",
                            Status = 0,
                            Unit = "RFL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3087e01f-1545-47e2-98e9-1a13d57c33de"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7512),
                            Email = "Wilfird.korsaga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Wilfird Korsaga",
                            Status = 0,
                            Unit = "AAFML",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f4fbadcc-2e0a-4349-a0af-640bae382970"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7514),
                            Email = "yusuf.agbolahan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Yusuf Agbolahan",
                            Status = 0,
                            Unit = "Investment Banking",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("9492295b-30e5-434d-a1fa-6f2df04acfaf"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7516),
                            Email = "rachel.moreoshodi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rachel Moreoshodi",
                            Status = 0,
                            Unit = "ARMHIIL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("81c2b1fb-6c04-4680-940a-a51d08cd4b02"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7518),
                            Email = "damilare.mesimo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Damilare Mmesimo",
                            Status = 0,
                            Unit = "DFS",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("17809afa-2a70-442e-a4cc-2d6f1523ea61"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7528),
                            Email = "funmilayo.adeyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Funmilayo Adeyemi",
                            Status = 0,
                            Unit = "DFS",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("663bb906-7b65-485a-a12b-2003c2c7ee33"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7532),
                            Email = "jobalo.oshikanlu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jobalo Oshikanlu",
                            Status = 0,
                            Unit = "ARMHIIL",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("21f5f467-a55f-49b7-9868-78a6f5dbf4ec"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7533),
                            Email = "toni.timi-oyefolu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Toni Timi-Oyefolu",
                            Status = 0,
                            Unit = "ARMIM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("ce1fdcb8-d343-4a75-8e81-6901efaa9610"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7535),
                            Email = "jumoke.ogundare@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jumoke Ogundare",
                            Status = 0,
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("a72f68d1-e4ae-47bf-a3c6-6ddad5299a73"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7537),
                            Email = "wale.odutola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Wale Odutola",
                            Status = 0,
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("98e6f94f-81ec-4dfe-ad3d-5f516cb1a3e3"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7538),
                            Email = "osahon.ogiemudia@arm.com.ng",
                            IsDeleted = false,
                            Name = "Osahon Ogiemudia",
                            Status = 0,
                            Unit = "ARM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("745d746c-5c0f-4b96-a08d-999cc684b9cc"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7540),
                            Email = "chijioke.iteghete@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chijioke Iteghete",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3dc0819d-4713-4d0a-9119-91945dd92ac9"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7542),
                            Email = "ayodele.oluleye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ayodele Oluleye",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("7c5ae39c-ebd1-4516-b637-c3d6788041a5"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7545),
                            Email = "adepeju.sangotade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adepeju Sangotade",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("9786c485-d353-4ece-9d2a-91ded583920b"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7548),
                            Email = "anuoluwapo.senbanjo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anuoluwapo Senbanjo",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("d0a9db21-0b32-44bc-a7c4-47a0c0caee24"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7551),
                            Email = "walter.agbongbohielu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Walter Agbongbohielu",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("38ebbe5e-e1ba-44ee-b36b-371bfaee8f94"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7552),
                            Email = "olufisayo.bassey@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olufisayo Bassey",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("19eb3213-f2a8-48d0-a864-919187d8a8d3"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7554),
                            Email = "opeyemi.oshiyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Oshiyemi",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("d2485d0d-937a-4388-a8c2-94002abeb5b3"),
                            Business = "ARM SharedService",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7556),
                            Email = "tobi.babalola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tobi Babalola",
                            Status = 0,
                            Unit = "ARM IM",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("3f65041e-306a-4ffd-8966-4454d5ccdec8"),
                            Business = "ARM Trustees",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7558),
                            Email = "oluwatosin.oluyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Oluyemi",
                            Status = 0,
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("dbd16df8-d7f7-4aef-b485-cd20cc7c79fa"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7560),
                            Email = "tosin.adesope@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tosin Adesope",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e0bbd4ec-d771-4161-bbce-0e85d470be9f"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7562),
                            Email = "tobby.tobby@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tobby Moses Tobby",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e3b5d405-6a0f-49e5-bec8-b26b5e4bb1c7"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7565),
                            Email = "olayinka.oyewole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olayinka Oyewole",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("44c04abe-8a8a-414d-a55d-acabc02a9457"),
                            Business = "Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7567),
                            Email = "ifeanyi.esogwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeanyi Esogwa",
                            Status = 0,
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("e8ccc91d-5caf-400a-ab00-674de17dd570"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7570),
                            Email = "victor.arowolo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victor Arowolo",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("de742884-41b6-4adc-a2c3-4817807f794e"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7572),
                            Email = "oluwaferanmi.adedokun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwaferanmi Adedokun",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("d7be36c3-7c9b-4378-bc5f-ab9c99fc95d2"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7574),
                            Email = "oyenike.oluwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oyenike Oluwa",
                            Status = 0,
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("39fb65d1-8704-48d5-ac50-36116c4ce731"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7576),
                            Email = "rosemary.francis@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rosemary Francis",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("25958783-0ea5-4821-9a3d-2d28838f5ba1"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7577),
                            Email = "busola.alakija@arm.com.ng",
                            IsDeleted = false,
                            Name = "Busola Alakija",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("ce1aeff6-306c-472d-a810-0e6ecd1f9e84"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7579),
                            Email = "augustina.osagie@arm.com.ng",
                            IsDeleted = false,
                            Name = "Augustina Osagie",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("f3af0417-198b-4106-89e1-cceff8fdcade"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7583),
                            Email = "emmanuel.peter@arm.com.ng",
                            IsDeleted = false,
                            Name = "Emmanuel Peter",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("188cb06e-204e-41c9-8a68-1cd86c095219"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7584),
                            Email = "toluwalase.ajediti@arm.com.ng",
                            IsDeleted = false,
                            Name = "Toluwalase Ajediti",
                            Status = 0,
                            Unit = "Operations Settlement",
                            UnitId = new Guid("edbd535a-f4b9-4867-99ba-4d49ee6f8293")
                        },
                        new
                        {
                            Id = new Guid("a3e23d56-006c-4919-a248-64242c8e6b64"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7587),
                            Email = "oluseyi.omoleye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluseyi Omoleye",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("8720d92f-141b-4fb2-bc08-888ba7fcc6c9"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7589),
                            Email = "thompson.shedara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Thompson Shedara",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("e6df6d98-040b-4c7c-a9c5-2a006bca455c"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7591),
                            Email = "oladupe.dare@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oladupe Dare",
                            Status = 0,
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("24a75d5d-51a2-48d5-8b18-fba81bab74dc"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7592),
                            Email = "martins.onemolease@arm.com.ng",
                            IsDeleted = false,
                            Name = "Martins Onemolease",
                            Status = 0,
                            Unit = "Fund Amin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("d77828cf-3347-4a2e-bc12-aab01009c185"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7594),
                            Email = "ifeoluwani.okunoye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeoluwani Okunoye",
                            Status = 0,
                            Unit = "Fund Amin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("1c1942e8-9759-4811-be17-6ca5e5b05693"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7596),
                            Email = "hassan.balogun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hassan Balogun",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("e8b35366-63e1-4d0a-a6cd-39c2557a61ee"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7599),
                            Email = "chioma.opara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chioma Opara",
                            Status = 0,
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("6e8810d3-66a0-491b-8145-89bf97050300"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7601),
                            Email = "ibrahim.owolabi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ibrahim Owolabi",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("d638462f-bde3-4555-889b-2af892201b07")
                        },
                        new
                        {
                            Id = new Guid("c0d3f905-8cb1-481d-b576-1e61c08f7452"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7603),
                            Email = "oluwakemi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwakemi Onipede",
                            Status = 0,
                            Unit = "Treasury",
                            UnitId = new Guid("d638462f-bde3-4555-889b-2af892201b07")
                        },
                        new
                        {
                            Id = new Guid("0ff5085f-ce7d-4e07-afea-f0ec7f2b61be"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7605),
                            Email = "covenant.ukachi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Covenant Ukachi",
                            Status = 0,
                            Unit = "Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("2b00c01d-2157-481d-aecc-1e123c8eb960"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7609),
                            Email = "bukunmi.chuka@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bukunmi Chuka",
                            Status = 0,
                            Unit = "Registrars",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("9df7db97-014c-4db8-8b16-b2e26e978545"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7619),
                            Email = "bridget.odubela@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bridget Odubela",
                            Status = 0,
                            Unit = "Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("db484e2f-0d56-4ce0-a5da-f712bdef0773"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7621),
                            Email = "amara.nwafor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Amara Nwafor",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("a3e29591-d1ce-497c-8da6-b38063ced415"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7623),
                            Email = "chisom.okeke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chisom Okeke",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2fe880b5-1626-4a84-9cfc-981b36b3fb6e"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7626),
                            Email = "ifeyinwa.amadi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeyinwa Amadi",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("66ef849b-5d1a-46db-a530-59a97df51772"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7628),
                            Email = "victoria.makama@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victoria Makama",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c9035cb2-dac1-44d8-b536-c2238fd447c2"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7630),
                            Email = "dolapo.fashina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Dolapo Fashina",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("56770408-8041-4a1e-8b63-9949d7ad86de"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7632),
                            Email = "oluwabunmi.ayeni@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwabunmi Ayeni",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("31753baa-eb28-4e17-86ba-99a1a330af03"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7633),
                            Email = "eno.udoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Eno Udoh",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("eb3ac546-9e9f-4129-ba13-9baeda221a59"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7635),
                            Email = "busola.akerele@arm.com.ng",
                            IsDeleted = false,
                            Name = "Busola Akerele",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("62ef9f5e-5f1d-4b37-9442-53c39f8a764c"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7637),
                            Email = "inemesit.anani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Inemesit Anani",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("2b0fa6de-6431-4ddf-9f88-11a758bf1599"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7639),
                            Email = "adedolapo.oyeleke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adedolapo Oyeleke",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("c578ade2-1a9a-4199-8396-67b0ee15bb41"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7643),
                            Email = "simisola.famous-cole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Simisola Famous-Cole",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("4e325a75-afee-4773-8ae1-785b57370a30"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7644),
                            Email = "rukayat.adepitan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rukayat Adepitan",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("060fb138-e360-40dd-a988-0b034bc26c87"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7646),
                            Email = "deborah.dubukumah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Deborah Dubukumah",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("ed812de0-27db-4d35-b430-427db9ebef89"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7648),
                            Email = "damilola.akinlade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Damilola Akinlade",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("10594be7-6730-47a7-901c-b2bf3be054f0"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7650),
                            Email = "yetunde.adio@arm.com.ng",
                            IsDeleted = false,
                            Name = "Yetunde Adio",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("0cd93ced-5176-4794-b449-968255099780"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7652),
                            Email = "shulammite.wokwereze@arm.com.ng",
                            IsDeleted = false,
                            Name = "Shulammite Wokwereze",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("41c78f64-01a8-4e81-a784-b72200d86553"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7653),
                            Email = "bukola.abdulakeem@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bukola Abdulakeem",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("e818656f-e11b-46d0-9a55-b58849231f91"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7655),
                            Email = "lebechi.ndukwe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lebechi Ndukwe",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("35928296-8d35-40d3-a6e6-aa69f6fc24d4"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7658),
                            Email = "esther.onumaegbu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Esther Onumaegbu",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("aafd5494-62a3-496a-9cc6-134f57c32f07"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7660),
                            Email = "godwin.ebie@arm.com.ng",
                            IsDeleted = false,
                            Name = "Godwin Ebie",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("efcfed43-efb2-4323-a48b-ff6a25fac74a"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7662),
                            Email = "faith.ojo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Ojo",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("4c2b3b5b-51e9-4c4c-867d-90e6fe36aa19"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7665),
                            Email = "veronica.oluigbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Veronica Oluigbo",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("6aa4fde9-92cc-4700-ac7c-052c1b581dbd"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7667),
                            Email = "anike.olalere@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anike Olalere",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("7570e50e-6a8a-4afb-927a-01633762ebc7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7669),
                            Email = "chukwuebuka.agbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwuebuka Agbo",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("ddeb68bd-5afc-41b8-9580-8d813caf8c44"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7670),
                            Email = "chinonso.iwuozor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chinonso Iwuozor",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("7a9cd440-1319-47d4-b0ac-e38090b4e476"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7672),
                            Email = "jane.david-abia@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jane David-Abia",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("66fcbe43-b136-45a6-861f-6752a8548cf7"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7675),
                            Email = "olufunke.sipe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olufunke Sipe",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("20cfb7ea-57a8-428e-aab4-256646473c08"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7677),
                            Email = "moyosore.ibitoye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moyosore Ibitoye",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("f0bc3503-d967-4dce-8fe6-4ea2f3b1209d"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7679),
                            Email = "victoria.chukwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Victoria Chukwu",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("978d4efa-4b7d-4b0f-a12a-983a55627b06"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7683),
                            Email = "evelyn.osindeinde@arm.com.ng",
                            IsDeleted = false,
                            Name = "Evelyn Osindeinde",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("57ec61ba-9513-4dca-a56f-c2d2bd7ebc60"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7684),
                            Email = "adaeze.ukah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adaeze Ukah",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("11a1ff27-dc81-41cc-9abc-6cbae14dac45"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7686),
                            Email = "taiwo.odumuyiwa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Taiwo Odumuyiwa",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("32520174-5fec-4502-92ce-16d63fa3648a"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7688),
                            Email = "adepeju-lola.sangotade@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adepeju-Lola Sangotade",
                            Status = 0,
                            Unit = "Customer Experience",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("25ec7cc3-845f-4d64-b4e3-68c23fc5052b"),
                            Business = "ARM Shared Services",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7689),
                            Email = "enoma.osazee@arm.com.ng",
                            IsDeleted = false,
                            Name = "Enoma Osazee",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("a0410c33-fada-4641-b79f-984b7b5f1cb8"),
                            Business = "ARM HoldCo",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7693),
                            Email = "amaka.nnotum@arm.com.ng",
                            IsDeleted = false,
                            Name = "Amaka Nnotum",
                            Status = 0,
                            Unit = "Financial Control",
                            UnitId = new Guid("fb274136-84fe-430d-bab9-6647909a1a48")
                        },
                        new
                        {
                            Id = new Guid("bae1e856-583a-4a0c-acd3-ad4e5b0f9a6a"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7695),
                            Email = "ayomide.ojeniyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ayomide Ojeniyi",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("db2395af-95c9-48b9-9c85-a113fe444977"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7696),
                            Email = "lawrence.olusina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lawrence Olusina",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("8ece87df-fe2c-4cb3-a252-f03f5c3e1ae0"),
                            Business = "ARM Securities",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7707),
                            Email = "ilerioluwa.akinosun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ilerioluwa Akinosun",
                            Status = 0,
                            Unit = "Securities Operations",
                            UnitId = new Guid("393f2a41-0ae5-487d-9b67-224cd145f5fb")
                        },
                        new
                        {
                            Id = new Guid("3fb3b918-77b4-4f74-aab3-4a381da84fa4"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7709),
                            Email = "olashile.abowaba@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olashile Abowaba",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("ea5e934e-8e33-4bfb-8031-14fccbc4e9e9"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7710),
                            Email = "ifeoluwa.obigbemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ifeoluwa Obigbemi",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("8fb78269-4c40-40a6-8ab4-5801a35e23ed"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7712),
                            Email = "gift.aizebeoje@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gift Aizebeoje",
                            Status = 0,
                            Unit = "Investment Management",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f")
                        },
                        new
                        {
                            Id = new Guid("b69d1526-5a20-4b64-9184-c76fd1dd7d82"),
                            Business = "ARM IM",
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 335, DateTimeKind.Utc).AddTicks(7714),
                            Email = "adeolu.folayira@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adeolu Folayira",
                            Status = 0,
                            Unit = "Operation Controls",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1542),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1552),
                            IsDeleted = false,
                            ModuleItemType = 1,
                            Name = "UnitHead"
                        },
                        new
                        {
                            Id = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1555),
                            IsDeleted = false,
                            ModuleItemType = 1,
                            Name = "RiskChampion"
                        },
                        new
                        {
                            Id = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1557),
                            IsDeleted = false,
                            ModuleItemType = 1,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1559),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "OtherComplianceUser"
                        },
                        new
                        {
                            Id = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1561),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "ComplianceOfficer"
                        },
                        new
                        {
                            Id = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1563),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "HROfficer"
                        },
                        new
                        {
                            Id = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1565),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "FINCON"
                        },
                        new
                        {
                            Id = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1570),
                            IsDeleted = false,
                            ModuleItemType = 2,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1572),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditOfficer"
                        },
                        new
                        {
                            Id = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1574),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditSupervisor"
                        },
                        new
                        {
                            Id = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1575),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlOfficer"
                        },
                        new
                        {
                            Id = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1577),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlSupervisor"
                        },
                        new
                        {
                            Id = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1579),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditManagerConcern"
                        },
                        new
                        {
                            Id = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1592),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditExecutiveManagerConcern"
                        },
                        new
                        {
                            Id = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1594),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlCallOverOfficer"
                        },
                        new
                        {
                            Id = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1598),
                            IsDeleted = false,
                            ModuleItemType = 7,
                            Name = "InternalControlCallOverSupervisor"
                        },
                        new
                        {
                            Id = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1600),
                            IsDeleted = false,
                            ModuleItemType = 10,
                            Name = "OperationControlOfficer"
                        },
                        new
                        {
                            Id = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1601),
                            IsDeleted = false,
                            ModuleItemType = 10,
                            Name = "OperationControlSupervisor"
                        },
                        new
                        {
                            Id = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1603),
                            IsDeleted = false,
                            ModuleItemType = 0,
                            Name = "InternalAuditee"
                        },
                        new
                        {
                            Id = new Guid("e4495bcf-454a-4f04-92e2-9cb02605db3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1605),
                            IsDeleted = false,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = new Guid("2fc82d56-b5ac-44a6-8f5e-3ea708d722e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(1607),
                            IsDeleted = false,
                            ModuleItemType = 13,
                            Name = "InfoSec Officer"
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRoleMap", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoleMap", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7414),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("744e925b-6aa7-45fa-824c-0b505a04e20a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7420),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b241d596-f089-434b-a94c-16114c0a4b4b"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7422),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7423),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7426),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5074d70a-7471-46a7-8064-605b9710ac74"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7428),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("068e132d-97ae-4ebe-88a1-2787c944be70"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7430),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("068e132d-97ae-4ebe-88a1-2787c944be70"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7431),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("aa8b94de-4efb-48ed-95f2-3efb1e980555"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7433),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("aa8b94de-4efb-48ed-95f2-3efb1e980555"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7435),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("53d973cc-d395-4789-8b8f-f394b2dd0b2f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7436),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d3fcfd86-22fb-4255-8255-a45704e47378"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7438),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4ed59e86-27c2-4270-bc10-060676cec0a0"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7439),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("18d63e3e-1940-4f80-8c69-29bcc9392b80"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7441),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c6492702-c4f5-4099-b360-be3d0f37180b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7443),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82d94cb6-6e22-476b-b8a2-a6c996636c73"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7444),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82d94cb6-6e22-476b-b8a2-a6c996636c73"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7446),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("59a83afc-7720-4f57-bbea-80d8358f9b0d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7447),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8e4a4569-dbae-4cec-a86b-d43bf743955e"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7449),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3fc9a856-df88-4bc8-88b1-cf4b65f3928d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7450),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7b13db39-3b27-4ddf-822e-c96a0514434e"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7488),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("fd313524-5a4f-4667-b2f9-219b64558435"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7491),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a17fba1c-a1c8-47c1-b0fd-577aa740757a"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7492),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8c5d8d3e-587b-4ad7-8333-5ff668390cf3"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7493),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8c5d8d3e-587b-4ad7-8333-5ff668390cf3"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7495),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("86de4f7d-fe4c-4a54-a0bc-a894883424c5"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7496),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7498),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7499),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7500),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9a4483a7-b80b-48c7-9de1-156d2e9972ff"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7502),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("98fc4263-5311-4a1b-8889-aaf3541781e3"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7503),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("98fc4263-5311-4a1b-8889-aaf3541781e3"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7512),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("219903d2-54d5-42e2-9916-1bd7420e1cc1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7513),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eac59325-3b9c-4701-ac63-b4dc55d65872"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7514),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eac59325-3b9c-4701-ac63-b4dc55d65872"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7517),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7518),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7520),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5438428c-8c2b-48bd-b1d1-2382c488ca9a"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7521),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ebcf8632-14fe-4c88-9684-93f01986a209"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7523),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ebcf8632-14fe-4c88-9684-93f01986a209"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7524),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0668bb60-8c7a-4392-9a92-d1ec04924a48"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7526),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("39eab3e1-ec3c-4e46-b220-72f24a1a9b6a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7527),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("f0a8aaf4-89ae-4a13-bb10-e6f5104646bd"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7528),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("68b49eca-2285-46d4-8449-4cf78a8a730d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7530),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("be485a1a-1e6b-452d-a797-dd2dfe5a6902"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7531),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62db3f26-b6bd-4a06-9a89-dc93c249c73d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7533),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62db3f26-b6bd-4a06-9a89-dc93c249c73d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7534),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9435698f-d64b-413a-b334-f476bd3ed548"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7535),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9435698f-d64b-413a-b334-f476bd3ed548"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7537),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9e27a329-52f7-4004-8a1a-090ddcac29d0"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7538),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9e27a329-52f7-4004-8a1a-090ddcac29d0"),
                            RoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7539),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("04a192db-f039-49c7-bbc9-f7d7b4085ecd"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7541),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("04a192db-f039-49c7-bbc9-f7d7b4085ecd"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7543),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3d1dd8c9-46df-47d6-bfe5-e6707937301c"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7545),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("663cc78c-a538-4ca0-84a3-7d182e8c2292"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7546),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("663cc78c-a538-4ca0-84a3-7d182e8c2292"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7547),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d8ed93b7-a3da-4745-ba17-486a11fe10df"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7549),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("703c42fa-406c-453c-b3cf-a2fb3ad354a1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7550),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("703c42fa-406c-453c-b3cf-a2fb3ad354a1"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7552),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b64e0d40-6f17-4e47-a0be-6674b9b2ac18"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7553),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5e902748-0188-405d-8a9b-cb3e22098d1b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7554),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5e902748-0188-405d-8a9b-cb3e22098d1b"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7556),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00fecf89-bb70-4e62-a76b-cd1794d6a21f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7557),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7558),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7560),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7562),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a038cd54-b443-4779-8506-bcc586c64a7d"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7564),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7565),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7566),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7567),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7a9b6dd1-4514-4d19-b7ec-ca8a6d777718"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7569),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6209fd2d-95d0-4927-9ada-460ecd424e54"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7570),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3720bdd2-8bf3-4f07-80e1-89e087e7347d"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7571),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("73355329-e14d-4c0f-9836-ebf962a9298f"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7573),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("984b9023-c774-4e90-a16e-3af0aad05a3c"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7574),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("984b9023-c774-4e90-a16e-3af0aad05a3c"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7576),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("57cda194-4fae-482d-a09f-43c397d373d1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7577),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("16473b29-42ad-4763-b1ef-11f0e02b3bca"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7578),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0c0245d8-95bd-4c59-8518-2e6ec44685fc"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7580),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7e265aed-6c39-4043-92b0-28f64a9c099d"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7581),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7582),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7583),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("dc3c4bd1-3d0a-4275-86a0-54d0a058b6df"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7585),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("f19317cd-ef8b-425d-abcd-ee6f3f9bc2a8"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7586),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7594),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7596),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8024d065-906b-4708-821c-1a2eb3aacae1"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7597),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7598),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7600),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7601),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3a44ee98-b7e7-4148-9ed7-07ed7d56d938"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7602),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7604),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7605),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7606),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("83647770-2777-4104-b6aa-ea4b4e558ed9"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7609),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7610),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7611),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b57ffb70-5d09-4349-bbad-54eecfa9fbae"),
                            RoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7613),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("53cc8c36-4366-45cc-b329-8d42b48ff515"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7614),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("53cc8c36-4366-45cc-b329-8d42b48ff515"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7615),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7617),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0b0fdcae-d8af-4505-88b4-88e42f5e43ab"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7618),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7619),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7621),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("15e02e42-4ad1-4f38-b074-10c9cdac4767"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7622),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0c093023-fb37-4f46-ada0-849afaae7f99"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7623),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00670a0d-dbb5-4b9d-b7c1-ec77ced4f63b"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7625),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d700564f-1a2f-4396-8f6f-e769eb6e7af8"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7626),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("404f4298-bfca-4709-b9d4-652509d7f604"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7627),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d70df12b-96fd-46b2-ba74-7898b8cf828f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7629),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1f3a321c-a151-400b-a619-dcebde93c73f"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7630),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a8292054-64b5-48ee-8269-81c84c18f424"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7631),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b15d21ae-9e86-4380-924d-d06662ce1e0e"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7633),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("414dc8d2-233b-443f-b7da-181aa1cadb3f"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7634),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("414dc8d2-233b-443f-b7da-181aa1cadb3f"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7635),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7637),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7638),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7639),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ae3659c-c92e-4d73-aaa9-a804f8d4618a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7641),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a33da7fb-c2d8-43ea-a5af-48df82c586a7"),
                            RoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7642),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d74a1b81-b74f-4cda-a602-c6d46c4d61e9"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7644),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ea045141-2b65-497c-8b97-6ca1ecd8885e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7645),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ac871e3a-fb51-427a-83a3-54d3ccd726c0"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7646),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ac871e3a-fb51-427a-83a3-54d3ccd726c0"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7647),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eeb105a0-8b43-4528-95ef-90c4efce1ee7"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7649),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("517580ef-82c5-43eb-aeb7-2a82eb2e8546"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7650),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("57c976a7-a9e0-4f31-bec1-99d5d290996e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7652),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("57c976a7-a9e0-4f31-bec1-99d5d290996e"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7653),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ce6623a1-3821-460e-88c2-e5082838840e"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7654),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ce6623a1-3821-460e-88c2-e5082838840e"),
                            RoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7656),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("453e760b-1dee-4706-b2ea-f06826f46bac"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7657),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6de1a7fc-b57e-4283-8e46-edea9631ce32"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7658),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6de1a7fc-b57e-4283-8e46-edea9631ce32"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7660),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3dd0786d-f3c4-4662-83ac-2420fcbfa5f3"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7661),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1bac4e41-033e-49ce-8e4e-9e7632d4189b"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7662),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("89ec5cac-5c61-4ac5-b19a-966195dba85c"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7664),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("95212a97-96c7-434c-a795-bb692ee58021"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7665),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c0c800df-ac58-4fd9-88b1-63a3dbf4451c"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7666),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c0c800df-ac58-4fd9-88b1-63a3dbf4451c"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7675),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c0c800df-ac58-4fd9-88b1-63a3dbf4451c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7676),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("63684ef0-a6ed-4d5a-9b47-568358a84670"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7677),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("63684ef0-a6ed-4d5a-9b47-568358a84670"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7679),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("63684ef0-a6ed-4d5a-9b47-568358a84670"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7680),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cab92ccc-ca73-4e7a-acab-cd7fd0a7db3a"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7681),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cab92ccc-ca73-4e7a-acab-cd7fd0a7db3a"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7683),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0a2aaf20-ad6f-499a-821b-88e8c4e80850"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7684),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0a2aaf20-ad6f-499a-821b-88e8c4e80850"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7685),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0a2aaf20-ad6f-499a-821b-88e8c4e80850"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7687),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4736e129-0473-4b12-8305-62011ee8ba52"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7688),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("fd37f00f-06f2-400b-a883-05ded0522c6b"),
                            RoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7689),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bbb05cc6-492d-405d-883d-e2779bf0ab1e"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7691),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62310863-e5a5-4f6c-ba97-2141acaf1e62"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7692),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ddc6903f-0a16-448a-ac10-279a5f169b13"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7693),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ddc6903f-0a16-448a-ac10-279a5f169b13"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7695),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ddc6903f-0a16-448a-ac10-279a5f169b13"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7696),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("75e2dc83-eb5e-4c43-9eb4-1b9c2ba3e588"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7697),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("75e2dc83-eb5e-4c43-9eb4-1b9c2ba3e588"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7699),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e21c004e-9246-47b6-8547-6b462643ae59"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7700),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e21c004e-9246-47b6-8547-6b462643ae59"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7701),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d587a654-52e1-472e-895e-15690c026b3d"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7703),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0daa9fb1-8858-4fa3-94c1-d26a3375679b"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7704),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0daa9fb1-8858-4fa3-94c1-d26a3375679b"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7705),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0daa9fb1-8858-4fa3-94c1-d26a3375679b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7707),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c15dc281-64a8-4dfe-999b-a59084327aa9"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7708),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c15dc281-64a8-4dfe-999b-a59084327aa9"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7709),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bd8f67ea-a3d0-48d3-99bd-e75f5008f974"),
                            RoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7711),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bd8f67ea-a3d0-48d3-99bd-e75f5008f974"),
                            RoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7712),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("bd8f67ea-a3d0-48d3-99bd-e75f5008f974"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7714),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ed7fa8c7-7bbb-4a7c-94b2-c25aaace3fb1"),
                            RoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7715),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3756232d-c562-47a7-bc5f-81d82a85964f"),
                            RoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7716),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c4a91ea0-ae99-4dc5-913f-043f14836a30"),
                            RoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7718),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7ee32b4c-07a4-4459-9ac0-577df0458611"),
                            RoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7719),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7ee32b4c-07a4-4459-9ac0-577df0458611"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7720),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e2809297-1779-4454-85cc-c7c105a6a709"),
                            RoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7722),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7cf72076-44ad-428d-8073-d6cfb172806d"),
                            RoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7723),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7cf72076-44ad-428d-8073-d6cfb172806d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7724),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("24158b3a-a2ab-468c-b4ee-a0361d0bd679"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7726),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("24158b3a-a2ab-468c-b4ee-a0361d0bd679"),
                            RoleId = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7728),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0f293e73-db67-4151-95a3-c37f9a578640"),
                            RoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7729),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0326c783-2eb2-4723-8e92-f3d755df6c82"),
                            RoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7731),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("fe525ead-e18a-4e3f-852d-ca1854139dc0"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7732),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1f409f31-01da-45c4-b08c-4d75362fe0f0"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7734),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1f409f31-01da-45c4-b08c-4d75362fe0f0"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7735),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0ba0ccae-e71c-433e-8de4-30285f854bc8"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7736),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("0ba0ccae-e71c-433e-8de4-30285f854bc8"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7738),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("52f6bb20-fbfe-45cd-a767-bca8c272ff4a"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7739),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("52f6bb20-fbfe-45cd-a767-bca8c272ff4a"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7740),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82eaa8ad-7483-40ca-b584-1f0546720a79"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7742),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("82eaa8ad-7483-40ca-b584-1f0546720a79"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7743),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("328cae33-88ef-4b8c-b928-a761024d2e54"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7744),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("328cae33-88ef-4b8c-b928-a761024d2e54"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7745),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("66cf02d7-748e-4b59-9f3d-24ae3134a25b"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7747),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00830805-4cff-4380-94c2-2498b00dba7d"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7756),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("00830805-4cff-4380-94c2-2498b00dba7d"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7758),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a3b8254e-d8c1-49ae-99b3-30fe33bd5806"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7759),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a3b8254e-d8c1-49ae-99b3-30fe33bd5806"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7760),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a48b5840-94d2-445e-8a5f-1eeb5beb45f8"),
                            RoleId = new Guid("48ee8ecc-dc9f-4c6a-89ea-80e638a18980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7762),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a48b5840-94d2-445e-8a5f-1eeb5beb45f8"),
                            RoleId = new Guid("2af614d4-7a34-4393-b626-7e2580bf51d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7763),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e3c6a104-e732-4865-afe3-58f3e973af90"),
                            RoleId = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7764),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b9e76d0e-46fd-48b8-8ecb-c4e1527f67eb"),
                            RoleId = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7766),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("09bafc7d-145b-4508-bdbe-4ab9550edaad"),
                            RoleId = new Guid("e20991e8-6233-4635-8829-4ee12bf7004d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7767),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8fda951d-36fa-4263-8c66-1fba037d3765"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7768),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("69f91acc-e65c-4b4c-a43f-ef2216d220cf"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7770),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1b0346b0-5186-4af1-8f80-8605f368296d"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7771),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("27ac990e-7445-4be9-9206-ee36533fdabb"),
                            RoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7773),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5245052a-9d22-4cbc-8552-32e40c0d1c57"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7774),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5a1a94b8-f9ae-4485-af3f-cbdb507c9f5e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7775),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d06f7e39-f81b-4062-b841-b5de4b7d98cf"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7777),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ef7040f3-cff3-40ab-871f-d7da70c41581"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7778),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1788341d-ab99-4ac4-9c6a-aff9ebba37e6"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7779),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e705cfd6-c806-4a73-ad96-b831e203b7f9"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7780),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5bff9668-4850-4351-b37b-e6ca0048fa4c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7782),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6a30b54c-54bc-41d2-ae42-4cb418bfb3a5"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7783),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1ab43f1a-d3c4-4cbd-a1eb-c38a75a812f3"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7784),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7f7d39f1-e068-4c3a-b6fc-02f0bc76e351"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7789),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("db50d28f-5f88-47fc-a160-da10003c1fc1"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7791),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("f0790dc3-bb5b-4086-9ea1-7967b337fc5f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7792),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cf9c48f2-20da-4989-b929-b2a250154126"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7793),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b292c77c-ec56-4e3e-bd59-4fa6de45e998"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7795),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("d69810b1-d0c7-4c25-9e82-29677990fe6e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7796),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("59a2eae1-ded9-4f5d-b6e9-c8572e77f764"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7797),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("1c2a2eb3-c584-4185-acbb-5bbb06c10cf5"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7799),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("8f71c6e3-b327-4046-ad43-783141f8b01b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7800),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e4e321fa-c082-4b73-90d1-2ee8d1df57b1"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7801),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("de135872-a718-452f-9975-c152411c5f3d"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7803),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ee8dd936-36b8-4492-aa97-9eb78a88d051"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7804),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("672316f2-ddd1-48f6-bc95-710d27836a3d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7805),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cd86c3bb-c3ce-4e32-a18d-864c7be053b7"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7806),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("75d0157a-c79c-4402-9212-fd9feaf6bb3b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7808),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b4cf0cf4-69d6-4610-b8ba-b3a39193b8e6"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7809),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("006f672b-6535-473b-b93c-11b3d9844a83"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7810),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("27b6e67c-92a4-4166-ab21-fdf40f8c9a08"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7812),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("cebab131-6b5b-4648-88a8-4f6524cb71e3"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7813),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b70e5969-5638-4492-95ef-405713ee599c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7814),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("87497a34-3059-4b2e-9afd-65ad4ccf9cdc"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7816),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("af39e2a5-a893-4e07-90af-5d11d9fc0bf4"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7817),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ed8fd2d3-536b-477a-b27d-aa52171de2f7"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7819),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("86ef8958-9c81-4ce8-9fc6-2df53ab20599"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7820),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("17ec9f3f-2de4-4730-929e-0d3aaba63256"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7821),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("62c5e7f4-dc13-4b17-9a74-ab301cee30ee"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7823),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ca9690f7-2871-4bb1-9072-cfa10bb14a0b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7824),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("6d4b51f7-929b-4894-a1f1-82b84d971880"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7825),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4b9592a9-c7b0-4231-9170-8f68d4b672b1"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7827),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3983d79c-3c87-4fd9-b05b-c7c2db777f18"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7828),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("adcc99a7-dc88-46bb-8398-62e9ec322d5f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7829),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ec75a36c-663d-4405-926a-8addacc6dc0f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7831),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("7eb3989a-9707-4a1e-9182-60ff86b6d44d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7837),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("46759c7a-860b-48c1-972f-aeddc13fe604"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7838),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4c116457-5a05-4e31-bec4-4e3e74d1584f"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7840),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a4d57608-7b78-4e09-ba49-79444f23da6c"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7841),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("ee3838b7-b264-41ce-96df-5fb233b7fc83"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7842),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5df5bba8-fa4a-40a8-b88f-ce342d1fcb4e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7844),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("9627518a-07ee-4da8-bf71-9503615994f6"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7845),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("846503d5-9b92-4148-83a3-682b99fa1ed7"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7846),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("44aaf905-d100-4b66-ae1a-42ff22b5985c"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7848),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3ce35779-1df8-48fa-818d-605c69fda68e"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7849),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("eefdd975-bbe9-44dd-a654-2992ddd303dd"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7851),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("5d9e18df-0a3c-495b-8de4-65bf8be65a87"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7852),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b49fc47a-6b5d-4ec5-bb83-468b3fc04602"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7853),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e143ed84-322a-4f9c-993a-12598abe894d"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7855),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("54fba425-4415-4149-bdbf-e031c0dd5a8b"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7856),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("b61100af-0f06-4ac6-85ef-80da244e4fa7"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7858),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("50e7d53a-168a-474e-a981-0c21cf63ad3d"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7859),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("02734701-28d5-4166-ac88-065780672f10"),
                            RoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7860),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("c052329e-ff47-42e0-919d-6e6a701a96b3"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7862),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("72b05306-1d04-4310-8344-16e8ca7c3372"),
                            RoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7863),
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4b510482-51c3-43ed-98d9-bc58cdd53cd3"),
                            RoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 336, DateTimeKind.Utc).AddTicks(7864),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRolePermission", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("UserRoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserRolePermission", (string)null);

                    b.HasData(
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2371),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2374),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            PermissionId = new Guid("9f87d685-92c9-42b4-a58e-20fe028dd3c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2376),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("b5333a97-47ae-4464-82e7-eb552230fd2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2385),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("b5333a97-47ae-4464-82e7-eb552230fd2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2387),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("f8684d71-0b28-4f93-bcd7-d1f7c107708f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2390),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("e1f00b8c-9704-4406-9d61-468146fe06dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2391),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("f8684d71-0b28-4f93-bcd7-d1f7c107708f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2393),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("e1f00b8c-9704-4406-9d61-468146fe06dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2394),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("836b6390-aa37-4c3c-bdc1-42f9977a16b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2397),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("559c4f59-68ac-4f83-a708-6632b8a080f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2399),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("2e44d6a0-5c92-40be-8d5e-28a586ddeb26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2401),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("ed334b91-9e47-46f0-92b7-84c9a1e34b9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2402),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("6ae48c8e-e15c-40aa-a660-3a7556d53f3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2403),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("4467735e-4043-40a7-b571-654751d1b8d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2405),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("f2641950-69d9-499c-8e7b-4b7b2a8a6efb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2406),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("c42a1ac1-014c-4bfa-a258-7ddb9b257b58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2408),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("0f4e423f-2a2d-48bb-b8b7-3c1a4d444fa2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2410),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("7f5e914d-5c48-4659-a46e-9461f64f4c9b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2411),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("42a05247-8579-4c6c-96bf-d5cd3a73a89f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2412),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("42a05247-8579-4c6c-96bf-d5cd3a73a89f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2414),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            PermissionId = new Guid("a17e0b76-5d29-4c79-a8df-bae18da34cb1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2415),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            PermissionId = new Guid("a17e0b76-5d29-4c79-a8df-bae18da34cb1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2416),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("078c30e2-702e-4abe-af61-fc86357535d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2418),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("ac289fc1-4149-42e3-9870-3ec94de81bfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2419),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("e36a0878-2621-4749-849c-0cc979ec0b32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2420),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("4ca6b903-3f45-446d-b1ae-6d99b696c845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2422),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("34e8d57a-e3f3-471e-be17-b8b70988282b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2423),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            PermissionId = new Guid("3fa5b006-8d8f-4fec-aff9-249615a896a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2424),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("0291715f-c93a-425f-91e3-3f4d64cbe720"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2426),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("c135ca16-e877-4e16-aed0-9e330456f33f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2427),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("cf2a9cde-97eb-41e0-b17f-d7ac38ff601b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2428),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("316f9d9a-3f5c-40e9-b5a5-25833587bda3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2430),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            PermissionId = new Guid("0d542309-09b4-4176-ad55-e7d42e028d14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2431),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("05ca74cc-cd70-4965-9ea5-2530e2171774"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2432),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            PermissionId = new Guid("a9e34482-dd6b-4274-ae9f-0214d6490b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2434),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("438d86f6-f78c-44a8-b0fe-deb55693e80a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2435),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("f5b16af9-1c7d-4c03-8c4c-5669819f74cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2436),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2d15ab00-f3ba-4b7f-ab78-6b0dbcfae65c"),
                            PermissionId = new Guid("9425e21e-0372-466c-bff1-70b685a75ee8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2437),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("6a41b1bf-2ead-46f8-9fa6-a2b8c2529f81"),
                            PermissionId = new Guid("3889f9f8-25a5-4904-9d9c-56bf9d506a1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2439),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("f0157a4d-de6c-47c7-a4b3-243ebf8076ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2440),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("b2809835-af4f-4c1c-8d5f-8bddca554f86"),
                            PermissionId = new Guid("5c9bd282-d701-4591-877b-9e36a61cff69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2442),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("3cb6772e-8370-41e2-a4ff-9adfa83e038c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2443),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("d1ada3b1-3e74-4d43-8b65-0da982aff7e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2444),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("b67903bd-6435-412d-947c-46a0d2db14ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2446),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("57afe880-14b9-4fcb-b627-afe5f63b3029"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2447),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("91dc6d3f-dd35-451e-b04a-fa455816c09c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2448),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("ffe65ef0-6506-47e6-b8ca-a9290f13c7c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2450),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("69a2e6e4-0837-47fa-8da9-958f632aff10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2451),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("8aea0f36-ab57-4f65-b9f2-5945eb3e9436"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2452),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("fc74be96-ce8e-469e-8a1a-83a98aaddd08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2454),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("5ed6a1a1-55a1-4f6f-a9bb-f61f3ca03df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2455),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("218b0863-5156-4488-ab9a-b71c8ae9d2b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2457),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("8f71ed24-a521-48f2-b10e-d382b52a023e"),
                            PermissionId = new Guid("b2a7429b-74b8-419f-b3ec-a5cab34abfc9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2458),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            PermissionId = new Guid("55b7f825-39a1-4437-a42e-2a333ae6658d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2459),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("5af3368c-48c9-4aea-ba95-0f361ac82cc6"),
                            PermissionId = new Guid("26aecbd2-eb44-42b2-b83d-4b6778a9a6b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2461),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            PermissionId = new Guid("c54a7d72-d291-49a0-a6ae-ba94f662ee8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2520),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("33e96674-c7b5-4c3c-98d8-613015a019f4"),
                            PermissionId = new Guid("d4c9affa-992a-48b5-8e17-97e44aa3e232"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2522),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("86f372a0-24ee-4dd8-a5d1-1d45badccd8a"),
                            PermissionId = new Guid("d20f5128-ef29-4b73-bac2-28f115906938"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2523),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("1c10cda1-cd2a-42a4-b295-53404768dc35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2525),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("1c10cda1-cd2a-42a4-b295-53404768dc35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2526),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("d35ab363-6ba9-4812-b0e1-c4685725d688"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2528),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("9f95e4c7-2d36-495c-b30f-44b3c136fa40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2529),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("9f95e4c7-2d36-495c-b30f-44b3c136fa40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2530),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("98bd95cd-1c4a-4427-bd76-957624b0ca75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2532),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("98bd95cd-1c4a-4427-bd76-957624b0ca75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2533),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("2056820f-51e8-43c2-80d4-512346cc813c"),
                            PermissionId = new Guid("4ba7de16-cc9b-4f2e-9ca6-4133cd025310"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2534),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("e4758094-c3a9-4a80-94dd-d317d31cc4f1"),
                            PermissionId = new Guid("4ba7de16-cc9b-4f2e-9ca6-4133cd025310"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2536),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("df5b084e-654d-4e82-84b2-45132d8379b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2537),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("183358b1-ecb3-4280-bcd1-50d6cbb31e1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2539),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("a78e57af-08fc-4eae-9dcc-0bbc0b973ad7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2540),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("f6f0bfe0-8f31-484c-9d92-45803b717168"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2541),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("1700f355-1943-49cb-bb43-09d91ae939d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2542),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("de6f0445-9768-4cdf-b4a6-48c5afbf666e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2544),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("87fb2cbd-b5da-48bd-8966-a6bc109e7e9d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2545),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("a777e12a-f2d2-40e4-a6a3-1673fea21290"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2547),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("d9e92885-ddd4-4a6e-b779-3216e1bb2b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2548),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("dc200a69-bb01-4d07-94a8-79844de5170d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2549),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("67805da5-8bd6-441d-9b6b-9c370673c435"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2551),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("d9d45947-d2e5-480e-95cf-379efd384766"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2552),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("9da49c2d-b60c-43dc-9850-04e8e8fcd945"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2554),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("26a31c04-6b1d-43d5-a0d0-ea73756fa20f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2555),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("706a5ced-92e3-46f1-8379-bf78129c1f68"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2556),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("1178eaab-7eac-4a3c-9a98-3d8c4b88a5f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2559),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("c56be2cd-feb9-4186-aadb-5c631b12ca35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2560),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("d8417df3-e5b7-4ac5-98ef-8f7e0431d9bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2562),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("e40ce5f0-19e6-49b9-a0cb-795c3ec26b67"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2563),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("f6f8e3f6-d1cc-48d9-987a-bbc42eebf7f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2564),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("ccf43e87-d594-459f-a4e9-f87f9f189fa8"),
                            PermissionId = new Guid("eae56b73-b087-4fd8-81dd-f35f54485718"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2566),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("39bca629-6bef-4af2-94e2-920d9ff9bc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2567),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("a5df59df-b003-42fc-802d-830bd167cb7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2569),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("689e70cd-0249-49ef-8518-04a0e344484d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2570),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("5d027a16-4660-445c-850e-63c81242f5ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2571),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("5f870a71-0928-4655-a95d-ff677c4a31ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2573),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("607259d7-edb7-4a94-a794-72f90ce076a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2574),
                            IsDeleted = false
                        },
                        new
                        {
                            UserRoleId = new Guid("45089255-78cf-43e9-b63d-94eebc2030b2"),
                            PermissionId = new Guid("51e387a4-bca5-48bd-b919-5c5e466f49b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2025, 5, 5, 1, 35, 17, 337, DateTimeKind.Utc).AddTicks(2575),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", "ComplianceDepartment")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", "ComplianceRegulator")
                        .WithMany("ComplianceRules")
                        .HasForeignKey("ComplianceRegulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceRegulator");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", "ComplianceRule")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("ComplianceRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceRule");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.CASPLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("CASP")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.CASPLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DAMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("DAM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.DAMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.DLPLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("DLP")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.DLPLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.EDRLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("EDR")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.EDRLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.FIMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("FIM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.FIMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.PAMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("PAM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.PAMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.SIEMLog", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.IncidentManagement.LogManagement", "LogManagement")
                        .WithOne("SIEM")
                        .HasForeignKey("Arm.GrcApi.Modules.IncidentManagement.SIEMLog", "LogManagementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlModel", "InternalControl")
                        .WithMany("Actions")
                        .HasForeignKey("InternalControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlActionOwner", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlAction", "InternalControlAction")
                        .WithMany("InternalControlActionOwners")
                        .HasForeignKey("InternalControlActionlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalControlAction");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOverReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", "CallOver")
                        .WithMany("Reports")
                        .HasForeignKey("CallOverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallOver");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHILL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTO", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCompliance", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDataAnalytic", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseFinancialControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AssessmentOfDigitalInitiativeList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany()
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditAnnouncementMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("AuditFinding")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditPlanningMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("RFL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMCapitalRating", "ARMCapitalAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRating", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMResearch", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseDigitalFinancialServiceRating", "DigitalFinancialServiceAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("Citation")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithMany()
                        .HasForeignKey("AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMCapitalRating", "ComplianceARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessDigitalFinancialServiceRating", "ComplianceDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMIM", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingResearch", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceComplianceRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceDataAnalyticRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceFinancialControlRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTO", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany()
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", "ConsolidatedAuditFinding")
                        .WithMany("ActionDetail")
                        .HasForeignKey("ConsolidatedAuditFindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("EngagementLetterAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterAuditExecutionDuration")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterReportDistributionList")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialARMIMRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessARMCapitalRating", "FinancialARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessDigitalFinancialServiceRating", "FinancialDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingResearch", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithMany("InformationRequirementAuditExecution")
                        .HasForeignKey("CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("InternalAuditRating")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithMany()
                        .HasForeignKey("CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithMany()
                        .HasForeignKey("ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernARMAgribusiness")
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMCapitalRating", "ManagementConcernARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitDFSRating", "ManagementConcernDFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMCapitalRating", "ManagementConcernARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernARMSecurity")
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceDFSRating", "ManagementConcernDFSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ManagementResponse")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ObservationList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapitalRating", "OperationARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMIMRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialServiceRating", "OperationDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingResearch", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceComplianceRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceDataAnalyticRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceFinancialControlRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTO", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDetailfindings", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ReportDetailfindings")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("DistributionList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", null)
                        .WithOne("ARMCapital")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapitalRating", "StrategyARMCapitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", null)
                        .WithOne("DigitalFinancialService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialServiceRating", "StrategyDigitalFinancialServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMIM", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingResearch", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceCompliance", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("DataAnalytic")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceDataAnalytic", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceFinancialControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CTO")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTO", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CorporateStrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", "ARMCapitalBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditARMCapital", "ARMCapitalBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMCapitalBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", "DigitalFinancialServiceBusinessRiskRating")
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditDigitalFinancialService", "DigitalFinancialServiceBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DigitalFinancialServiceBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", "ProductRiskAssessment")
                        .WithMany("ProductAssessRisks")
                        .HasForeignKey("ProductRiskAssementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BIAUnitProcessDetails")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", "BIAUnitProcessDetails")
                        .WithMany("BusinessUnitsToRunProcess")
                        .HasForeignKey("BIAUnitProcessDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", "BusinessImpactAnalysis")
                        .WithMany("BusinessImpactAnalysisUnits")
                        .HasForeignKey("BusinessImpactAnalysisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysis");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BusinessImpactAnalysisUnitLogs")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", "BusinessEntity")
                        .WithMany("Departments")
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessEntity");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", "RiskEventType")
                        .WithMany("RiskEventTypeCategories")
                        .HasForeignKey("RiskEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventType");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", "RiskEventTypeCategory")
                        .WithMany("RiskEventTypeSubCategories")
                        .HasForeignKey("RiskEventTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventTypeCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", "RiskControlSelfAssessmentUnit")
                        .WithOne("DocumentRSCAProcess")
                        .HasForeignKey("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "RiskControlSelfAssessmentUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessmentUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRSCAProcess")
                        .WithMany("DocumentRSCAProcessLogs")
                        .HasForeignKey("DocumentRSCAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRSCAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRCSAProcess")
                        .WithMany("ProcessInherentRiskControls")
                        .HasForeignKey("DocumentRCSAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRCSAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany("RSCAProcess")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", "RiskControlSelfAssessment")
                        .WithMany("RiskControlSelfAssessmentUnits")
                        .HasForeignKey("RiskControlSelfAssessmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessment");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", "RiskDriver")
                        .WithMany("RiskDriverCategories")
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriver");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", "RiskDriverCategory")
                        .WithMany("RiskDriverSubCategories")
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriverCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", null)
                        .WithMany()
                        .HasForeignKey("EffectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", null)
                        .WithMany()
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", null)
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", null)
                        .WithMany()
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", null)
                        .WithMany()
                        .HasForeignKey("EventSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", null)
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AuditPlanningMemoAuditExecutionAuditPlanningMemoPlanningTimeline", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoPlanningTimeline", null)
                        .WithMany()
                        .HasForeignKey("AuditPlanningMemoAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", null)
                        .WithMany()
                        .HasForeignKey("AuditPlanningMemoAuditExecutionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuditProgramAuditExecutionCommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", null)
                        .WithMany()
                        .HasForeignKey("AuditProgramAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", null)
                        .WithMany()
                        .HasForeignKey("CommenceEngagementAuditexecutionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.HasOne("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "WorkPaper")
                        .WithOne("AuditFindings")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", "WorkerPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "AuditProgramAuditExecution")
                        .WithOne("workPaper")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "AuditProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRoleMap", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.UserRole", "Role")
                        .WithMany("UserRoleMap")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrcApi.Modules.Shared.User", "User")
                        .WithMany("UserRoleMap")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRolePermission", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.Permission", "Permission")
                        .WithMany("UserRolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrcApi.Modules.Shared.UserRole", "UserRole")
                        .WithMany("UserRolePermissions")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");

                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Navigation("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.IncidentManagement.LogManagement", b =>
                {
                    b.Navigation("CASP")
                        .IsRequired();

                    b.Navigation("DAM")
                        .IsRequired();

                    b.Navigation("DLP")
                        .IsRequired();

                    b.Navigation("EDR")
                        .IsRequired();

                    b.Navigation("FIM")
                        .IsRequired();

                    b.Navigation("PAM")
                        .IsRequired();

                    b.Navigation("SIEM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlAction", b =>
                {
                    b.Navigation("InternalControlActionOwners");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlCallOver", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.InternalControl.InternalControlModel", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFL")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalAuditUniverse", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMCapitalBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMCapital")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Navigation("workPaper")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Navigation("AuditAnnouncementMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditPlanningMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution")
                        .IsRequired();

                    b.Navigation("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceAuditUniverse", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.DigitalFinancialServiceBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHILL")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Navigation("EngagementLetterAuditExecutionDuration");

                    b.Navigation("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Navigation("AuditFinding");

                    b.Navigation("Citation");

                    b.Navigation("DistributionList");

                    b.Navigation("InternalAuditRating");

                    b.Navigation("ManagementResponse");

                    b.Navigation("ObservationList");

                    b.Navigation("ReportDetailfindings");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMCapital", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernDFS", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyARMCapital", b =>
                {
                    b.Navigation("ARMCapital")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyDigitalFinancialService", b =>
                {
                    b.Navigation("DigitalFinancialService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTO")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("CorporateStrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DataAnalytic")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Navigation("ProductAssessRisks");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Navigation("BusinessUnitsToRunProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Navigation("BusinessImpactAnalysisUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("BusinessImpactAnalysisUnitLogs");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Navigation("RiskEventTypeCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Navigation("RiskEventTypeSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Navigation("DocumentRSCAProcessLogs");

                    b.Navigation("ProcessInherentRiskControls");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Navigation("RiskControlSelfAssessmentUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Navigation("DocumentRSCAProcess")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Navigation("RiskDriverCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Navigation("RiskDriverSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Navigation("RSCAProcess");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Navigation("AuditFindings")
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.Permission", b =>
                {
                    b.Navigation("UserRolePermissions");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Navigation("UserRoleMap");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Navigation("UserRoleMap");

                    b.Navigation("UserRolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
