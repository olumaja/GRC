// <auto-generated />
using System;
using Arm.GrcApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrcApi.Migrations
{
    [DbContext(typeof(GrcToolDbContext))]
    [Migration("20240815073752_UpdateComplianceBusinessTable")]
    partial class UpdateComplianceBusinessTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CTO")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfManagerOrMD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RCNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceBusines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8fda6fb-0e8a-4621-bae1-16f26d40f345"),
                            BusinessName = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(8937),
                            DateUpdated = new DateTime(2024, 8, 15, 8, 37, 50, 513, DateTimeKind.Local).AddTicks(8926),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c767a782-a495-4b96-988c-22e8e16c33d9"),
                            BusinessName = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(8941),
                            DateUpdated = new DateTime(2024, 8, 15, 8, 37, 50, 513, DateTimeKind.Local).AddTicks(8941),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("70c25108-c4c7-4221-b444-2a98bddbba7b"),
                            BusinessName = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(8948),
                            DateUpdated = new DateTime(2024, 8, 15, 8, 37, 50, 513, DateTimeKind.Local).AddTicks(8947),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("803dcb0e-6a10-4e3b-9c73-35f1c7c4a265"),
                            BusinessName = "ARM Capital Partner",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(8949),
                            DateUpdated = new DateTime(2024, 8, 15, 8, 37, 50, 513, DateTimeKind.Local).AddTicks(8949),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceBusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessId");

                    b.HasIndex("ComplianceDepartmentId");

                    b.ToTable("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceCalendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttachmentCount")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirmToSubmit")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameOfReport");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ResponseStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ComplianceCalendar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceDepartment");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9443293c-a893-41de-8317-264444c8bbc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2003),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("4c9b0a56-52dc-4b33-af2b-5c999308a0ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2011),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("4f52f84c-20cf-459e-8c9c-48d7072f30c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2013),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("da0bcbe0-9dad-4f4a-822f-3c0f9005cae8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2014),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("8f9dfe1b-0ca1-4722-b2a1-09609ee3bb0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2015),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2f10b305-b9da-4801-9188-133c042b276a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2016),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("d969cbf1-7f32-40bf-9e68-74f71a2d23d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2017),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("ebde322f-5df1-4af1-aeb8-870df4c58b3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2018),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("9686c1aa-690e-4efb-a6f0-e48c838ec238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2020),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("766dfecd-8db0-4cc4-981e-43ae1f9f9265"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2021),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("c08f04f7-5e1c-42f9-8247-cb902cd62f49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2021),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("469e97db-72af-49ed-84dd-c11d425263cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2022),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("a8e77619-5129-4a88-b234-386f64840215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2023),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("30c73a8b-1b74-4732-802d-e97b7ea2a404"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2024),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("037b9ff2-504e-404f-b329-8dffcc2c5e94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2025),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("113da9be-b174-48a0-98cf-7573f8f344f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2025),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("dc1ab4ae-db59-420b-aade-49c9c0225b21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2026),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("86b47b0a-c3e1-45b6-97ef-5dead8955745"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2027),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("4108d577-9409-498b-9822-bbdd9f9b1e6c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2028),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("581ed77e-2e05-42fd-8b92-d001a96909a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2029),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("732911ea-38e8-4104-a9c9-8101c7ec2748"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2030),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("7cc52d32-76d1-4537-b418-7418d09f28f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2031),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("0b760d1e-9eb3-4758-93d8-beade293f5d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2032),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("48cc7b70-9efa-4125-b448-6a957d2041f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2032),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("51c62493-240a-4122-8ac8-ee1fe16e3ee2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2033),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8acebf76-21e6-4e74-9f8c-b0d1db9f3753"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2034),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("aa8efd00-7cc1-4fa6-b9e0-b24e06e8a0a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2035),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("f2b1a942-b22c-4c66-9929-513ba1867053"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2035),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("fad581c6-2f33-46de-b1c4-25d3873f23f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2036),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("a50412b5-65ff-4002-8da4-a45c5bf4bf2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2037),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("3d7857e6-8875-477f-a962-247326e2c92d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2038),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("dfc65214-67c8-47eb-aeeb-3146ae489e60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2038),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("eefa7c57-98b1-44f8-aba7-549399321114"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2039),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4fae7da7-6ddd-48d0-9400-1126815fb4d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2040),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("1e534470-a920-457d-b5d3-ca8882de81ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2041),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1c2370db-3244-4bf2-9b56-57d98bb3b5e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2041),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("1b5cbd9d-3a11-4ae2-8350-f208d37bcbb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2042),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("413c704d-af7b-4b17-bd98-9eea7b16ff03"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2043),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("9e94023e-ce76-490c-8f1f-e46f4117b1a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2044),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d071e04-9a34-4c6b-aaa0-ef9f11470990"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2044),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("8ef60bcb-a795-4141-bab6-38e5863e14a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2045),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("c3de97f2-ef7c-40ad-94ef-f88738c71c07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2046),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("1ac36092-da7b-4b32-bdac-a97fc23164cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2047),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4e7f8112-d6bf-4619-b41e-236fba1eb541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2048),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("93427ce2-6640-44ed-a078-320ac73e4dc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2048),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("9ae1d479-e587-4d46-95ba-b8e72851fc75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2049),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("199f9de0-d08b-47eb-a96a-5b2526eb31ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2050),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("022aa7d5-7c0a-4fb3-9c8d-ff2278b289fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2050),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("3ddc0333-f27a-4ced-9599-6ef1ee92c3c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2051),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("affceba9-38dc-4e5f-afb0-8b2d9edf5efa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2052),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("97c9b380-ad8f-4f41-944b-dc37b82fe85f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2053),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("5e885e75-f8b3-4b3a-9017-b2e7a1122d83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2053),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2fd39529-b005-4293-8b8f-12ed3ff87807"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2054),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("7165d5c6-dc08-4471-99b9-4c60dd76ec8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2055),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("a66bea4e-f461-476f-9af7-61a91c69af99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2056),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("55772580-4c93-435d-8c31-685b80b9bd3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2057),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("dd059d83-0706-425f-aa33-c8d32294f7b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2057),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("58662c2e-5a9c-43f8-8d42-fc2e93a50eb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2058),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("040acaf6-ccdc-4302-bae9-95bbe7175fa7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2059),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("f155216a-9fc1-4d29-ac25-060c116d0e1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2060),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("9d10fb74-ed81-42ec-a109-072ca0ddfde3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2060),
                            IsDeleted = false,
                            Name = "Securities Operations "
                        },
                        new
                        {
                            Id = new Guid("f0748176-df02-49af-8565-520f9c59c9a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2065),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("5203f4dc-ab02-4dc8-85b1-b293ff9ffcbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2067),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("82355662-28d3-45c9-bbf4-51be40c368d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2068),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("80921fb2-5762-4149-98a1-7a990efb2428"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2069),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("da9c707e-ff33-455b-973e-ff2928d41aca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2069),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("ca9277c7-59d1-4f5f-adbf-bd036440e602"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2070),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("e98b0111-935c-41ba-bfed-00ae9ce3814f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2071),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("193306a0-16ce-4c4b-99a1-8765a8032cac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2072),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("f8360ffe-e1be-4d14-99a8-db3a2e840f41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2072),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("9cb7a2c2-4d91-47c1-9c6f-17540afa0c44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 514, DateTimeKind.Utc).AddTicks(2073),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegulatorTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulator");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b7b8e7-ebfb-4e30-a35c-ef0cc4878188"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(291),
                            IsDeleted = false,
                            RegulatorTitle = "LABOUR ACT"
                        },
                        new
                        {
                            Id = new Guid("3454dc14-648d-4c68-8279-0b82585618ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(294),
                            IsDeleted = false,
                            RegulatorTitle = "PENSION REFORM ACT 2004"
                        },
                        new
                        {
                            Id = new Guid("885c060b-eea9-4d86-b163-f28c60e66736"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(296),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES AND ALLIED MATTERS ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("a28cac7e-cbe2-4950-83ad-cbadc060c86c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(297),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHOLDING TAX) REGULATIONS 1977"
                        },
                        new
                        {
                            Id = new Guid("c83f0df5-a41b-4296-a185-14b423473122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(298),
                            IsDeleted = false,
                            RegulatorTitle = "COMPANIES INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("92508225-4b55-4fd1-b32c-e069d107a554"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(299),
                            IsDeleted = false,
                            RegulatorTitle = "EMPLOYEES COMPENSATION ACT"
                        },
                        new
                        {
                            Id = new Guid("1ad9ae19-60ce-4712-84dc-fe55e1b88c3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(306),
                            IsDeleted = false,
                            RegulatorTitle = "FINANCIAL REPORTINNG COUNCIL OF NIGERIA ACT 2011"
                        },
                        new
                        {
                            Id = new Guid("f3eab0ba-f3fd-4e89-8716-ab23699e1159"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(307),
                            IsDeleted = false,
                            RegulatorTitle = "INVESTMENT & SECURITIES ACT 2007"
                        },
                        new
                        {
                            Id = new Guid("9171c80a-d862-4254-b6e7-a488124a2979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(308),
                            IsDeleted = false,
                            RegulatorTitle = "NATIONAL YOUTH SERVICE CORPS ACT"
                        },
                        new
                        {
                            Id = new Guid("1b244041-2bfb-4158-8251-6599f66d3302"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(309),
                            IsDeleted = false,
                            RegulatorTitle = "PAY AS YOU EARN (PAYE)"
                        },
                        new
                        {
                            Id = new Guid("c5dae39f-b49d-4a24-86f4-e83544fc5e47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(310),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX (RATE etc OF TAX DEDUCTED AT SOURCE (WITHHOLDING TAX REGULATION) 1997"
                        },
                        new
                        {
                            Id = new Guid("57c7047e-c1c5-4323-9b26-72d8560499f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(311),
                            IsDeleted = false,
                            RegulatorTitle = "PERSONAL INCOME TAX ACT LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("2163d6c4-f924-4698-839f-654ec59e7284"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(312),
                            IsDeleted = false,
                            RegulatorTitle = "VALUE ADDED TAX LFN 2004"
                        },
                        new
                        {
                            Id = new Guid("bf3b070f-2883-40ea-b573-cecabbeb77f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(313),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON MINIMUM REQUIREMENTS FOR OPENING BRANCHES"
                        },
                        new
                        {
                            Id = new Guid("43cf07e6-8956-4b21-9b13-4d931e6a77b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(315),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON PAYMENT OF ACCRUED PRE-PENSION REFORM BENEFITS MAY 2011"
                        },
                        new
                        {
                            Id = new Guid("59138bb0-e094-48eb-b5ec-4cd2aa3f9db3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(316),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON REQUIREMENTS FOR PFAs WITH FUNDS UNDER MANAGEMENT OF N100 BILLION & ABOVE AND NEW REQUIREMENTS FOR APPOINTMENTS TO BOARD AND TOP MANAGEMENT POSITIONS OF ALL PFAs"
                        },
                        new
                        {
                            Id = new Guid("10de3a4e-49f8-4e67-a513-6219d087e747"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(317),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON SERVICE DELIVERY BY PENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("189a4456-930e-4a59-b721-b698d448775c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(321),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON STANDARDIZATION OF ANNUAL TOTAL EMOLUMENTS FOR THE COMPUTATION OF RETIREMENT BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("191ca6ae-a827-4b40-8798-af53ff64e14f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(323),
                            IsDeleted = false,
                            RegulatorTitle = "CIRCULAR ON THE IMPORTANCE OF TRAINING FOR STAFF OF PENSION FUND OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("17488d81-13f9-4cf1-bfb9-931191142061"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(324),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF CORPORATE GOVERNANCE"
                        },
                        new
                        {
                            Id = new Guid("bf3c448d-5602-4aa9-b94e-3e36cdcb337b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(325),
                            IsDeleted = false,
                            RegulatorTitle = "CODE OF ETHICS & BUSINESS PRACTICES"
                        },
                        new
                        {
                            Id = new Guid("12418cf1-0592-49ac-96b2-eb27bf63ca96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(326),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINE FOR APPOINTMENT TO BOARD AND TOP MANAGEMENT POSITIONS IN PFAs AND PFCs"
                        },
                        new
                        {
                            Id = new Guid("3e58ddd8-da9b-47b5-800c-f97a606c438f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(328),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR CROSS BOARDER ARRANGEMENTS UNDER PENSION REFORM ACT"
                        },
                        new
                        {
                            Id = new Guid("9b6f45a5-744b-43eb-aaf5-5dcc65974fa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(329),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR LIFE INSURANCE POLICY FOR EMPLOYEES"
                        },
                        new
                        {
                            Id = new Guid("f3e71ebf-7fcf-4af3-90ed-332de74e9601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(330),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR RISK MANAGEMENT FRAMEWORK FOR LICENSED OPERATORS"
                        },
                        new
                        {
                            Id = new Guid("596f7f2e-0e82-46ff-b11e-7b8a27e03983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(331),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE ADMINISTRATION OF STATE FUNDS DEDUCTED AT SOURCE UNDER THE CONTRIBUTORY PENSION SCHEME"
                        },
                        new
                        {
                            Id = new Guid("ed229bfb-b639-401f-95f8-a267adceefff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(333),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND ADMINISTRATORS AND CUSTODIANS FOR EXISTING PENSION SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("2a93b173-23a6-4530-b447-98b1ce499bf7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(334),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE APPOINTMENT OF PENSION FUND CUSTODIANS FOR STATE GOVERNMENT AND RETIREE FUNDS"
                        },
                        new
                        {
                            Id = new Guid("91525b64-1cb5-42e9-82eb-034ed057d7e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(335),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION FUND CUSTODIANS"
                        },
                        new
                        {
                            Id = new Guid("30c07d3f-8f36-41de-87e9-bc1071d434d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(337),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PENSION TRANSITIONAL ARRANGEMENT DEPARTMENTS"
                        },
                        new
                        {
                            Id = new Guid("9deda427-c40d-4e08-9cba-227444dedbde"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(339),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE OPERATIONS OF PFAS"
                        },
                        new
                        {
                            Id = new Guid("a55cdcc2-aef2-40bb-97ed-97ed0cd31909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(340),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE PUBLICATION OF RATES OF RETURN ON RSA FUNDS BYPENSION FUND ADMINISTRATORS"
                        },
                        new
                        {
                            Id = new Guid("27688539-e496-4a50-89a8-8b842aeacfd9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(341),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR THE TRANSFER OF NSITF CONTRIBUTIONS INTO EMPLOYEES RETIREMENT SAVINGS ACCOUNT"
                        },
                        new
                        {
                            Id = new Guid("6abca7e0-03cf-40f8-831e-1f3503322e42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(342),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES FOR TRANSITIONAL CONTRIBUTIONS FUND"
                        },
                        new
                        {
                            Id = new Guid("21c301ca-73a5-4def-800b-27987416b42c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(344),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON DIRECT REAL ESTATE INVESTMENTS BY CLOSED PENSION FUND ADMINISTRATORS AND APPROVED EXISTING SCHEMES"
                        },
                        new
                        {
                            Id = new Guid("0902e170-5fc5-49ca-9e31-9da612ed2547"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(345),
                            IsDeleted = false,
                            RegulatorTitle = "GUIDELINES ON FUND ACCOUNTING"
                        },
                        new
                        {
                            Id = new Guid("63d58047-074e-439a-b244-b50a2d216c88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(346),
                            IsDeleted = false,
                            RegulatorTitle = "INCLUSION OF GROUP LIFE INSURANCE POLICY FOR EMPLOYEES: FURTHER STEPS TO IMPROVE COMPLIANCE"
                        },
                        new
                        {
                            Id = new Guid("3d03d9e4-4026-41f4-98e0-ee15d5d37907"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(347),
                            IsDeleted = false,
                            RegulatorTitle = "MINIMUM INFORMATION TO BE POSTED ON A PFAs WEBSITE"
                        },
                        new
                        {
                            Id = new Guid("5c923578-67d4-4e86-ae34-a28036056a7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(349),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATION ON INVESTMENT OF PENSION FUND ASSETS"
                        },
                        new
                        {
                            Id = new Guid("66ad68b7-2f5e-4be4-9f7c-e30695022ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(350),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR AUDITING PENSION FUNDS"
                        },
                        new
                        {
                            Id = new Guid("e7563613-5933-4c0a-bded-728e3e2b9835"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(352),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS FOR THE ADMINISTRATION OF RETIREMENT AND TERMINAL BENEFITS"
                        },
                        new
                        {
                            Id = new Guid("53e6317c-f579-4ca4-a6dd-77dce9473d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(353),
                            IsDeleted = false,
                            RegulatorTitle = "REGULATIONS ON COMPLIANCE OFFICERS"
                        },
                        new
                        {
                            Id = new Guid("594b2f82-13d1-4a70-b45a-47b85daffb8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(354),
                            IsDeleted = false,
                            RegulatorTitle = "SECURITIES AND EXCHANGE COMMISSION RULES AND REGULATIONS 2013"
                        },
                        new
                        {
                            Id = new Guid("d72c7077-df45-4f41-95b2-b1f48a25de30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 515, DateTimeKind.Utc).AddTicks(355),
                            IsDeleted = false,
                            RegulatorTitle = "WHISTLE BLOWING GUIDELINES FOR PENSIONS"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulatoryPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessEntity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComplianceLevel")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MeansOfPaymentAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentAttachmentCount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDetail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProcessOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Regulator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceRegulatoryPayment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRegulatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deadline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Heading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesOrFillingOrReturn")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Penalty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Responsibilities")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceRegulatorId");

                    b.ToTable("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplianceRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("ComplianceRuleId");

                    b.ToTable("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FarmingOperation")
                        .HasColumnType("int");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFL")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHILL")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentPortfolio")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHILLEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinacialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasuryInvestorNote")
                        .HasColumnType("int");

                    b.Property<int>("TreasurySales")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMHoldingCompanyEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<int>("ARMRegisterar")
                        .HasColumnType("int");

                    b.Property<int>("BDOrIMRetail")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("Fundaccount")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSetlement")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperations")
                        .HasColumnType("int");

                    b.Property<int>("TreasuryInvestment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMIMEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityAnnualAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMSecurities")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialAdvisory")
                        .HasColumnType("int");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("SecurityOperation")
                        .HasColumnType("int");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseARMShared", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseARMShared");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCTU");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseCustomerExperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDigitalFinanceService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseDigitalFinanceService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedAuditUniverseId")
                        .IsUnique();

                    b.ToTable("ARMSharedAuditUniverseTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMSharedService")
                        .HasColumnType("int");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceServiceOrARMONE")
                        .HasColumnType("int");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InfoSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeAuditUniverse");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTrustee")
                        .HasColumnType("int");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EMCConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EMCConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeEMCRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnualAuditUniverseStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditScoped")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsAuditAnnouncementMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Salutation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkApproach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditAnnouncementMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditFinding")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlDesignOrEffectively")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOrRecurring")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("AuditFindingAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditPlanningMemoCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImplementationPlan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriorAuditObservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskIdentified")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScopeAndControlTesting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditPlanningMemoAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AuditProgramCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControlObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FindingStatus")
                        .HasColumnType("int");

                    b.Property<string>("InformationRequired")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkPaperInitiated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReviewProcedure")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkpaperStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgriFinancialControlAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgriFinancialControlAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgriFinancialControlRFL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgriFinancialControlRFL");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMAgribusinessRFL");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHillCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHillFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillInvestmentPortfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHillInvestmentPortfolio");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldCoTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMHoldingCompany");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMIMUnit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMTreasuryInvestment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMIMTreasuryInvestment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityFinacialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityFinacialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityFinancialAdvisory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityFinancialAdvisory");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecuritySecurityOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecuritySecurityOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityAnnualAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMSecurityStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAMFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAMFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAMTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTAMTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteeFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BusinessManagerConcern")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DirectorConcern")
                        .HasColumnType("int");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OldRiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommentation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskScore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeAuditUniverseId")
                        .IsUnique();

                    b.ToTable("AuditUniverseARMTrusteePrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEMCRated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagementRated")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OverAllComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("CitationAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnualAuditUniverseRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EngagementPlan")
                        .HasColumnType("int");

                    b.Property<int>("Findingstatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WorkPaper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnualAuditUniverseRiskRatingId");

                    b.ToTable("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingFinancialControlAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingFinancialControlRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceAgribusinessId")
                        .IsUnique();

                    b.ToTable("ComplianceAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRatingTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("ComplianceBusinessTAMRatingTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceHillRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingTreasuryInvestment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceIMRatingTreasuryInvestment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceInvestmentPortfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("ComplianceInvestmentPortfolio");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingFinancialAdvisory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingFinancialAdvisory");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingSecurityOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingSecurityOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSecurityId")
                        .IsUnique();

                    b.ToTable("ComplianceSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCTU");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingDigitalFinanceService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingDigitalFinanceService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceSharedServiceId")
                        .IsUnique();

                    b.ToTable("ComplianceSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("ComplianceTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftOrFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftOrFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftOrFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessRiskRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftOrFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AMLCFT")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandIimplementationOfPoliciesandAdherenceToProcesses")
                        .HasColumnType("int");

                    b.Property<int>("ChangingRegulations")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplianceBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorporateGovernance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureRisk")
                        .HasColumnType("int");

                    b.Property<int>("GDPROrNDPR")
                        .HasColumnType("int");

                    b.Property<int>("InaccurateComputationofRegulatoryRemittancesDelayedFilings")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KYCChecks")
                        .HasColumnType("int");

                    b.Property<int>("LitigationRisk")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NonComplianceWithContracts")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftOrFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplianceBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("CompliancesBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFindingRaised")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DetailedFindings")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Evidence")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImpactRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Level2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ManagmentResponseAsAtTimeOfEngagement")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OPRStatus")
                        .HasColumnType("int");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportingQuater")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RevisedDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusLevel")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkStream")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ConsolidatedAuditFindingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityToAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ConsolidatedAuditFindingId");

                    b.ToTable("ConsolidatedAuditFindingActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmcRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("EMCConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditScope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AuditType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BriefBackgroundObjective")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommunicationProtocol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KeyRisk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mandate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibilityOfInternalAudit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleExecutive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DurationAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DurationTiming")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterAuditExecutionDuration");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EngagementLetterAuditExecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDistributionListBusinessUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportDistributionListName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportDistributionListTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EngagementLetterAuditExecutionId");

                    b.ToTable("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingFinancialControlAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingFinancialControlRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialAgribusinessReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgribusinessReportingId")
                        .IsUnique();

                    b.ToTable("FinacialAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingInvestmentPortfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialHillReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialHillReportingId")
                        .IsUnique();

                    b.ToTable("FinacialHillRatingInvestmentPortfolio");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingTreasuryInvestment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinacialIMRatingTreasuryInvestment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialReportingBusinessratingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialReportingBusinessratingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("FinacialRatingBusinessratingTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingFinancialAdvisory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingFinancialAdvisory");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingSecurityOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingSecurityOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSecurityReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSecurityReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCTU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingCTU");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingDigitalFinanceService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingDigitalFinanceService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialSharedServiceReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialSharedServiceReportingId")
                        .IsUnique();

                    b.ToTable("FinacialSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTAMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialTAMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTAMRatingTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("FinacialTAMRatingTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdherencetoFinancialStandards")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionandImplementationofPoliciesAdherence")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErrororControlRisk")
                        .HasColumnType("int");

                    b.Property<Guid>("FinancialTrusteeReportingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IncomeAssuranceRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatutoryDeductionsandTaxes")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTrusteeReportingId")
                        .IsUnique();

                    b.ToTable("FinacialTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialAgribusinessReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("FinancialHillReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("FinancialIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("FinancialReportingBusinessratingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("FinancialSecurityReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("FinancialSharedServiceReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("FinancialTrusteeReporting");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommenceEngagementAuditexecutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateProvided")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("EngagementLetterCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("InformationRequest")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("InformationRequirementCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonForRejection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponsibleOfficer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommenceEngagementAuditexecutionId")
                        .IsUnique();

                    b.ToTable("InformationRequirementAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("PreviousRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("InternalAuditRatingReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssessmentOfDigitalInitiative")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionOfIssue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutiveSummary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GoodPractiseInclude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueRating")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OtherImprovementArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OverAllManagementComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PotentialMaterialisedImpact")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Scope")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ScopeLimitation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SignedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMIM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernRiskRatingId")
                        .IsUnique();

                    b.ToTable("ManagementConcernARMTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FarmingOperation")
                        .HasColumnType("int");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFL")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentPortfolio")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMIM")
                        .HasColumnType("int");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDOrIMRetail")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Financialcontrol")
                        .HasColumnType("int");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.Property<int>("TreasuryInvestment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMSecurity")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialAdvirory")
                        .HasColumnType("int");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("SecurityOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTrustee")
                        .HasColumnType("int");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernBusinessUnitARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessRateRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementConcernRequesterName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceServiceDFS")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMAgribusinessId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceServiceDFS")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMHillId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceServiceDFS")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMIMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMIMId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceServiceDFS")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMSecurityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMSecurityId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<int>("CorporateStrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerExperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceServiceDFS")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid>("ManagementConcernARMTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmin")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagementConcernARMTrusteeId")
                        .IsUnique();

                    b.ToTable("ManagementConcernSharedServiceARTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionPointToResolve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ManagementResponseAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMHoldingCompanyRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMHoldingCompanyRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityAnnualAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.MonthlyARMTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeAuditUniverseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("April")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("August")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Business")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("December")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("February")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("January")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("July")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("June")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("March")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("May")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("November")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("October")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("September")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InternalAuditReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagementResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InternalAuditReportId");

                    b.ToTable("ObservationListAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingFinancialControlAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingFinancialControlRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationAgribusinessId")
                        .IsUnique();

                    b.ToTable("OperationAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessArmHolco");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("OperationBusinessRatingHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRatingTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTAMRatingTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("OperationBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingInvestmentPortfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationBusinessRatingHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationBusinessRatingHillId")
                        .IsUnique();

                    b.ToTable("OperationHillRatingInvestmentPortfolio");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingTreasuryInvestment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMRatingTreasuryInvestment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationIMBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationIMBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationIMUnitRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingFinancialAdvisory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingFinancialAdvisory");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingSecurityOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingSecurityOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationSecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("OperationSecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("OperationSharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCTU");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingDigitalFinanceService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingDigitalFinanceService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("AssentMaintenance")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ChangeNoticeManagement")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisclosureCorruptionOfSensitiveData")
                        .HasColumnType("int");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("EventManagement")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObsoleteTechnology")
                        .HasColumnType("int");

                    b.Property<Guid>("OperationSharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("QualityManagament")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.Property<int>("VendorManagement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationSharedServiceId")
                        .IsUnique();

                    b.ToTable("OperationSharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("OperationTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdoptionandImplementationofPolicies")
                        .HasColumnType("int");

                    b.Property<int>("BudgetOverruns")
                        .HasColumnType("int");

                    b.Property<int>("ConfidentialityIntegrityandAvailabilityofData")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ErroneousDataEntry")
                        .HasColumnType("int");

                    b.Property<int>("ErrorDetectionRisk")
                        .HasColumnType("int");

                    b.Property<int>("FOREXRisk")
                        .HasColumnType("int");

                    b.Property<int>("ITInfrastructureDowntime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MalwareorVirusorWebsiteAttacks")
                        .HasColumnType("int");

                    b.Property<int>("Miscommunication")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OverorUnderpaymentofClient")
                        .HasColumnType("int");

                    b.Property<int>("PoorCustomerService")
                        .HasColumnType("int");

                    b.Property<int>("ProductMisselling")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("RecruitmentRisk")
                        .HasColumnType("int");

                    b.Property<int>("RelevanceandRecencyofModelToolsandTechniques")
                        .HasColumnType("int");

                    b.Property<int>("StrategyMonitoringRisk")
                        .HasColumnType("int");

                    b.Property<int>("TAT")
                        .HasColumnType("int");

                    b.Property<int>("TheftLeakageorMisuseofIntellectualProperty")
                        .HasColumnType("int");

                    b.Property<int>("TheftorFraudRisk")
                        .HasColumnType("int");

                    b.Property<int>("ThirdpartyRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnauthorizedAccess")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationTrusteeId")
                        .IsUnique();

                    b.ToTable("OperationTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessRiskRatingId");

                    b.ToTable("RatedBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingFinancialControlAAFML");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingFinancialControlRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyAgribusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyAgribusinessId")
                        .IsUnique();

                    b.ToTable("StrategyAgribusinessRatingRFl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessARMTAM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessArmHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHill");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessRatingTrustee");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRatingTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessARMTAMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessARMTAMId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTAMRatingTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasuryOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTreasuryOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHoldCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHoldCoId")
                        .IsUnique();

                    b.ToTable("StrategyBusinessTreasurySale");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingInvestmentPortfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingARMHillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingARMHillId")
                        .IsUnique();

                    b.ToTable("StrategyHillRatingInvestmentPortfolio");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingARMRegistrar");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingBDPWMIAMIMRetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAccount");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingFundAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingOperationSettlement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingRetailOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingTreasuryInvestment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyImBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyImBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategyIMRatingTreasuryInvestment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("StrategyImBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingFinancialAdvisory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingFinancialAdvisory");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingResearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingResearch");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingSecurityOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingSecurityOperation");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySecurityBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySecurityBusinessRatingId")
                        .IsUnique();

                    b.ToTable("StrategySecurityRatingStockBroking");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("StrategySharedService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingAcademy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCTU");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCorporatestrategy");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingCustomerexperience");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingDigitalFinanceService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingDigitalFinanceService");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("Emergingrisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthAndSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingHCM");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingIT");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInformationSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingInternalControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingLegal");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingMCC");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingProcurementAndAdmin");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingRiskManagement");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategySharedServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategySharedServiceId")
                        .IsUnique();

                    b.ToTable("StrategySharedServiceRatingTreasury");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingCommercialTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCompliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingCompliance");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingFinancialControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingFinancialControl");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AllianceandPartnershipRisks")
                        .HasColumnType("int");

                    b.Property<int>("BCPandDRP")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditRisk")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyDevaluation")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DropinFundandFundManagerRatings")
                        .HasColumnType("int");

                    b.Property<int>("EmergingRisks")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRisk")
                        .HasColumnType("int");

                    b.Property<int>("ErosionofStatutoryCapital")
                        .HasColumnType("int");

                    b.Property<int>("ExitRisk")
                        .HasColumnType("int");

                    b.Property<int>("FailureofInvestor")
                        .HasColumnType("int");

                    b.Property<int>("FluidityofTechnologicalSolutions")
                        .HasColumnType("int");

                    b.Property<int>("FlunctuatingInterestRates")
                        .HasColumnType("int");

                    b.Property<int>("HarshMacroeconomicConditionsegInflation")
                        .HasColumnType("int");

                    b.Property<int>("HealthandSafetyRisks")
                        .HasColumnType("int");

                    b.Property<int>("Increasedleverage")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurityRisk")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentRisk")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LiquidityPressures")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyLegacyIssuesProperty")
                        .HasColumnType("int");

                    b.Property<int>("PeopleRetentionRisk")
                        .HasColumnType("int");

                    b.Property<int>("PoliticalRisk")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioProductandFundPerformanceRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProductivityRisk")
                        .HasColumnType("int");

                    b.Property<int>("ProjectManagementRisk")
                        .HasColumnType("int");

                    b.Property<int>("ReputationalRisk")
                        .HasColumnType("int");

                    b.Property<int>("RiskofDeclineinMarketShare")
                        .HasColumnType("int");

                    b.Property<int>("RisktoProfitabilityorPerformance")
                        .HasColumnType("int");

                    b.Property<int>("SocialRisk")
                        .HasColumnType("int");

                    b.Property<int>("StiffCompetitionandPoorVisibilityOftheBusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("StrategyBusinessRatingTrusteeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SustainabilityRisk")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalRisk")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnregulatedUnstructuredlandscape")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategyBusinessRatingTrusteeId")
                        .IsUnique();

                    b.ToTable("StrategyTrusteeRatingPrivateTrust");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AAFML")
                        .HasColumnType("int");

                    b.Property<int>("ARMAgribusiness")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMAgribusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControlAAFML")
                        .HasColumnType("int");

                    b.Property<int>("FinancialControlRFl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFl")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMAgribusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAgribusinessAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHoldingCompany")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHoldingCompanyBusinessRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasuryOperation")
                        .HasColumnType("int");

                    b.Property<int>("TreasurySale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMHoldingCompanyBusinessRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ARMIMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMRegistrar")
                        .HasColumnType("int");

                    b.Property<int>("BDPWMIAMIMRetail")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("FundAccount")
                        .HasColumnType("int");

                    b.Property<int>("FundAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IMUnit")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationControl")
                        .HasColumnType("int");

                    b.Property<int>("OperationSettlement")
                        .HasColumnType("int");

                    b.Property<int>("RetailOperation")
                        .HasColumnType("int");

                    b.Property<int>("TreasuryInvestment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMIMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastAuditIMBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTAM")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMTAMBusinessRiskRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreasuryOperation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMTAMBusinessRiskRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastBusinessARMTAMAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMHill")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMHillRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentPortfolio")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ARMHillRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastHillAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMSecurity")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMSecurityRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialAdvisory")
                        .HasColumnType("int");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Research")
                        .HasColumnType("int");

                    b.Property<int>("SecurityOperation")
                        .HasColumnType("int");

                    b.Property<int>("StockBroking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSecurityRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSecurityAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMSharedService")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMSharedServiceRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Academy")
                        .HasColumnType("int");

                    b.Property<int>("CTU")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Corporatestrategy")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customerexperience")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DigitalFinanceService")
                        .HasColumnType("int");

                    b.Property<int>("HCM")
                        .HasColumnType("int");

                    b.Property<int>("IT")
                        .HasColumnType("int");

                    b.Property<int>("InformationSecurity")
                        .HasColumnType("int");

                    b.Property<int>("InternalControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Legal")
                        .HasColumnType("int");

                    b.Property<int>("MCC")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProcurementAndAdmind")
                        .HasColumnType("int");

                    b.Property<int>("RiskManagement")
                        .HasColumnType("int");

                    b.Property<int>("Treasury")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMSharedServiceRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastSharedServiceAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ARMTrustee")
                        .HasColumnType("int");

                    b.Property<Guid>("ARMTrusteeRatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CommercialTrust")
                        .HasColumnType("int");

                    b.Property<int>("Compliance")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FinancialControl")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrivateTrust")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ARMTrusteeRatingId")
                        .IsUnique();

                    b.ToTable("TimeSinceLastTrusteeAudit");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductOwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ProductRiskAssementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductRiskCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductRiskAssementId");

                    b.ToTable("ProductAssessRisk", (string)null);
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentAttachId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerResponse")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuestionOrRecomendation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReseasonForRejection")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductRiskAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BusinessEntity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8212),
                            IsDeleted = false,
                            Name = "ARM Securities"
                        },
                        new
                        {
                            Id = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8229),
                            IsDeleted = false,
                            Name = "ARMIM"
                        },
                        new
                        {
                            Id = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8231),
                            IsDeleted = false,
                            Name = "ARM HoldCo"
                        },
                        new
                        {
                            Id = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8232),
                            IsDeleted = false,
                            Name = "ARM Trustees"
                        },
                        new
                        {
                            Id = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8234),
                            IsDeleted = false,
                            Name = "ARM Harith Infracstrure Investement Limited"
                        },
                        new
                        {
                            Id = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8235),
                            IsDeleted = false,
                            Name = "Shared Services"
                        },
                        new
                        {
                            Id = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8236),
                            IsDeleted = false,
                            Name = "ARM AgriBusiness"
                        },
                        new
                        {
                            Id = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8237),
                            IsDeleted = false,
                            Name = "Mixta Nigeria"
                        },
                        new
                        {
                            Id = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 502, DateTimeKind.Utc).AddTicks(8239),
                            IsDeleted = false,
                            Name = "ARM Digital Financial Services"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlternativeWorkarounds")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyNonElectronicVitalRecords")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationsUsedToRunProcess")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessProcessDescriptionSummary")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerExperience")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinancialImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyVendors")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumAllowableOutage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MinimumBusinessContinuityObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherProcessesOrPeople")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakPeriod")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryRecoverStrategyAndSolution")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecoveryPointObjective")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecoveryTimeObjective")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegulatoryOrLegal")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteWorking")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reputation")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdPartyImpact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BIAUnitProcessDetails", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BIAUnitProcessDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BIAUnitProcessDetailsId");

                    b.HasIndex("UnitId");

                    b.ToTable("BIAUnitProcessDetailsBusinessUnitToRunProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("BusinessImpactAnalysis", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessImpactAnalysisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisId");

                    b.HasIndex("UnitId");

                    b.ToTable("BusinessImpactAnalysisUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessImpactAnalysisUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessImpactAnalysisUnitJson")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessImpactAnalysisUnitId");

                    b.ToTable("BusinessImpactAnalysisUnitLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessEntityId", "Name")
                        .IsUnique();

                    b.ToTable("Department", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2213),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2222),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2224),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2226),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2227),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2229),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2230),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2238),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2240),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2241),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2261),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2267),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2268),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2270),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2271),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2274),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            BusinessEntityId = new Guid("50987439-cf5a-4356-8dec-55a845974076"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2276),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2277),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2279),
                            IsDeleted = false,
                            Name = "Business Development"
                        },
                        new
                        {
                            Id = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2280),
                            IsDeleted = false,
                            Name = "Retail Sales"
                        },
                        new
                        {
                            Id = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2282),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2283),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2285),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2287),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2289),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2290),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2292),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2293),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2295),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2297),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2299),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2301),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2303),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2304),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            BusinessEntityId = new Guid("0ca1b490-11d5-4e58-9289-e3eecefbdb9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2306),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2308),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2309),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2311),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2312),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2315),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2316),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2318),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2319),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2321),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2322),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2324),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2325),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2328),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2330),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2331),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            BusinessEntityId = new Guid("7e222ca0-5e9b-4a55-8c17-2e9b0de78641"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2333),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2334),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2341),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2342),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2344),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2346),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2348),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2349),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2351),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2352),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2354),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2355),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2357),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2359),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2361),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2362),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2364),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2365),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            BusinessEntityId = new Guid("517f4870-0546-4ab6-a83a-24eb2bc7eb93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2366),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2369),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2370),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2373),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2374),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2376),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2377),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2379),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2380),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2382),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2383),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2386),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2387),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2389),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            BusinessEntityId = new Guid("5a188edb-7c0e-4881-8a39-59e40c36ab05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2390),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2391),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2393),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2394),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2396),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2398),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2400),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2401),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2403),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2405),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2406),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2408),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2409),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2417),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2419),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            BusinessEntityId = new Guid("8497da34-5cac-46dd-bad0-efcc4bcb3656"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2420),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2422),
                            IsDeleted = false,
                            Name = "ARM Agricbusiness Fund Manager Ltd"
                        },
                        new
                        {
                            Id = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2423),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2425),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2426),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2427),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2430),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2432),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2433),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2434),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2436),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2440),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2442),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            BusinessEntityId = new Guid("7c6d5b40-7673-48a1-9485-19ff94961c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2443),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2446),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2448),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2450),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2451),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2453),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2454),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2456),
                            IsDeleted = false,
                            Name = "Design & Construction"
                        },
                        new
                        {
                            Id = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2457),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2460),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2461),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2463),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2464),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2466),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2467),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2469),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2470),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2473),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2474),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2475),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2477),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2478),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2480),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2481),
                            IsDeleted = false,
                            Name = "Corporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2482),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2485),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2486),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2493),
                            IsDeleted = false,
                            Name = "Legal & Compliance"
                        },
                        new
                        {
                            Id = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            BusinessEntityId = new Guid("3c8cc6b3-1c41-47df-800f-3588c3251fb9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2494),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2496),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2498),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2499),
                            IsDeleted = false,
                            Name = "Back Office Operations"
                        },
                        new
                        {
                            Id = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2501),
                            IsDeleted = false,
                            Name = "Customer Experience"
                        },
                        new
                        {
                            Id = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2503),
                            IsDeleted = false,
                            Name = "Finance / Treasury"
                        },
                        new
                        {
                            Id = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2505),
                            IsDeleted = false,
                            Name = "Business Support"
                        },
                        new
                        {
                            Id = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2506),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2507),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2509),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2511),
                            IsDeleted = false,
                            Name = "Internal Control / Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2512),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2513),
                            IsDeleted = false,
                            Name = "Coporate Transformation Unit"
                        },
                        new
                        {
                            Id = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2516),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2517),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2519),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2520),
                            IsDeleted = false,
                            Name = "Legal and Compliance"
                        },
                        new
                        {
                            Id = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            BusinessEntityId = new Guid("a2c4abe1-90bf-417d-a390-ad158c191c5a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 505, DateTimeKind.Utc).AddTicks(2522),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("RiskEventType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2031),
                            IsDeleted = false,
                            Name = "Internal Fraud"
                        },
                        new
                        {
                            Id = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2035),
                            IsDeleted = false,
                            Name = "External Fraud"
                        },
                        new
                        {
                            Id = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2036),
                            IsDeleted = false,
                            Name = "Employment Practices and Workplace Safety"
                        },
                        new
                        {
                            Id = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2038),
                            IsDeleted = false,
                            Name = "Clients, Products and Business Practices"
                        },
                        new
                        {
                            Id = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2040),
                            IsDeleted = false,
                            Name = "Disasters and Other Events"
                        },
                        new
                        {
                            Id = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2041),
                            IsDeleted = false,
                            Name = "Business Disruption and System Failures"
                        },
                        new
                        {
                            Id = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(2042),
                            IsDeleted = false,
                            Name = "Execution, Delivery and Process Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("NAME");

                    b.Property<Guid>("RiskEventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeId");

                    b.ToTable("RiskEventTypeCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(473),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(477),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(479),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("33aadbfc-fa8a-448a-93d4-0c57e1618bd3")
                        },
                        new
                        {
                            Id = new Guid("3429aad4-e734-44ac-919c-af9758979aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(482),
                            IsDeleted = false,
                            Name = "Theft and Fraud",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(483),
                            IsDeleted = false,
                            Name = "System Security",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(485),
                            IsDeleted = false,
                            Name = "Unauthorised Activities",
                            RiskEventTypeId = new Guid("92fb8ba9-3b62-4d6a-acb1-a4111b2196ad")
                        },
                        new
                        {
                            Id = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(489),
                            IsDeleted = false,
                            Name = "Safe Environment",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(491),
                            IsDeleted = false,
                            Name = "Diversity and discrimination",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(493),
                            IsDeleted = false,
                            Name = "Employee relations",
                            RiskEventTypeId = new Guid("d47bd1f5-c11e-4f25-9854-e028a566db5c")
                        },
                        new
                        {
                            Id = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(494),
                            IsDeleted = false,
                            Name = "Suitability, disclosure and fiduciary",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(496),
                            IsDeleted = false,
                            Name = "Improper business or market practices",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(497),
                            IsDeleted = false,
                            Name = "Product flaws",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(498),
                            IsDeleted = false,
                            Name = "Selection, sponsorship and exposure",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(500),
                            IsDeleted = false,
                            Name = "Consulting/Advisory Activities",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(512),
                            IsDeleted = false,
                            Name = "Mismanagement of classified company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("5e969527-3694-477a-8f17-40e53039966c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(514),
                            IsDeleted = false,
                            Name = "Misrepresentation of company information",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("635ca6d7-708f-4349-a483-ecf00679c489"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(515),
                            IsDeleted = false,
                            Name = "Poor Quality of Media Production",
                            RiskEventTypeId = new Guid("2d5e2984-086e-41fa-8af8-28ede5d4079c")
                        },
                        new
                        {
                            Id = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(517),
                            IsDeleted = false,
                            Name = "Natural causes",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("611b88d4-5289-4da1-a78d-420f236257dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(518),
                            IsDeleted = false,
                            Name = "Accidents and public safety",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(520),
                            IsDeleted = false,
                            Name = "Retroactive effects and improper activities by third parties",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(522),
                            IsDeleted = false,
                            Name = "Human Acts",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(524),
                            IsDeleted = false,
                            Name = "Disputes with Regulatory Authorities or other Governmental Bodies",
                            RiskEventTypeId = new Guid("ac12cf01-4e9b-4cd0-b578-9e1016a3e4c1")
                        },
                        new
                        {
                            Id = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(527),
                            IsDeleted = false,
                            Name = "Interruption in services provided by external providers",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(528),
                            IsDeleted = false,
                            Name = "Inadequacy Inefficiency Malfunction or Block of Technology Systems",
                            RiskEventTypeId = new Guid("468f18e4-d9be-49a9-af61-00556b1eb6e8")
                        },
                        new
                        {
                            Id = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(530),
                            IsDeleted = false,
                            Name = "Transaction capture, execution and maintenance",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(532),
                            IsDeleted = false,
                            Name = "Monitoring and reporting",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("81f7e998-9b34-4092-8590-a551647de2c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(533),
                            IsDeleted = false,
                            Name = "Customer intake and documentation",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(535),
                            IsDeleted = false,
                            Name = "Customer account management",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(536),
                            IsDeleted = false,
                            Name = "Non-client counterparty breaches",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(538),
                            IsDeleted = false,
                            Name = "Vendors and suppliers",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        },
                        new
                        {
                            Id = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(540),
                            IsDeleted = false,
                            Name = "Other Process breakdown",
                            RiskEventTypeId = new Guid("b0fdd290-1ebf-4a08-803f-07a69d349b4d")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("RiskEventTypeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskEventTypeCategoryId");

                    b.ToTable("RiskEventTypeSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("85bc2d0d-6552-44d2-bcf1-012a10bd8af2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(756),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("7205c6bc-1097-40c1-a941-824c5d8c424d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(759),
                            IsDeleted = false,
                            Name = "Theft",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("c8216ae4-ac18-4227-b24b-6d2c0905a990"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(766),
                            IsDeleted = false,
                            Name = "Cash management shortages",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("6df9eaa6-ea30-48bc-b6a4-30a0914651f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(767),
                            IsDeleted = false,
                            Name = "Extortion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("954506f8-3c68-4c42-927c-ecbd6e698b3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(768),
                            IsDeleted = false,
                            Name = "Embezzlement",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("e2d91ff3-b422-4580-8cfb-1be6b6de24a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(770),
                            IsDeleted = false,
                            Name = "Forgery",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("5af56e8e-b2e1-4674-ab38-c2db0d5e8256"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(771),
                            IsDeleted = false,
                            Name = "Cash suppression",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("7cb5da75-c4c7-4acf-8bab-37bbd09f787e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(772),
                            IsDeleted = false,
                            Name = "Cheque conversion",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("7f20ce90-4db8-4b0c-9765-01e4575d9d12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(773),
                            IsDeleted = false,
                            Name = "Manipulation of source documents",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("97d2c001-1be2-4d99-8261-227f1d1a1a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(774),
                            IsDeleted = false,
                            Name = "Manipulation of customer accounts",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("14ef7bda-9319-46fd-8c6e-da30613ec788"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(777),
                            IsDeleted = false,
                            Name = "Teaming",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("050156df-136d-4cb0-91d4-20c4e6dd6d7e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(778),
                            IsDeleted = false,
                            Name = "Illegal sales of securities from Clients portfolio",
                            RiskEventTypeCategoryId = new Guid("73a0df86-d805-4e57-a6ad-b8af814646a4")
                        },
                        new
                        {
                            Id = new Guid("0693bafe-f907-4e25-b5b4-cb76f0856a4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(779),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("2d208b62-ec58-4786-8871-298bb9d976b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(780),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("edc4788e-d3ad-40aa-8dfd-49171801a47c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(781),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("8978faf7-d8ef-482f-9845-6f8a232f64d4")
                        },
                        new
                        {
                            Id = new Guid("a1116385-de36-4f25-a965-3388a6d0344e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(782),
                            IsDeleted = false,
                            Name = "Misappropriation of company assets",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("6f70208e-28ae-4b65-a16c-43627465035a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(783),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("e7c1ae5d-a254-4987-a1ac-1c32661c112a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(784),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("04609bef-37da-40bc-a4d0-bef15ce524ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(787),
                            IsDeleted = false,
                            Name = "Intentional mispricing of products",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("64dee205-dd90-4619-aa25-d4ed8de72ffb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(788),
                            IsDeleted = false,
                            Name = "Destruction of source documents",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("2ff80c84-0fa5-4797-84aa-eeb18cdd54d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(789),
                            IsDeleted = false,
                            Name = "Unauthorised income waivers",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("d0420ae8-5341-4c59-9be3-aa55680f1a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(790),
                            IsDeleted = false,
                            Name = "Granting unauthorised credit",
                            RiskEventTypeCategoryId = new Guid("7f26b2bc-e09d-4dcb-9e1b-375f971b66c1")
                        },
                        new
                        {
                            Id = new Guid("fe768974-7b94-40d0-a410-206e81a5808b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(791),
                            IsDeleted = false,
                            Name = "Fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("9657ecdf-37d7-437d-a73e-665bc128ada6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(792),
                            IsDeleted = false,
                            Name = "Cash theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("08661c98-153e-4b0c-8e47-2b789d4568ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(793),
                            IsDeleted = false,
                            Name = "Pool car theft",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("141097cf-6f9c-45d6-9675-c3e96af2034c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(794),
                            IsDeleted = false,
                            Name = "Cheque forgery",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("e4d0b7c6-67e8-46c6-a78d-225c4aa4cee8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(796),
                            IsDeleted = false,
                            Name = "Cheque fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("4cea9f02-ee7f-4166-a835-b67873f585a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(798),
                            IsDeleted = false,
                            Name = "Cheque kiting",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("58cfb58e-10fa-4eb0-b5e1-d32f96979aa3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(799),
                            IsDeleted = false,
                            Name = "Fake currency fraud",
                            RiskEventTypeCategoryId = new Guid("3429aad4-e734-44ac-919c-af9758979aab")
                        },
                        new
                        {
                            Id = new Guid("1e751edb-ba10-41ef-bf1e-22ac651347b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(799),
                            IsDeleted = false,
                            Name = "Customer data theft",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("ed7d5458-c482-4f72-8895-e3ef7d9275c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(801),
                            IsDeleted = false,
                            Name = "manipulation of files / programs",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("a70b7ea6-ed94-46a7-befc-db88092a417a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(802),
                            IsDeleted = false,
                            Name = "Illegal withdrawals from client accounts",
                            RiskEventTypeCategoryId = new Guid("f9d3f84f-c129-46f1-9a6a-e18d7ef7f317")
                        },
                        new
                        {
                            Id = new Guid("17480838-2d5c-4f12-aa83-b6748e878720"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(803),
                            IsDeleted = false,
                            Name = "Account take over / impersonation",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("863d0d7c-1998-4d6d-86ea-8016f5d5f0d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(804),
                            IsDeleted = false,
                            Name = "Bribes",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("ca81e035-f70c-4d03-9233-4f1aec3bf73b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(806),
                            IsDeleted = false,
                            Name = "Kickbacks",
                            RiskEventTypeCategoryId = new Guid("849dc895-eca1-4165-b5ab-7cfcdc0d3ebb")
                        },
                        new
                        {
                            Id = new Guid("0cd5fcd9-6f3a-48f7-b26d-251f3ca1d3ef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(807),
                            IsDeleted = false,
                            Name = "Employee health and safety violations",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("0925ff01-7840-4aa7-b94f-b1fc285f6fc7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(809),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("ac39225c-db94-4127-8675-c6645b51a8c1")
                        },
                        new
                        {
                            Id = new Guid("327fe9a9-e4c6-4a33-ad25-b7d4e1fecf82"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(810),
                            IsDeleted = false,
                            Name = "Discrimination on account of religion, nationality, race",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("24dd2f7a-1966-4364-9ba5-1e7ddc5d6773"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(811),
                            IsDeleted = false,
                            Name = "Worker's compensation claims",
                            RiskEventTypeCategoryId = new Guid("a67cde3e-3ec3-44ee-a4dd-ad45713cdac7")
                        },
                        new
                        {
                            Id = new Guid("ef5a90c3-2c2e-468f-a5e5-6a02adbbdd88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(812),
                            IsDeleted = false,
                            Name = "Employee disputes and investigations",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("83cf99de-7ffb-4cb1-8657-2a973f4761d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(813),
                            IsDeleted = false,
                            Name = "Mistakes in the administration of employee compensation, benefits, or termination",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("a8fc759a-4ff8-4456-b8d5-39f52d35b51d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(814),
                            IsDeleted = false,
                            Name = "Organised labour activities",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("ebc3110c-8f95-4b77-8380-d131dbca2d80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(816),
                            IsDeleted = false,
                            Name = "Fighting between staff",
                            RiskEventTypeCategoryId = new Guid("c96fdc22-4a35-4461-8726-5f73124545b1")
                        },
                        new
                        {
                            Id = new Guid("ef169b98-e115-4b48-9a7c-6416cb3d5fda"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(822),
                            IsDeleted = false,
                            Name = "Fiduciary breaches and guideline violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("b928f5da-e7f4-43df-a2bc-3286a2f3b1d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(823),
                            IsDeleted = false,
                            Name = "Customer suitability violations",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("ccc81967-4cf0-4560-8eb8-0fb0704545f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(824),
                            IsDeleted = false,
                            Name = "Disclosure / misuse of confidential client data",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("5d9b7a99-86d5-4264-a266-e3459a320049"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(826),
                            IsDeleted = false,
                            Name = "Breach of regulatory guidelines on foreign exchange transactions / suspicious transactions",
                            RiskEventTypeCategoryId = new Guid("a9386e4f-342c-4868-9ef6-9c2db682ac0b")
                        },
                        new
                        {
                            Id = new Guid("d74e96cd-4596-4c47-afc6-c0896b886da6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(827),
                            IsDeleted = false,
                            Name = "Aggressive selling",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("5a5b32b0-01a4-4846-bf1d-b14132041f92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(828),
                            IsDeleted = false,
                            Name = "Account churning",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("64a3f91c-31af-4bf3-a785-f2f13bc382aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(829),
                            IsDeleted = false,
                            Name = "Unlicensed activities",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("cc236259-bee2-45c3-8923-48c96e1f24dd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(831),
                            IsDeleted = false,
                            Name = "Money laundering",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("fc35e8bb-da7e-4d14-ab31-a34a3c930111"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(832),
                            IsDeleted = false,
                            Name = "Tax non-remittance",
                            RiskEventTypeCategoryId = new Guid("d93d70e3-39d2-4b82-8d73-ba447f1bc06d")
                        },
                        new
                        {
                            Id = new Guid("a3d77c44-ee0d-406b-8a3c-b1ca7810af47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(834),
                            IsDeleted = false,
                            Name = "Product defects (e.g. Marketing of unauthorised products)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("5d714eb9-8b8f-4356-89a4-650a7f48ca37"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(835),
                            IsDeleted = false,
                            Name = "Model errors (e.g. product conception, methodology, or pricing errors)",
                            RiskEventTypeCategoryId = new Guid("f2320468-3def-4022-a67f-af0f6bbdc3cd")
                        },
                        new
                        {
                            Id = new Guid("fcc954b3-129f-43e6-871c-e56e5aa2fc84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(836),
                            IsDeleted = false,
                            Name = "Non - compliance with internal guidelines when investigating a client",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("54088eb3-36ab-42a0-bd60-aff334c3e80f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(837),
                            IsDeleted = false,
                            Name = "Client exposure (loan) limits exceeded",
                            RiskEventTypeCategoryId = new Guid("ef9c5269-9866-4d0b-bc67-1cda07009562")
                        },
                        new
                        {
                            Id = new Guid("43610766-449c-41ca-a8cb-67889b400758"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(838),
                            IsDeleted = false,
                            Name = "Penalties / Fees incurred for contractual disputes / transgressions",
                            RiskEventTypeCategoryId = new Guid("05d02531-4d98-41f9-8c34-1da6115b385b")
                        },
                        new
                        {
                            Id = new Guid("43e4b163-d760-4a4b-bb19-e76f0e0b3db9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(840),
                            IsDeleted = false,
                            Name = "Competitors obtaining information about the firm's initiatives and business strategy",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("3c6c53bc-33ce-4baf-b55c-0a9ad38d5409"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(842),
                            IsDeleted = false,
                            Name = "Misplacement of client information and correspondence",
                            RiskEventTypeCategoryId = new Guid("8e9be527-5bc1-48f5-a07c-10f36cd6d759")
                        },
                        new
                        {
                            Id = new Guid("fe57f232-312a-4f68-89c3-3d92573abaa5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(843),
                            IsDeleted = false,
                            Name = "Errors in ARM's publications and annual reports",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("5c540a00-f13f-4c20-a782-8a620eefbe05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(844),
                            IsDeleted = false,
                            Name = "Misquotes by public media sources",
                            RiskEventTypeCategoryId = new Guid("5e969527-3694-477a-8f17-40e53039966c")
                        },
                        new
                        {
                            Id = new Guid("30fa4a9c-c70a-4f15-8a8c-0e6a1c995234"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(845),
                            IsDeleted = false,
                            Name = "Inferior production of corporate gifts",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("d4abf376-cf89-44bf-8f04-a97872124544"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(846),
                            IsDeleted = false,
                            Name = "Substandard /Offensive advertisements and promotional activities",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("f44ff21e-4f21-4ddf-8732-fc84c5617679"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(847),
                            IsDeleted = false,
                            Name = "Poor quality of Annual Reports prints",
                            RiskEventTypeCategoryId = new Guid("635ca6d7-708f-4349-a483-ecf00679c489")
                        },
                        new
                        {
                            Id = new Guid("5369ddec-0ddd-441c-8163-c2766a01718d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(849),
                            IsDeleted = false,
                            Name = "Fire",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("492a906b-8cd2-43b6-94d0-56fb4f030f99"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(849),
                            IsDeleted = false,
                            Name = "floods",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("635a9b53-b0d2-4800-8637-6fe698ebc7c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(852),
                            IsDeleted = false,
                            Name = "hail damage",
                            RiskEventTypeCategoryId = new Guid("715e84f3-6d29-49d0-b8ab-9f3c6c65d27e")
                        },
                        new
                        {
                            Id = new Guid("bf71dbff-db6e-4dd8-86da-955b3dd05d12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(853),
                            IsDeleted = false,
                            Name = "General responsibility for injuries caused to third parties eg. company Vehicle accidents",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("75349972-5802-40a0-b703-ea31d1f18ef5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(854),
                            IsDeleted = false,
                            Name = "Electrical surges",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("1f2a338f-effc-40dd-9875-814030a84f56"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(855),
                            IsDeleted = false,
                            Name = "Fire outbreak",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("f0671296-8ada-4758-b0e4-dff6e3a406b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(856),
                            IsDeleted = false,
                            Name = "Water spillage",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("4d8ea871-3436-4cc9-99bc-f6fc13ceea1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(857),
                            IsDeleted = false,
                            Name = "Smoke detectors not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("0b1b1236-1693-4b77-bf3f-4cbde2048eff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(858),
                            IsDeleted = false,
                            Name = "Fire alarms not functioning",
                            RiskEventTypeCategoryId = new Guid("611b88d4-5289-4da1-a78d-420f236257dc")
                        },
                        new
                        {
                            Id = new Guid("ca36716f-b428-4577-bc48-38981222e9bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(859),
                            IsDeleted = false,
                            Name = "Political interference in the companys operations",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("9c1b66ca-bd9c-4509-af28-1909bc685804"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(862),
                            IsDeleted = false,
                            Name = "Launch of competitive products by agents",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("f77ccf00-b498-46d3-8726-f722a7efb044"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(863),
                            IsDeleted = false,
                            Name = "Court debt judgements",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("20e350fe-9ebc-41e5-bdcd-b78dbaf4321c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(864),
                            IsDeleted = false,
                            Name = "Out-of-court settlement costs",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("921cc0fc-a49b-4975-bd59-572ffea2ed82"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(865),
                            IsDeleted = false,
                            Name = "Litigation expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("8997ddae-6623-4bbc-88cb-e4f1fc7d22d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(866),
                            IsDeleted = false,
                            Name = "Debt recovery expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("739bb00d-3197-409d-b1d0-dbd4189499d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(867),
                            IsDeleted = false,
                            Name = "Fines & penalties",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("04a33bb7-8e73-4a74-8edb-0e80fdc04829"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(868),
                            IsDeleted = false,
                            Name = "Loan writeoff expenses",
                            RiskEventTypeCategoryId = new Guid("fbff5d8b-2c51-43e8-8a3d-6b7f2a5873a9")
                        },
                        new
                        {
                            Id = new Guid("0c7f8dbd-0f8c-408f-bdd1-a73c3b73d462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(870),
                            IsDeleted = false,
                            Name = "Vandalisation of company property",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("1d250e05-8ca1-404c-97c1-59c08433d6b6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(872),
                            IsDeleted = false,
                            Name = "Sabotage",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("279fa8b1-f3ff-4ad0-a735-808b288050d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(873),
                            IsDeleted = false,
                            Name = "Robberies",
                            RiskEventTypeCategoryId = new Guid("62ce3931-6d3a-42d0-a0f4-f637e9afd0b9")
                        },
                        new
                        {
                            Id = new Guid("d74c88b9-5c71-409d-8a9d-8e59c82e88b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(875),
                            IsDeleted = false,
                            Name = "Missed deadlines",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("aace4db9-40a9-4e8d-8362-b111ac933729"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(876),
                            IsDeleted = false,
                            Name = "undeserved fines and licence supensions",
                            RiskEventTypeCategoryId = new Guid("4e053fc0-8442-4da3-a1d9-8a1cca234912")
                        },
                        new
                        {
                            Id = new Guid("a9ee0718-b93f-4ca2-838f-441a4960ea21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(877),
                            IsDeleted = false,
                            Name = "Interruption in communications",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("dabd2558-bd17-47ff-9dfc-af3ef5c2cff5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(878),
                            IsDeleted = false,
                            Name = "Power outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("92297520-aa2e-41e0-9918-0bf678a358e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(879),
                            IsDeleted = false,
                            Name = "Inability to process transactions",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("3a1df43c-2375-42f3-b885-69ba3ddb2891"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(880),
                            IsDeleted = false,
                            Name = "Telecommunication link outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("0383d175-0197-4038-9b8c-5c6748d42a05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(882),
                            IsDeleted = false,
                            Name = "CCTV outages",
                            RiskEventTypeCategoryId = new Guid("0fbe8f2c-7905-40cd-837b-7ccd5195aff6")
                        },
                        new
                        {
                            Id = new Guid("e435399c-90fe-48cf-b169-cf3ca1c91d3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(883),
                            IsDeleted = false,
                            Name = "System downtime",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("c2cc1831-722e-4479-8374-9c85f4d73c01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(884),
                            IsDeleted = false,
                            Name = "Automated data processing errors",
                            RiskEventTypeCategoryId = new Guid("0fef6d10-b14d-4912-a09a-5db403d34154")
                        },
                        new
                        {
                            Id = new Guid("a11e558b-e01f-497c-8e30-2d9925dad2c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(886),
                            IsDeleted = false,
                            Name = "Errors in the maintenance of information",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("df421a6a-5926-458f-a4f8-451d228b211f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(887),
                            IsDeleted = false,
                            Name = "Data entry errors (payment instructions, rates)",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("96080fb1-e985-457e-9859-e45416a5f910"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(888),
                            IsDeleted = false,
                            Name = "Transaction not booked",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("d472bc9a-122f-4bfd-aed5-b09d044395fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(889),
                            IsDeleted = false,
                            Name = "Alteration not countersigned",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("eecb2beb-9e7a-429d-aa18-38cf7ed6c628"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(895),
                            IsDeleted = false,
                            Name = "Transaction not registered",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("42f6626d-f407-43cd-8618-859c465f3fc9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(897),
                            IsDeleted = false,
                            Name = "Amount in words different from figures",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("1867393c-6766-4178-9117-d17adc544421"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(898),
                            IsDeleted = false,
                            Name = "Application of wrong interest or exchange rates",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("3dd20afa-70ee-45b2-b64b-179d34cb6b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(899),
                            IsDeleted = false,
                            Name = "Failure to regularise customer instructions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("4f9c8335-6515-42fc-886b-9ab8576135fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(900),
                            IsDeleted = false,
                            Name = "Data entry errors",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("1209fccf-d781-4810-b174-3841c0c0546d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(901),
                            IsDeleted = false,
                            Name = "Processing undated transactions",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("3a6ece75-ace3-4426-ab19-d96bfe8e6ad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(902),
                            IsDeleted = false,
                            Name = "Improper identification of beneficiaries",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("59cc0bb4-aa83-4c2c-82bc-8d21e755aedd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(903),
                            IsDeleted = false,
                            Name = "Wrong classification of accounts",
                            RiskEventTypeCategoryId = new Guid("52ecc3f4-55c8-4a9a-ab54-d86eb8f2b3d0")
                        },
                        new
                        {
                            Id = new Guid("bf0d1600-3929-4754-91c9-33c97369270c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(905),
                            IsDeleted = false,
                            Name = "Incorrect client records",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("2f463c81-186e-4d3c-bb99-19d48b31a75d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(907),
                            IsDeleted = false,
                            Name = "Inaccurate information sent to clients / external parties",
                            RiskEventTypeCategoryId = new Guid("84c43920-c0c7-4d25-86fe-1ec905d69e26")
                        },
                        new
                        {
                            Id = new Guid("c48fe003-0635-42fa-91f1-6e514b91b8fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(908),
                            IsDeleted = false,
                            Name = "Client permissions/disclaimers missing",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("49c7d847-e3b8-49d8-be08-507e6d04aa77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(909),
                            IsDeleted = false,
                            Name = "Contractual documents missing / incomplete / erroneous",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("f050899e-cc06-4c33-85fd-416e42514986"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(910),
                            IsDeleted = false,
                            Name = "Improper account setup",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("29a45bbd-057d-47e4-bd0d-0d431fbc8fa2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(911),
                            IsDeleted = false,
                            Name = "Incomplete account opening documentation",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("9bbc1eeb-e1af-4829-b808-b4aff8005d3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(912),
                            IsDeleted = false,
                            Name = "Failure to upload mandates",
                            RiskEventTypeCategoryId = new Guid("81f7e998-9b34-4092-8590-a551647de2c0")
                        },
                        new
                        {
                            Id = new Guid("dc974e58-275c-4fa3-b903-0739033f474f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(913),
                            IsDeleted = false,
                            Name = "Unapproved access given to accounts",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("a45df9c5-c849-429f-8fd4-f6de499de627"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(914),
                            IsDeleted = false,
                            Name = "Negligent loss or damage of client assets",
                            RiskEventTypeCategoryId = new Guid("c5c4e527-45e0-4bd2-917f-59783425e0a3")
                        },
                        new
                        {
                            Id = new Guid("492b7a2e-ac0b-4f40-8f62-66cc6cc60909"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(916),
                            IsDeleted = false,
                            Name = "Failure of counter-party company to repay inter-company lending amounts on demand",
                            RiskEventTypeCategoryId = new Guid("f6d2467a-358d-446e-b6ea-79c5c649b472")
                        },
                        new
                        {
                            Id = new Guid("6150221f-e75c-4fe2-9811-673252a6ce89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(918),
                            IsDeleted = false,
                            Name = "Failure of vendors to deliver on contractual obligations",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("3a07c88d-0079-486e-bc98-375b59edb4f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(919),
                            IsDeleted = false,
                            Name = "Disagreements over terms of outsourcing contracts",
                            RiskEventTypeCategoryId = new Guid("9a06f398-dacd-44dc-abfd-cfe9721e6ce5")
                        },
                        new
                        {
                            Id = new Guid("b28d5eba-4890-4c99-b882-7f35dded124c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(920),
                            IsDeleted = false,
                            Name = "Errors in Human Resources/ Administration processes",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("19baadd2-104c-4f52-be44-a27beda0842b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(921),
                            IsDeleted = false,
                            Name = "Procurement not authorised",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        },
                        new
                        {
                            Id = new Guid("4e0e361c-1b21-4b54-aef7-7de076229215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 516, DateTimeKind.Utc).AddTicks(922),
                            IsDeleted = false,
                            Name = "Disposal of Fixed asset not approved",
                            RiskEventTypeCategoryId = new Guid("cb18e18c-39a4-4802-9cc5-9a775368cc98")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RCSAStage")
                        .HasColumnType("int");

                    b.Property<Guid>("RiskControlSelfAssessmentUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RiskControlSelfAssessmentUnitId")
                        .IsUnique();

                    b.ToTable("DocumentRSCAProcess", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRSCAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentRSCAProcessJsonDump")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRSCAProcessId");

                    b.ToTable("DocumentRSCAProcessLog", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionOwnerUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<string>("ColourEffectiveness")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Control")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentRCSAProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InherentRisk")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResidualRiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ResidualRiskRating")
                        .HasColumnType("int");

                    b.Property<string>("ResidualRisks")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestResult")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TestResultAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TestResultAttachmentModuleType")
                        .HasColumnType("int");

                    b.Property<string>("TestToApply")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeLine")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DocumentRCSAProcessId");

                    b.ToTable("ProcessInherentRiskControl", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("RSCAProcess", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("21a25334-7a10-4fd2-aa7f-910d79bc9670"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3742),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("cf9fa8f1-c470-43a4-8c05-cbc4b49faba2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3744),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("2235a96d-8c8b-4dfe-882b-ac8644773898"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3746),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("7fc9e445-1bf2-4c80-bf5d-fb1a6a90e5e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3747),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("9aa570fe-b72c-49b4-be60-81586ed23089"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3748),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("1d39f893-529c-4ceb-ab16-d838199b8102"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3749),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("bd70403e-af0f-40cf-8057-ccf742c0e920"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3750),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("e3512539-e75d-410d-8c77-54b11313eaa8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3751),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("1a68c870-80ca-4ffc-8e89-3c1aca71ee4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3754),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("94e6fad1-48ad-4b24-a190-834879ee59b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3755),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("b8572442-387a-4486-a871-9be213b3384c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3756),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("39b0184e-385c-40e6-8cb5-92a427319dfe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3757),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("26b2372b-703f-4ec2-963c-963ecd2e3a1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3763),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7")
                        },
                        new
                        {
                            Id = new Guid("263932f4-284b-4f01-bc01-634dbf1fc261"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3765),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("3dc50e83-244e-4fdb-a1a2-8edcf0fa3462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3766),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("69b7f9b9-e46b-438b-8b50-bef423864dd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3767),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("52772398-ddee-4656-a516-02e576dadcc5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3770),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("9e9ef476-69f1-4eed-889d-391f652f2c09"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3771),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("6f633bf1-8409-40bd-aedd-193a133c126d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3772),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3")
                        },
                        new
                        {
                            Id = new Guid("57d4076c-afa8-4c85-b116-728825526013"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3774),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("db10e6c3-f6c5-4536-ada5-7af2f2326657"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3775),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("4e03ad66-db7f-4809-b824-18975e8d7f58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3776),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("74543c2c-b45c-4588-914c-030caa276951"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3777),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("c831b6bd-3660-42b0-8ed0-f2529a7c333e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3778),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("a2ea2b05-0c68-44df-a2b9-635824e7c893"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3780),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("9c50c001-a67e-49a5-9142-0bfa175d9dfe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3781),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5")
                        },
                        new
                        {
                            Id = new Guid("47f8418a-200b-40b2-8b56-a092d2dc371e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3783),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("206b16a9-2535-4895-8d72-1ff363d83d39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3784),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("fc3833f7-659b-4403-b59b-c79be69312a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3785),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("46c7b10b-31f6-4e28-8bef-fca4b53a3286"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3787),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("4f186f45-7e21-4301-bdf7-91834bf1852a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3788),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("3028c546-14ad-4f83-a5f7-4039be55da76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3789),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("c7912fd0-b622-412f-a62c-1b6b96c770ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3791),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836")
                        },
                        new
                        {
                            Id = new Guid("6dcfe995-7db2-4d51-a605-7511efb56640"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3792),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("880e13f7-c8ba-4eca-9d28-5ee6d0cdda77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3793),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("6884301c-5062-4b24-9708-2153c763fdaa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3794),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("aa4be2f4-2357-4483-a7db-13b93c31fb43"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3795),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("855eaed2-00ec-4729-8696-9101534f2630"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3796),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("219cd6ae-adbd-4944-a980-02765491f0f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3797),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("bddaeb88-87f4-438b-ad55-cd0664c8e0e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3798),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb")
                        },
                        new
                        {
                            Id = new Guid("1cb80c46-08ea-40f3-8646-26c5a4cc30ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3801),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("d4eefc32-e4b1-4aa7-8892-95cde2148fd6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3802),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("6c719d99-d17e-4953-af8d-38aa972bfdec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3803),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("97291919-c5b8-46fe-b128-ef97d4a88d41"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3805),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("219461ea-d948-437f-9ab3-3d408c6971a3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3806),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b")
                        },
                        new
                        {
                            Id = new Guid("2e4cbfda-1518-44a6-8917-ebb0813aeebb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3808),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("dc83e2ef-7a19-4101-849e-461e871f2b71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3809),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("222a3059-9373-4db5-966f-798655633f82"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3810),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("f55656a8-86b2-4080-b29e-676a0b01b5f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3813),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("d61f5775-074a-4fa2-aa05-9f10a3d6f8a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3814),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("b10d980b-01ce-4fcc-8239-5946502bcfc8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3815),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("556d5367-6794-4355-974f-e2ebb6447695")
                        },
                        new
                        {
                            Id = new Guid("38089e33-cda1-456e-b5d7-3fcf62db791c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3817),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("cfab9a44-bdaa-4591-a9d1-04eae1d76496"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3818),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("7248adda-5017-4a75-a684-156885e97e2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3819),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("2b04d557-5499-49b4-8e01-cedc68db7e84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3820),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("5704582c-6111-452c-a061-3728957d4327"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3821),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("5513c849-1542-416f-91bb-89ca0c0dfad0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3824),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a")
                        },
                        new
                        {
                            Id = new Guid("1c06b864-c47e-42b0-aad2-73337aff9d5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3825),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("2d2c546d-48ce-4203-ae74-09000d53ceed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3826),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("221673e7-64b5-40de-b369-9cf4a859bfb6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3827),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("6b1f4e1a-ad3c-49e9-9787-0c8aeed02bd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3828),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("aa07f670-ea5d-4e9e-89f5-5d708fa14cbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3829),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("06adb7c4-2bc4-4cf4-9893-bc71f8407913"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3831),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("08c2d2e3-e2e8-4900-8e7c-d1f771dac1d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3832),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("d9cd357f-e849-4852-8ea9-bc26c31ad230"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3834),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("423c97f4-1ac4-4e35-8227-501d7d73eb9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3835),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("1c3fd01a-7d4c-4610-a5e7-1062b26bf11c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3841),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("ec504420-6920-4ada-964b-066335bfe90a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3842),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("c8ba310f-753d-4317-bce6-1559fb079142")
                        },
                        new
                        {
                            Id = new Guid("a3dc700c-a736-444f-83e7-cf42e74c14f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3844),
                            IsDeleted = false,
                            Name = "Redemption/Withdrawals/Other Payments",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("656b31ce-d60f-470d-a980-d1eab48a1760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3845),
                            IsDeleted = false,
                            Name = "Subscriptions",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("c9afc103-db38-4960-b91a-cf41ede5803d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3846),
                            IsDeleted = false,
                            Name = "Reference Letters",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("24a76d4b-94fb-428a-824c-0ba5848d19aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3847),
                            IsDeleted = false,
                            Name = "Statement/Valuation Requests & Quarterly Portfolio Reviews",
                            UnitId = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd")
                        },
                        new
                        {
                            Id = new Guid("1092234a-75f6-4925-a643-98314b1a54b1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3850),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("e2496cf9-b610-42f6-93ad-69beef5ee2df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3852),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("e94cecab-9e1b-49e6-ba4b-a4c2f5958f18"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3853),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("44ba5d01-de69-4a39-a128-4eef0432a0d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3854),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("beecf721-1f6b-4b90-9191-74621cef416c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3855),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("97b729aa-0e62-4762-b19c-b90e575583fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3856),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("528c4d2c-5f37-495a-9459-3655d38384ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3857),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("33951ad0-06ed-4eee-8515-c54193f9ca9f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3858),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("9d793023-4967-464d-9981-a649c91f6a44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3861),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("1b2dd2a8-60a0-47c9-aaab-3e850789abb7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3862),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("e685236a-e06f-432e-9b34-b7174b8d67db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3863),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("83396909-fee8-4c54-892e-e8fdd4773200"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3864),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("bbcc398f-321e-4173-b135-47833b945184"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3865),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32")
                        },
                        new
                        {
                            Id = new Guid("88be0bc9-22f3-4a11-82b5-273c442c3541"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3866),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("52c43356-eac3-4914-abe4-63a715e145c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3867),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("f6430287-7ec2-4eaa-83ab-4d00b7ec5aa6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3868),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("bc5a725d-f47a-45b9-8b3a-76db1497ebe1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3871),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("9ce4d73d-2b86-4882-bdb6-0b9078b2d806"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3872),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("43845e7c-3b21-49d2-bb13-c74b4ff2a463"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3873),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860")
                        },
                        new
                        {
                            Id = new Guid("593d0c2b-82f9-449a-aa4b-578bd3486f8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3874),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("bf6ab6f3-973a-488d-baa9-6671cae30649"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3875),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("74dccf6a-b8b0-47e4-8c9c-7211314b4c23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3876),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("a30a8f7b-b898-4135-b8ae-3e6d1c618325"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3877),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("beedf83d-e77b-49a6-80ef-a4e46ad5ff36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3878),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("b850ce1f-699a-498a-b2bc-5985cb40d75d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3880),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("5eb0dc65-6cdf-4aa1-9b7c-4e4b9ee70973"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3882),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7")
                        },
                        new
                        {
                            Id = new Guid("8cab776e-a433-41bf-8514-7e98e92c4c46"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3883),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("066dfadf-aa76-4120-93b2-8138a65345f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3884),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("1e653a2f-4856-4a9a-a14f-e8a79b125eef"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3885),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("44e8ce64-925e-4cc9-aeba-bcbcdccbb867"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3886),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("8abb89f8-5421-4f47-a71a-7a4b3eab4bff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3887),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("38e5c322-e411-48a8-8353-b3e873d374a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3888),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("2504d62a-6ba3-46f2-a74e-b52c271211f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3891),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1")
                        },
                        new
                        {
                            Id = new Guid("c5149d89-b7a1-46b7-a2ef-781c2e81aad2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3892),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("bf38e3a9-beb9-4f9c-ba81-fdf2059b6714"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3893),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("3d91a4c0-3ec6-4d5b-a03e-c9dd86d52947"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3894),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("b1080fa9-9107-48ad-8b26-cc705eed0aab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3895),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("93372f7e-0777-4f12-acab-4ebcbffeb590"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3896),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("73a589c2-4ccb-4b32-85bf-70ac5afa5d2e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3897),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("160c7d13-959e-4b18-996e-95da6724057a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3898),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31")
                        },
                        new
                        {
                            Id = new Guid("a59f5bc7-3aa8-4612-83bf-3d89e3acab11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3901),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("8440ae3a-0921-4557-9f50-90c12e6291b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3902),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("c6f41f30-247d-4487-a75f-9653ad375e28"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3903),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("6f6e2948-fb78-4c9b-b9a1-fe74228602b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3904),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("b0c5ac86-216e-4818-83df-cc29a35bad4a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3905),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7")
                        },
                        new
                        {
                            Id = new Guid("ea7a4cc0-7b89-4c63-bb9b-060dddf764de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3906),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("903edd37-67b3-4387-9d85-d2ca9a7d30e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3907),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("689ca990-662f-40d7-8c50-8726c36d4af5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3913),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("91e95b97-b93e-4e9d-a613-85365cd53a0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3915),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("a964b5f4-cf0a-493c-82b2-71bdda893f2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3917),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("c3615ced-aa44-4426-bbf8-4a8754aa8f80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3918),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("320cfad6-9efa-49bd-891a-57c6e8ace7a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3919),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("61f21349-a431-446a-80df-0c26d572f181"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3920),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("360f5178-efe8-4e7e-8e26-090d713ed864"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3921),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("7922b185-3896-49e3-bc7b-23fd43bda60f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3922),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("bc39f0c7-53f2-421b-8309-d725c2bedb8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3923),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111")
                        },
                        new
                        {
                            Id = new Guid("431a46b2-4be6-4045-aefb-76a4c31c382e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3926),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("2522dbf7-bb6a-4fc6-8d47-8330c4f5229c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3928),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("9184112d-a436-4934-a20c-91e02442c7d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3929),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("1930e876-b6b2-47f0-ada1-4ebbc3c07248"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3930),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("480496da-0d6a-4efa-986d-332ef8556d09"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3931),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("db7c70fd-ee1e-4f07-a425-58ca5406eaeb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3932),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("04e4c842-f3c5-4388-a810-5bcb408c0889"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3933),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("02a4f658-5766-4c5f-bc77-9d78f10a9f24"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3934),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("3f06367d-f755-40a0-b266-260922ae2ebe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3937),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("614eb613-4099-4029-96f5-c0c3e8885c34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3938),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("708e4cc7-2344-4d9e-9ce5-e839f70f0006"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3939),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("d34998e2-348f-458d-ac4e-7ba91275466b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3940),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04")
                        },
                        new
                        {
                            Id = new Guid("ffa26764-1633-4347-b227-b4d69f58c1c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3942),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e7ac6b0a-c95d-4722-b1a6-b41f8ac5c843"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3943),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("3d46743d-ffbf-4ce5-bc60-1e2a80664983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3944),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("814f36bf-a56b-4816-b70c-2705c6186e69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3945),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("ded477b7-a201-475d-a09b-6868ad6484de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3947),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("212903cb-a674-411c-9095-ea2173376754"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3949),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("4b4410a5-5dc3-4594-a3f3-b1ac89210b47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3950),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("e2dc70f8-dc21-4466-83c8-cb9b6cfc5e3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3951),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("c697599f-c484-43e1-9ae5-afc0fc97ac00"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3952),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("c1cb5b52-09bf-4621-8759-27d7c45605c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3953),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("9af65f4b-1c5e-442f-8e83-cf002e3a7ac1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3954),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("cb0b4e0f-4263-46d3-bca8-c04e6b8cd658"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3955),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("ad0cdb6c-4683-4d20-af55-d81e39422a74"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3958),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12")
                        },
                        new
                        {
                            Id = new Guid("155ea555-f235-4fe2-8f69-34d1fb12b9cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3960),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("99ed1ab4-1736-492e-919a-4d9d434bf6a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3961),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("df315d1b-d08b-4615-b999-b823395720f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3962),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("8f8751ae-dd86-42ea-acd8-0186409b1ecb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3963),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("0ba5f77d-904f-4452-a74c-f5692b412012"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3964),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("f7931859-5723-47f8-8249-3ff9d0ad9844"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3965),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("e320042e-c237-4c4f-9142-6d7e0c730225"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3966),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("0a76a6a1-3604-431a-8791-b35d6153f1e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3969),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("ddf2b488-c270-4ad3-9879-1654e56f67ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3970),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("1cd4f5db-e4a0-48b3-8643-dfefa8a0dabe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3971),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("7b91a8e3-df10-4e9e-b5d2-139b05ffe515"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3972),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("3291783b-7489-4f49-ae57-14d5fee5ee42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3973),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("5e076bc2-572b-4a33-8d0e-0a7ed6b85097"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3974),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a")
                        },
                        new
                        {
                            Id = new Guid("eece5c51-70ed-4751-b399-b128cf69cb6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3976),
                            IsDeleted = false,
                            Name = "Reconciliation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("8c36ba6b-465b-48f3-91e5-cd108d4e67e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3977),
                            IsDeleted = false,
                            Name = "Call over",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("96896efb-fcf9-49b6-850e-d64b745c6d47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3980),
                            IsDeleted = false,
                            Name = "Fee accrual validation",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("9eff48ff-b498-4aa0-a0c7-bd97207d34e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3981),
                            IsDeleted = false,
                            Name = "GL reconciliation and review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("76c9d137-1ce5-4a85-a35d-08d6cca221e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3982),
                            IsDeleted = false,
                            Name = "Valuation and pricing review, EOD activities review",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d")
                        },
                        new
                        {
                            Id = new Guid("3498b1bd-221b-494f-bc73-aef589d75a96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3983),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("22ed2c5e-4d98-4fb4-8542-87fc2de70c1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3985),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("09a828d9-4582-4a47-8961-f26e7b8b34f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3990),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("9f67b85a-ba8d-438d-8c9f-17c9cd3a14da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3991),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("bb3f5fb9-d8d5-4bd6-9864-c385afde7803"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3992),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("cc46c38b-e1d7-4baa-9987-690dac870e6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3995),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a16649cf-8b89-4027-9628-8af108db66fc")
                        },
                        new
                        {
                            Id = new Guid("a589399f-dc81-412f-b7c6-35e9f4846c65"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3996),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("af716774-47fc-41d1-aa2f-b474a1a131ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3997),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("7790b5c0-a9f6-4612-8d99-6dcc678a0cbc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3998),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("36e06cd1-deb9-4ad8-86d5-1384ef528d22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(3999),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("a0152e32-fa53-47a4-8168-f56c004aa7b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4000),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("0c6c34d5-b189-490c-91f0-a68ba9160f3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4001),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70")
                        },
                        new
                        {
                            Id = new Guid("f092c5b4-6f55-4580-a810-400b33cbeb02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4002),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("1e116709-aafa-431c-ab1f-f954ca8e6c42"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4005),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("9ff5074f-69e1-43cb-93d4-09663da73469"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4006),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("652de1fd-5e5a-42e9-b7b0-deee58be5c55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4007),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("2ad9dfda-b02d-4a33-88c1-a40f41344718"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4008),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("d0f37c20-13fa-4ef5-b25b-664625c1c067"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4009),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("2c5326fa-49bf-45e7-b687-2349f44e0604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4010),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("acbd38a4-961b-499b-8dfa-7ee416b9b32f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4011),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("8510a3e2-d025-44f9-a49b-036b47deda8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4012),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("219fbe9d-d992-4731-a6f5-02896d2d89ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4015),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("73fd80aa-8dda-4257-bc49-7e6e5aa3331f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4016),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0")
                        },
                        new
                        {
                            Id = new Guid("103453c0-2656-47cf-a856-4bf15e17cbf3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4017),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("3fce16ea-b6e6-4d5f-9f9c-792aa63a975f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4018),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("e46cdd5b-aa2d-403f-8d88-bfc60254e0d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4019),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("933ee613-f725-4486-95f7-fcd0e0baebed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4020),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("d630c102-0640-483f-b7ee-58f8b2227d77"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4021),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("3b04c71f-d96d-441d-964b-961af56b8e59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4022),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("a32cc407-7a0a-440a-869a-695276ebf0cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4024),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("4538b83d-5d44-41f4-9ff2-9a37a3f4edb2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4026),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("41ae585e-c78a-40c3-99dc-414e956afee3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4027),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("f0db5f1b-ba88-414e-9db1-80ee883be61c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4028),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("0d4b5e79-7ed8-43ba-8b2f-964161ae2da0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4029),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("4190c2d9-376c-46b6-acbc-803177106fab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4030),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("d3fd4a27-6435-4cab-a9cd-7d12b0e99fdd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4031),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc")
                        },
                        new
                        {
                            Id = new Guid("2f1ca0b4-99b4-4929-8aca-7f2c051a0508"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4032),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("6db87605-c8b2-41ca-b383-6779d8b5e8f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4035),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("27f589ee-8603-46cd-9986-c30d70aebe49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4036),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("4565e11b-caa2-448a-8211-ba7b39a34708"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4037),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("26486528-e4dc-4cb0-a2a3-6dc8980b5158"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4038),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("14b63d5e-5774-44e1-8241-d2888d08cf70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4039),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b")
                        },
                        new
                        {
                            Id = new Guid("8de2333a-1d56-4209-8c25-59c899c23bca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4040),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("0d4b934f-65ee-4964-8755-171be00c586c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4041),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("c3a66cb7-5087-4c5e-9dcb-d7661e95d30c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4042),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("6f83c8e2-14d2-4951-a363-b4fed8ed74fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4045),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("e2ad2b2b-1073-40ef-8aee-491d73c549ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4046),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("33fc6f92-1175-4c26-971b-ab5e84898834"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4047),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("f11bb4c4-3434-4e65-bf28-8932914503f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4048),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38")
                        },
                        new
                        {
                            Id = new Guid("29a98c73-4ddb-4a23-b1e8-9f42eb17fc33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4050),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("aa5a44f5-2faf-4fe1-b9c1-c25e78f6edbd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4051),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("893993e3-88fd-4b7a-8fd6-9ba9835a3d40"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4052),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("b653d1f7-c042-4b72-b6c5-16d95b396a9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4053),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("02cb5bc4-10ce-4836-a1c2-c8ffdee5ad79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4057),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("77e2514e-e602-4f0e-b9c1-540073e1bbe8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4058),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("0a9ca2e5-4b13-4901-96ff-14093b02dc9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4059),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6")
                        },
                        new
                        {
                            Id = new Guid("8b9c6ea4-904d-4dd2-9531-8c29ad74da59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4066),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("74a79cb5-b5a5-4eb0-8e24-f37064d8281a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4067),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("46103ca4-704b-4377-ad98-3273f049d231"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4068),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("c29ba8fd-bc8b-4cc4-a70d-c7ded45e0d35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4069),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("d25eca9f-89b0-4e7f-b0f8-4d2858b4ad6d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4070),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("426a705c-7756-4755-98b1-0e57cd55df0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4072),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("4aab5414-fd87-497f-b958-ab7359d6ce59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4073),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663")
                        },
                        new
                        {
                            Id = new Guid("482fb44a-438e-4de5-8e84-2b5cbe2f43da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4074),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("c8b33383-55e6-43f4-83eb-c12eef950cf1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4075),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("cb2c0e0c-2f6f-4c26-bf66-6cfc85ad56c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4077),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("e02e3b9b-b275-4b55-a2e0-5d6e676192e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4078),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("f5a987bf-1f2b-4536-be32-b4419a950a5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4079),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3")
                        },
                        new
                        {
                            Id = new Guid("2b91ed1d-317f-4657-bbdf-caa433a6d325"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4080),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("4e6d1e91-6230-45a2-a568-43469ab43c92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4082),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("7b34df2b-2210-474b-9aa8-7c2d2c1d6afa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4083),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("e5bd8871-b6a9-423a-97b3-461a56460a25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4084),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("bb2e32de-eb13-48ff-9c43-adb9a86db896"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4086),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("e66c6ca2-1040-4c42-b8d0-d11be7166577"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4087),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("bf89db11-d347-44cd-972c-845ff0f8f1a7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4088),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("f1011bf8-8602-4452-ab87-97e7f02e2301"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4089),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("a26aee29-5d6f-47ee-923a-0ba553bde214"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4090),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("631178c8-169b-4988-b508-8a5b1d1def2c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4092),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("7b78dced-6127-46af-85d4-aad0326e60dc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4093),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6")
                        },
                        new
                        {
                            Id = new Guid("ad197009-f1d5-4ce0-97de-ed2a18b64544"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4094),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("86d14e2e-e607-4697-acb1-09693daa3633"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4095),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("103471cd-445f-49a5-a4c1-3118c8fa91a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4097),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("f5a24d10-f28e-4145-a1bf-20869eacd71d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4098),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("d0bb2d1a-70e7-4ad2-9bdd-ce033f23df47"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4099),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("683b4679-5723-47df-b547-5cf79ef74a69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4100),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("f3ef7941-209a-4fa4-8c5e-0a67ae8e844a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4102),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("fed41993-3426-4db6-97a7-ed8cbced8c11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4103),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("a3f24e33-229a-4264-b035-abb9b2cf6c21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4104),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("40bf6c10-baba-4de0-b04d-99f16a86ae8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4105),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("e51cfed7-70eb-453d-972a-2c3d479123a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4107),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("32c1195e-f8bb-498c-ae45-f2e7caf76996"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4108),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9ec38d97-5e77-4410-90fd-30c179766021")
                        },
                        new
                        {
                            Id = new Guid("89280644-f79c-4ee2-8bd5-ff7da5696d69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4109),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("b3db6d0c-026f-4de8-bdd6-d93e6f37fda9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4110),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("ff129a84-9ea9-4407-8a01-b12fe64c8d1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4112),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("3292ba35-1458-422e-8302-e2024df5e27b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4113),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("721797a7-b81f-4f8d-81f8-167b92290430"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4114),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("ca5cf67a-7e8f-4ccd-b4a7-4bb9133e3350"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4116),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("e49761de-47f7-4b15-8fef-d5dd29cf186a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4117),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("b57bfb53-2296-461c-a311-a0a64c1f8ac9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4118),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("cb7784b2-6c72-4230-92ae-53ed98c44c15"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4119),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("748d59c2-a87f-48ed-bf2d-2c080dfeb6d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4120),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("a69759e6-ba5d-477a-b19b-af97b4b67bd5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4123),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("dc0a5333-69c9-44e5-9c5c-d6c8fd5f38c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4124),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("514218c4-7954-43cd-b892-28d04b77623d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4125),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("33be9927-ecbc-40fb-93b5-e04023677078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4126),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("c3d3c908-40e0-4fb1-b004-f2c40e9d4883"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4127),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("4a4c4ceb-9d39-4747-8d6b-a3a4f30f7d90"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4128),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("9fffd5d1-2a4c-45b0-a5d6-92e85ec3e770"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4129),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("45fad444-2e37-40ac-9d46-4277269c9e8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4131),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("efeb91cb-7aca-468f-984a-3a8396ee7a14"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4133),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("3207d83a-1ad9-4152-b99f-6e6c8ba69797"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4139),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("0d61ebd1-404e-467a-adaf-d906010c65b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4140),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("7ec8f3fa-9735-494f-b053-b86e25a863ee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4141),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("c4c465e0-2a66-4753-86ba-2dbe038d78f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4142),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("d5690bf8-f2ae-471b-8e7c-288458bc5709"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4143),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("2759bd8a-6c1b-4f44-9a8e-ebca67fdcad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4144),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("22823268-a649-45d5-a632-e0b17cf283b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4145),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719")
                        },
                        new
                        {
                            Id = new Guid("2c1020b0-0506-40e3-a206-5980166a08b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4148),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("4aea6ca9-b85a-43b1-b306-f1328da063f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4149),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("e351f53c-ac83-4aa1-b376-990e607811f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4150),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("12abe717-ac4e-486a-a431-88be63d0f95f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4151),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("c08172ff-ee14-4545-aa49-8ff303eaa9a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4152),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("86fe54ec-2a46-4ee9-9757-d288fb595979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4153),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("e1671ffd-98d2-4063-b883-310378ac972a")
                        },
                        new
                        {
                            Id = new Guid("dcaf3e91-d8c9-49e5-8d97-c3cc533b40b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4154),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("749dfd4b-b24e-4464-877e-ace0b2363ad3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4155),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("41cc73dd-2b3a-4128-8fc8-476bed67b96b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4158),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("36e9e311-4543-4a87-a5fd-ca45333b9e4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4159),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("f2f560bd-b3be-42d4-b4d9-c0c094934074"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4160),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("43dfffad-a04e-4a9e-a546-81b0052cb929"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4161),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191")
                        },
                        new
                        {
                            Id = new Guid("eb6c7e45-29c4-4510-be10-bfd41be91db1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4162),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("bf126fca-f88d-4889-8092-dd0e547416ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4163),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("a9c0362a-a6cb-4770-8841-87c2f8dbbe84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4164),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("9e61965a-666c-4174-8192-1df7b86ab8f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4165),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("69a76370-5676-479e-82e8-1a50e6c29d39"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4168),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("8fc2cdb6-5e40-4b50-89b4-ea151f247f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4169),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("9734739f-b35d-4532-941b-044eb725d788"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4170),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("4198539b-5f87-45d0-8f9d-423cfae26ea8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4171),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("f1204fd9-8aa6-45dc-a959-eb5aa34f4743"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4172),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("a4239901-07f7-47fa-9243-7ed072fbdf89"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4173),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("f970522d-2cb5-4e41-ade0-6d999cc5d293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4174),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d")
                        },
                        new
                        {
                            Id = new Guid("cfbc50ec-ee61-4d80-bd4e-7f36226a729d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4175),
                            IsDeleted = false,
                            Name = "Trust Client Acquisition",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("c436e36e-6f76-4be7-b37e-f9ff23f4ef3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4178),
                            IsDeleted = false,
                            Name = "Client Request Processing ",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("1331387c-431d-44dc-a08e-716fd6e0aa15"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4179),
                            IsDeleted = false,
                            Name = "Client Investment Monitoring",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("076795a9-2912-40c5-afbf-711e7bfa4a3f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4180),
                            IsDeleted = false,
                            Name = "Real estate asset management",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("8a0ef644-daca-4a02-9575-505c71f9db7a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4181),
                            IsDeleted = false,
                            Name = "Business Development",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c")
                        },
                        new
                        {
                            Id = new Guid("23d62343-262a-4a6e-80cf-b4026842551a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4182),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("6d3dcb6e-bc2e-41e8-96f9-6b8637bdd96c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4183),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("45908ba7-1a18-4ef5-81fc-eec9bce70a2e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4184),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("30c472d8-c35f-43cf-b872-bcd42bcf8083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4185),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("01a12629-ad0e-4511-b1a9-60fbee176f5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4188),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("cadc35a8-97c2-4920-8df7-25d89836fccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4189),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("1f7f97ed-130d-4d0e-b644-c04bf6d83ded"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4190),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("6f982017-8ea1-4777-8151-3e6207905ebe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4191),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("ea88d994-35b0-4bc7-b43a-95e78d164e44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4192),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("ca1450e1-929f-46e1-bdd8-14f4522a04cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4193),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("a1f474b7-73c5-45e6-acff-2fd336baee9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4194),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("8e3cf3b7-6fd1-4bc5-93c7-e07d32702d6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4195),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("cbd47e98-613d-4b9f-b63c-c3a016829ab6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4198),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0")
                        },
                        new
                        {
                            Id = new Guid("03c8fd5f-548b-4dd7-bb6f-195b042fa291"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4199),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("4b5ac8ea-4eb5-4787-a05a-457438ced316"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4200),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("8d175900-534a-4c24-a69a-f7c016443d3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4201),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("6d854ef4-ec34-47d8-86bf-b1c3c11109a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4202),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("0b6c1c7d-8b63-4d2b-b448-a1dedf21478a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4203),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("1c80be4d-fea7-4dc6-9c6a-f9904a7f35e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4209),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("6131b3d5-e37e-4136-8c9e-aa6881095f48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4210),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13")
                        },
                        new
                        {
                            Id = new Guid("d8761706-8a3a-45b2-b875-197e3f4ea3fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4212),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("0af88089-8f71-4f3f-a583-46590949836c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4214),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("d3c757c7-f8dc-4dc8-9a77-3bb2c2f27fd8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4215),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("26ebaafb-1d78-4d4d-b866-d9036d41a5ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4216),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("ee5a45f9-059d-4543-a54f-dbfd0e6387be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4217),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("d77bda2d-464e-408b-be7a-fae6035d7e48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4218),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("0b9843a9-b6eb-46a7-8fbf-ea56b5c4e310"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4219),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8")
                        },
                        new
                        {
                            Id = new Guid("f1132b72-6c64-4c3e-9418-d3a011a4864f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4220),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("e5c69afa-732c-4e79-8154-fc6afe9065a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4222),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("043cf29c-a15b-4dc8-8233-71001534d154"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4223),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("6b7b22b9-4022-4cd7-8e89-4a1d18fd4c27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4225),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("967fc5a1-cdae-4092-b356-2cc11c2466e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4226),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("ce22abca-dc97-4f8c-a10d-60197c620adf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4227),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a")
                        },
                        new
                        {
                            Id = new Guid("5a36a653-86a1-48ae-98a6-5e39825bbc60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4228),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("19ee70ff-cd80-4546-afcf-b0ae146374ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4229),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("3353c819-b72c-4ae6-a6af-fbcbd95d9f9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4230),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("898531db-9a12-45b9-a2aa-697b839e327d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4233),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("3aa5ab5d-d901-4b9b-b602-08f9812511b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4234),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("c299fa5f-037c-4070-a4d3-41bdbd58edd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4235),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("b6d5f1ac-55d1-498d-b6af-e2749d206f9a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4236),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11")
                        },
                        new
                        {
                            Id = new Guid("f063a524-3b4a-496b-b327-59b470a87f51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4237),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("575742cb-a78e-4501-9476-0a80a1d48710"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4238),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("af3dc32e-0220-452e-aef3-27e6ba9e0632"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4239),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("ca119d17-0b7c-4ed8-b9e3-c8ec78217ce8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4240),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("bcdd6b14-fcbf-405c-a6ce-99e1fb269e1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4243),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497")
                        },
                        new
                        {
                            Id = new Guid("87fc28de-4b5f-44e6-a20e-614da860c9b9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4244),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("176909e8-fcef-4e98-89a5-8f6431a98833"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4245),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("f127b495-53af-4675-94f5-1b632fee7dce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4246),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("6711311e-30ec-4e0a-9a46-8a4475b3fc8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4247),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ff1f471d-9bb6-4d41-a764-67b397b4c6d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4248),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("ffde0d94-d85a-480e-9da6-4eae8776d6ff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4249),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("8d3b33b5-518f-4d9a-ace5-bb60279ca3bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4250),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("310fb9e5-293c-4a4e-8d46-42ae601c0728"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4253),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("c8088ef1-5e3b-4cae-9f05-599d8548388b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4254),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("5a951163-5716-4633-a568-5ac7855f91c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4255),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("5f5e6a45-cd3f-4fc0-a513-c7bd1190688d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4256),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79")
                        },
                        new
                        {
                            Id = new Guid("885af31a-80ef-4c31-9a56-c983601f867e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4257),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("63472eb2-44a9-474c-9138-3c6386cc2442"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4258),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("dbfa488d-b8fb-447e-b278-e47d651abb6d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4259),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("a65da363-f1ff-4a7e-b70c-1182bf20554b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4260),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("8557abb2-da52-4a8b-afba-a06bc179c87a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4263),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("31906fb5-9540-4898-b8e5-fcd1832d067b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4264),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("082cf0fc-471c-4144-acbe-9d1d23c22620"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4265),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("50647190-17cf-4573-ba9b-d86e72b2f980"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4266),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("c671c51b-af73-45d0-b91e-8d6c1c84b7a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4267),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("f0aa30d9-2633-4482-a388-3790911c1ca7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4268),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("0eabb820-932e-4a2a-9af3-22e439d4e55e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4269),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("b157e440-a805-4aec-ad01-e54dba46fe1e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4270),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc")
                        },
                        new
                        {
                            Id = new Guid("6ee98b41-cc79-4cd8-b919-8c138c9a93d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4273),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("671dd944-0339-48ba-8a00-99b053c45378"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4274),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("070b86e7-19d8-4b3c-92f8-954a46089c4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4275),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("9e970535-8dc6-46c6-b0b9-fdffcc7006c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4276),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("42bb458a-158f-4b9c-98a4-001c9ae76baa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4282),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("c6261730-b726-4357-a963-986c2fa3bed6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4283),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("a26803e0-eb73-4d02-b6f8-4fad369fd266"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4284),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("848ff0c4-c088-466f-9a3c-8e0cba1999d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4285),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("42bd18dd-501f-4193-abea-d08b20cd2697"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4288),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("24a205b7-38d6-40e7-914a-7c5f0371a033"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4289),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("2a939603-4f19-4df7-98c5-c367e11da192"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4290),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf")
                        },
                        new
                        {
                            Id = new Guid("fb93a6c2-255b-419c-abd9-eb0d508dc62a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4291),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("9e104560-a0fa-4087-8601-e69a37fad548"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4292),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085")
                        },
                        new
                        {
                            Id = new Guid("ea290ede-a56b-4059-b1dd-04b738242fe9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4293),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("66ae7449-6594-45a5-8604-ee291e817847"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4294),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("9c36eb3b-f391-4df4-960f-e574ad989fae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4295),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("4e87afd9-3675-4c2c-b8d9-da253e212ca5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4298),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("cd4b44e5-c812-4aab-b0f1-38fa2736977b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4299),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("d60df815-4e0c-4d58-aecc-69d7c420412f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4300),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("5807c0fb-3911-4ab2-a0b5-f0e64ba06571"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4301),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("3845edfe-6ced-43f1-99da-32b33fa0d360"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4302),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("6d34d188-f99c-43c1-a291-9eabf51f1f20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4303),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("3dd9c651-9738-4fcb-b60c-8a0247241d1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4304),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("b12df6d7-8817-4900-883d-f4abb0a00b2f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4305),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("aa487c5c-5a91-45f1-9529-64f3ed32934f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4308),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("28e5df18-4080-4cfd-92da-319f49e80eb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4309),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("16bedab4-1eb0-484a-9845-e1581085f146")
                        },
                        new
                        {
                            Id = new Guid("5154f37a-6f3d-4899-bdbc-449b765f0491"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4310),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("ec2291e5-0d9b-49f1-a639-5f0f74ff1ec0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4311),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("6516b4e1-48d9-4bb8-82a3-f4c35f4999cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4312),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("ba846ba1-16d5-4e45-89ff-9eda6cd97dbc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4313),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("03ca775c-7b12-4dad-8d26-39129566aac1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4314),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("1dbea451-eeed-4ed3-8a82-aace3f702fff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4315),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670")
                        },
                        new
                        {
                            Id = new Guid("32bb9687-ede6-4422-b08b-1e08919224b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4319),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("485fe23f-80df-4048-a150-09c26cfbdf0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4320),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("65b8581b-4836-4300-92bc-6b7876332842"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4321),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("e3070af3-57d9-461f-bb55-10f29e8e8eec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4322),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("aa9b64df-a6ea-4d0a-adc0-6268908370f2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4323),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("b6e13a2a-65fa-4169-a63b-ba2dbaa297b4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4324),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64")
                        },
                        new
                        {
                            Id = new Guid("3fe752f6-822f-4413-b8ae-e2050a7d6b17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4325),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("829ee516-6657-4335-8d63-30ba05bb8788"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4326),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("735fa207-f3d0-426a-891b-f7212ac59d49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4329),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("0401a95f-2818-4bdd-a509-820a869dbadb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4330),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("b00c77d5-4e57-4f03-a91e-7b2595d38ea6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4331),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("5a1bb4e7-ddef-4ebd-8850-f8036559efe8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4332),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("18772e97-73a1-4115-84f3-0e82d2b59212"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4333),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("db8ad072-a511-4e4a-bee5-fd020dea7458"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4334),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("ecf2914c-7294-4dfa-96bb-7e710cc9cfc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4335),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("12875f3e-6bd4-4ce4-beb9-6a44871a4967"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4337),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("16932a08-caba-4b22-b0cc-f9c1580dacd0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4339),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2")
                        },
                        new
                        {
                            Id = new Guid("4f9a613d-c4b2-4df2-81e2-f7d829d13d59"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4340),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("7ce5dbaa-a4fb-4322-b775-712343579539"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4341),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("b47ea455-8f10-4a97-b17d-5d9e0add6254"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4342),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("f718bf66-7a85-4f5e-b60e-db0a9817c359"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4343),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("8c638dfd-7b1a-4437-822f-ab14b79bb599"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4345),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("4b480b1f-649c-4aa1-8754-58c1ef7ab6f5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4346),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("ab2a0103-1a1d-4821-863f-d96240c4204b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4347),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e")
                        },
                        new
                        {
                            Id = new Guid("ce16ceab-ec9b-4469-8353-32667cca699e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4349),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("7e30108e-a3ae-49fd-a1d8-6117d8df606e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4350),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("9484eb28-0460-49c6-90c6-c2d21ab6e094"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4356),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("7e75140a-1578-41ce-b697-4c176282436c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4357),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("c8a55da9-4335-4c3c-a52a-16ed892152bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4358),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("f04ff035-84a4-451b-8a7a-8c08547b3b6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4359),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("a017df94-6124-4fed-a9e8-54e9107262e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4360),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d")
                        },
                        new
                        {
                            Id = new Guid("88f8c50c-a992-49cf-9b9d-502a2feb7ec2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4361),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("7d679175-7663-4382-af92-8fd439f729d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4364),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("f7bfeb0a-1025-4c53-83e0-7930fba0d788"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4365),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("a6ec5335-e1dd-4d41-aa72-eec7e3813601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4366),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("3e2a7056-70ce-47dc-b82e-977fe5f60755"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4367),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("689fdb3c-aa7a-49d9-a567-956ba3ae8f75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4368),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("6b591a0c-2560-4bf2-94f7-7068104e47f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4369),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("6d67e1fd-9831-42ce-b0c5-a74e28dd7266"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4371),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("e23bb2a5-2c19-4f2b-8f4a-e381e8c824d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4372),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("fc10394d-b894-4fde-96a9-6f14ee2df608"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4374),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("0205434d-c9cc-4807-9270-b2e50822dd75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4376),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("23e56b52-8a7f-4526-8604-c491cf192a36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4377),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("a4e4d309-8a28-46e0-8d52-08e7d71d7048"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4378),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5")
                        },
                        new
                        {
                            Id = new Guid("6bd11753-3fae-48b6-9f6a-ee9f04901ee8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4379),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("1ded8b91-b7a9-4203-91a4-7856516ff26a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4380),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("a75dd7eb-b077-42f9-8485-f30733d7496d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4381),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("872b97d5-860f-44da-9506-e77f4f164900"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4382),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("343b295a-2fa5-4f6b-8e5d-b7d81146531f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4385),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("bfc05a73-4ce3-4f05-9d09-a6b0f6fe1c8d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4386),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32")
                        },
                        new
                        {
                            Id = new Guid("49ce4856-f18c-485b-b391-0a2f2b7da133"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4387),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("5a72d553-e0bf-4fa6-b1ac-7c27182cd62e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4388),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("d92edddf-f6dc-40ed-b647-ac36423ca397"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4389),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("6cd41a07-09b2-44e0-b32a-3796a837860a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4390),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("15f408d0-27a1-475b-9cbe-c2be8ea4f7f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4391),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("046243d2-2150-4990-92ca-bd741992ca28"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4392),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("9f4432a0-9002-4553-997d-633869423d79")
                        },
                        new
                        {
                            Id = new Guid("5fc7b6e8-1dfe-4d19-8ce9-7cbe4edfe1ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4395),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("fc148498-b4e6-46df-95bd-183a09967749"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4396),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("7697b31e-daaf-43af-a92a-10b7c420c142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4397),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("69d0d423-d35d-4514-b49a-e220cc0e58a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4398),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("e3ed5c7d-7bc5-4b57-a935-58da03f2f66b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4399),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("2892eb90-a325-4a76-b741-a6b05e8e57de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4400),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("dcc16a4a-78c5-4c02-9daa-aa5b528fe155"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4401),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe")
                        },
                        new
                        {
                            Id = new Guid("15a2edcf-ac53-4f99-b892-0f1855435352"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4402),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("debdcdc8-9cdb-461a-92ab-41e7a6d9d52c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4405),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("8e8a1420-9037-4c17-bc16-6d7c8360ff28"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4406),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("f2781e3c-fb4a-4a5c-ab37-49121e83a1c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4407),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("bee1fc9e-0a9d-466c-b414-9f09a4f02bfe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4408),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("e4789074-ab43-463f-b18f-42606e28db63")
                        },
                        new
                        {
                            Id = new Guid("7402b85b-d904-4c67-8c33-3ba93d1126a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4409),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("8b1dbd22-0ca0-4dd9-884e-d29697292bdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4410),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("bce40177-1067-4801-a7ac-ce8db2308e17"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4411),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("bb8a561f-96f6-454a-9984-9bb7174442a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4412),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("15453e0b-c12c-4681-a598-d536acf63cd5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4415),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("ad75d8e4-7c9c-46de-bf2a-cb237cad9a1d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4416),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d")
                        },
                        new
                        {
                            Id = new Guid("3eec396b-dfe9-49b8-9131-c0bdaf751991"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4417),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("31c5cf7a-5bcf-408e-9a74-b33b0c74057f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4418),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("5b65ef80-cc43-46d1-aec2-9c910da9be1f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4419),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("a608ac2d-652e-4ce5-8274-33e1a0993fb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4420),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("53e07b08-55ae-4a11-a9de-c0a0aba0b477"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4421),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("e3a7888b-3e13-4cf4-bb96-3a9f623cd53e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4422),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("58c5c057-5c4a-427e-b952-bc9ca187b075"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4430),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("b8541a4a-b4b1-421a-b4ec-08f1944eddc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4431),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("acff5cef-54f2-406d-aef2-3d9a0ad4c76a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4432),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("9f41441f-b423-4f86-962d-7669196d138c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4433),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("849f681d-767f-4979-bcca-86fa40fa4cd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4434),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd")
                        },
                        new
                        {
                            Id = new Guid("e5dc61bb-a475-4138-870b-a584e7bc4202"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4435),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("a211407c-cd05-46c6-99be-52597f47e7ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4436),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("170187fe-e4d7-4f6f-a508-a3b32c323122"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4437),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("e6f43579-52a9-4c83-9bde-56e2a8d88a3a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4440),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("61091d05-ffb2-4fa6-8b8c-94d3dbe450c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4441),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("97947797-a72a-4166-866e-16c7de579dd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4442),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("c597e8bf-a7eb-43b6-8fc6-e732e90767c6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4443),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819")
                        },
                        new
                        {
                            Id = new Guid("6fa306c5-3706-48e3-913b-ae91760935a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4444),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("c1a50caa-95c1-48fc-9832-4f6182724d05"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4445),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("60045cd9-c30c-49f9-affe-12af7372481c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4446),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("c734a31e-14b2-432c-9fe8-6f4d8f3db5c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4447),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("ccc4eea3-1547-49e8-83f8-16cf1ba21af6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4449),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("02eb99da-28a6-4c29-a6c5-1e5d6d02ea7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4450),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("21fa87f8-e950-4d31-9f66-40b28e704ec4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4451),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("1df86816-2842-4941-8710-36822d6240e8")
                        },
                        new
                        {
                            Id = new Guid("b8815b17-fb35-4f5f-b44b-d6a17bee9241"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4452),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("d8491389-89d5-416e-b3d3-a4c131cad471"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4454),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("da73f434-1d18-42aa-b97b-58687dd50cad"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4455),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("c803128f-da87-4eb4-b000-cf0eb955a860"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4456),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("83f88802-4f97-4cd8-b343-2b7578c06bce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4457),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("7dd8529f-e122-4434-9db3-bf92e10ef6a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4459),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("a1e6cca0-b9f3-4a24-a8ea-790d33c7a48e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4460),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("c95a89bf-c842-457c-a1a9-0a06b5c5a8a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4461),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("6a80116f-8284-4f9e-ae84-148482831f44"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4462),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("76d9b6bf-02ef-4032-bac7-8a7001726932"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4463),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("9f069568-7b15-400a-8660-4e9fc74289db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4464),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("cb45f31a-6ffb-47fc-9a62-4b53457e5978"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4465),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("94fbebba-5137-4f5c-9cc7-6f40d00b97df"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4466),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756")
                        },
                        new
                        {
                            Id = new Guid("791c9eb7-7bdf-4ac8-8e3b-2008b18835a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4469),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("90ec48bf-0bbb-44d4-bc9e-fbebd0bbe52f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4470),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("9b6e87c8-7e1d-476e-bf9e-6534aca0c729"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4471),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("9fc384f8-b015-420a-8fb2-684d0295db3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4472),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("8e7e80f4-4b2e-4c65-8ce7-0c1de82f57ab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4473),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("3897bbd1-8523-4bfe-ac33-34b12b822fbb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4474),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9")
                        },
                        new
                        {
                            Id = new Guid("bb47f18a-2493-446f-8542-913443889549"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4476),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("3d754f09-472f-48b2-9899-36448e66413e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4477),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("e1ad7320-722b-46a3-a9ec-3040735d1c55"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4479),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("9bcbb7d9-3577-40c8-b969-b984acc9ae92"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4480),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("4103f97e-040d-4cbf-8297-337c98093491"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4481),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("31ea0751-a62f-4c11-a849-861a1d02ea8b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4482),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75")
                        },
                        new
                        {
                            Id = new Guid("a05d32ed-52c2-495d-a2aa-3d7c099a4249"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4483),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("cd3b72f0-e47d-4134-8e12-d9a1a03476d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4484),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("77804bbe-eb7e-421a-ab56-cb5347c8f178"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4485),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("a1a07129-64e9-46f8-8abf-9e776d0b7ace"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4486),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("7af3e2a2-eca4-4921-b67d-e8f0cf9d7507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4488),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f81d61c4-923f-4643-ac56-e9bb1038dd96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4489),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a")
                        },
                        new
                        {
                            Id = new Guid("f2e31a26-b8d7-486b-b535-f6b75ee4eb84"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4490),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("093e8363-7637-49d3-84cd-faff4c9ec133"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4491),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("478581ec-80f0-446c-a99b-6b49c118420e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4492),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("9a14c219-c8f6-4cc8-b273-3858a4dd9737"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4499),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("7aa62860-fd06-421b-88f6-e8f063316eb7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4501),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("7265b09c-b6a8-421c-a7ce-6b6db800402f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4502),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("642832f9-279b-45b4-a477-c785cfa7d3db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4504),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("f7e84562-6b08-4528-8436-ddd6ed2b8b06"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4505),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("7aa68c6a-2307-4e07-9935-14793a641112"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4506),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("c479688f-edad-4282-88c7-4c14167b5871"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4507),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("6f46b302-bb8c-425a-a287-6ee0a28c6c11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4509),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2")
                        },
                        new
                        {
                            Id = new Guid("abea270b-1e8d-47c5-8368-82c0be015bff"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4510),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("ae22ebd8-0301-4f6d-8387-4810ec77b072"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4511),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("eb2d0850-e9a1-4f3f-9ee5-34711cc64b1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4512),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("58e4b5e8-6c26-4e7b-b8e4-ccf280c1abdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4514),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("0992674b-11cc-46ae-90d2-454941038f93"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4515),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("be982fec-cee5-4e5d-931b-d4362aed20e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4516),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("ffa2e958-518d-4347-9cf7-0bb48e1e85c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4517),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1")
                        },
                        new
                        {
                            Id = new Guid("79f0cb4e-64e9-4847-9620-009e69fe57f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4518),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("3c30bfe6-b439-4f5f-bb50-39b5d5c9ab36"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4519),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("488ffac2-f71d-4a23-abee-c2dbc079a91d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4520),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("9c1bb945-3b06-448a-b952-65e2c2b567a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4521),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("f8e5db78-12d9-44f9-9d92-6d50fafafa31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4524),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c")
                        },
                        new
                        {
                            Id = new Guid("686e15fc-cf71-4089-bbd3-852b69aec257"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4525),
                            IsDeleted = false,
                            Name = "Develop Marketing and Corporate Communication (external and internal)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("93876308-2205-4961-876a-e97aa1a03720"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4526),
                            IsDeleted = false,
                            Name = "Production of Branded Materials",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("bcee6c04-8c0b-42e8-9d03-50160db071d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4527),
                            IsDeleted = false,
                            Name = "Web Development /Update (this is the process of developing or updating web pages)",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("4ee234a6-6f78-4d93-9e21-9165ec42aec3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4528),
                            IsDeleted = false,
                            Name = "CSR Evaluation & Sponsorshp Selection Process",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c")
                        },
                        new
                        {
                            Id = new Guid("c916ccdd-d47a-4a39-9ae4-00be5537ef83"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4529),
                            IsDeleted = false,
                            Name = "Budget and Planning",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("d40e9763-f1fe-4b8b-a117-538ae5e0b838"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4530),
                            IsDeleted = false,
                            Name = "Bank Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("31bfd842-e078-4655-88a9-bbe82b148fdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4531),
                            IsDeleted = false,
                            Name = "Create Asset Master Data",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("0dc16de4-5301-4eb3-94ee-f4e81ed14288"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4533),
                            IsDeleted = false,
                            Name = "Asset Disposal",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("9fd59c85-5d16-4a96-bdca-6a697095304b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4534),
                            IsDeleted = false,
                            Name = "Invoicing",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("2a3af957-6994-48f8-8232-6444b31389fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4535),
                            IsDeleted = false,
                            Name = "Process Payments",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("71719cfd-bf43-43e6-a1bd-e49624638c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4536),
                            IsDeleted = false,
                            Name = "Cash Advance and Cash Advance Retirement",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("3f30c928-6f52-412b-8169-4590f1b93cea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4537),
                            IsDeleted = false,
                            Name = "Reimbursements",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("c9d9e6d8-8ac2-445f-b561-c5d2a908b506"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4538),
                            IsDeleted = false,
                            Name = "Investor Notes Reconciliation",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec")
                        },
                        new
                        {
                            Id = new Guid("2942cc62-c6e3-461d-9c05-78be286b2b4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4539),
                            IsDeleted = false,
                            Name = "STAFF DISCIPLINARY ISSUES",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("411b691d-5ff6-49f6-9a38-857554fb345c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4540),
                            IsDeleted = false,
                            Name = "TOTAL REWARDS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("22e92224-1efd-4b2a-86ab-b0cf962e0540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4543),
                            IsDeleted = false,
                            Name = "STAFF FILE",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("213ec70a-7fb5-44c8-af5c-2afdf692f9f6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4544),
                            IsDeleted = false,
                            Name = "PERFORMANCE APPRAISAL",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("22d7087b-a092-4cc1-8ab5-302b2f93ff04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4545),
                            IsDeleted = false,
                            Name = "HMO MANAGEMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("05f2ebe3-4596-4803-ade0-756855514663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4546),
                            IsDeleted = false,
                            Name = "TALENT ACQUISITION AND ORGANIZATIONAL DEVELOPMENT",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("2b8bc36a-8709-4cc9-a9d0-a83c64929267"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4547),
                            IsDeleted = false,
                            Name = "STATUTORY DEDUCTIONS",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a")
                        },
                        new
                        {
                            Id = new Guid("56f9f824-8169-4bce-bb59-b65ffbc90601"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4548),
                            IsDeleted = false,
                            Name = "Staff and Visitors Identification",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("552255bc-aeca-411e-8f2b-37139af58f30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4549),
                            IsDeleted = false,
                            Name = "Staff Sign-in/attendance management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("38d28575-49a1-4568-8a58-3a1ce8eda931"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4550),
                            IsDeleted = false,
                            Name = "Keys Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("357d9be4-f00e-4d85-96de-f01f0455baf9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4552),
                            IsDeleted = false,
                            Name = "Scrutiny of all entrants",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("a6d18f88-79d8-48fa-954d-175fb411e424"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4554),
                            IsDeleted = false,
                            Name = "Cold Room Management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("a7cae752-aa0a-4789-b73e-d8391de5e832"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4555),
                            IsDeleted = false,
                            Name = "Dispensed goods Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("4c416864-6217-4bc7-abb0-953dc6d1743b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4556),
                            IsDeleted = false,
                            Name = "Goods received register",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("fe5d284c-d602-42be-a08b-20f8b0e17724"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4557),
                            IsDeleted = false,
                            Name = "Community Relationships and Development",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("ec29e381-24f7-4f8f-95f4-7dce1394fb6a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4558),
                            IsDeleted = false,
                            Name = "Procurement of Supplies and Inventory Update",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("06716de4-df2c-4ed5-94f2-853a0eba01e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4559),
                            IsDeleted = false,
                            Name = "Store inventory management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("32f31007-49ad-4837-95ec-4e366560f0a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4560),
                            IsDeleted = false,
                            Name = "Requisition Invoice",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("50be3ada-8104-487c-bca7-81304d96b870"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4562),
                            IsDeleted = false,
                            Name = "Store key management",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72")
                        },
                        new
                        {
                            Id = new Guid("d7b2a606-169c-45cb-bf63-b3c54501382b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4564),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("0a1f5062-23ec-4fc4-85d0-9f4cdd84e4ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4565),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("7bab13c9-c7db-4a10-9929-eaec447be0cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4573),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("70d568cb-f690-43f0-a26c-cc38cafa9663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4574),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("0cf6d491-8eef-42d8-bf6f-5492db52c9fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4575),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("d7493e2f-cc2a-4dda-b439-5a55b9351cdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4576),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("1c3242bf-8634-45e9-913e-816575039b91"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4577),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("f7f011a6-31a5-4952-974d-25ad14c77dfd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4580),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("c277dcab-d6ed-43c2-ac18-6e750b061979"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4581),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("60196ddb-9aac-4d4b-be72-4429f3b25b16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4582),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("c16d831c-1d66-482e-aad2-bd511930c7a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4583),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("2adaa5b9-5af2-4347-92c3-234b2e811fab"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4584),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("a557fe73-08b4-483f-9fa9-f361fbe34403"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4585),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859")
                        },
                        new
                        {
                            Id = new Guid("75bd134a-a67a-4e66-a974-bcfd740d39d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4586),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("26087dea-1327-4be6-b587-ad6bd55130cf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4587),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("ee4a7249-09f2-4404-ac4b-123b2f1ab590"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4590),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("4a1d0f43-bb13-40a3-9f28-2f018cc6ad0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4591),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("bef45dc5-6045-430b-93fa-38d54fd1e78c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4592),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("cb42e3b2-de3d-4dea-8f02-d0b547c9e07c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4593),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("7d22672e-a552-4944-a418-d7678717c193")
                        },
                        new
                        {
                            Id = new Guid("48454376-3409-4833-b4b7-3df4c29839a2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4594),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("71a82343-9f23-4f48-a011-2fbaed6efa33"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4595),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("2ccf24d2-69fd-49b4-96e5-3c3cc916ae10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4596),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("29ec08af-df33-4be9-817b-02285708a462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4597),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("c6822fbf-bbd1-4de6-9ab5-4f23bfb7816a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4599),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("060618c1-4207-4caf-9f14-2bd224c15671"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4600),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27")
                        },
                        new
                        {
                            Id = new Guid("1221c0d8-ffae-4b02-bed8-528fadfc3f6b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4601),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("c49aa7a3-0939-4b08-a69f-50cf619a9620"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4602),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("817877ca-c8df-4af3-85f9-dfb5b83613fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4603),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("e9075116-e008-4fee-900a-4d70fefba14b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4604),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("7f6d2317-3f7e-41d7-9afb-4e9dde3afd6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4605),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("785e8c9e-ff23-424d-ade3-e1c172151965"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4606),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0")
                        },
                        new
                        {
                            Id = new Guid("a8e164cc-785c-435e-be68-0cb64e2d921e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4609),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("c065839f-6778-4f8e-8d3c-ebb54a4f7191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4610),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("ebcf6f26-acb6-4fab-ac5b-f63573c61f96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4611),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("dc92309e-0976-43a3-b1bd-b8af1735217d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4612),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("eacf3130-4563-4151-86e6-9c7fcf6f6430"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4613),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("ffaf7e51-a357-4433-ad51-64a4ed47e5f4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4614),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("ffabcc23-aed0-40cb-84b0-41acbaeea865"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4615),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("f00eaa8e-903c-449d-9ed9-ee4096e1cffc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4616),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("862c9bad-7765-49dd-86fa-2cb3bed3dc07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4619),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("6c06881a-3512-460a-8222-dc0c571633bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4620),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("54a6c5d7-2b90-46d4-9d78-ea84f2a664a5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4621),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538")
                        },
                        new
                        {
                            Id = new Guid("2941e59f-40a7-4e58-b2e8-e7c7d9189e64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4622),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("83ed8efd-6f22-409f-8e66-301f68973391"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4623),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("8fe37e15-d9e7-4aec-b2de-aa7cc7a2e215"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4624),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("4a24fc8a-711c-4e52-bbf0-c2ffca53ede6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4625),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("ca25dc70-d194-4dfb-99b9-2e0346435ba1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4626),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("151044f1-0fb0-40b7-83eb-ab347fe9ec66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4629),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("46c955d6-869c-4d0f-a0d5-d813212e3242"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4630),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879")
                        },
                        new
                        {
                            Id = new Guid("c5242eba-ec13-4946-82c9-333912e60c61"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4631),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("3ce8cfe7-4dda-4bfe-a380-5f7686ad089e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4632),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("2907de26-d5ca-4645-ab84-15879028f8bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4633),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("05fac351-e9ec-4fb0-b72c-fd1307e9aa5f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4634),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("6f91f6fd-9011-4ea8-b501-4e1d6b0e9cb8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4635),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51")
                        },
                        new
                        {
                            Id = new Guid("3632e43a-6c47-4499-ac91-1eef59a41fd7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4636),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("cf454629-95e2-4ddf-81a6-c3c489a05d5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4638),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("e44b9fad-d9f0-4601-9a5c-08559b002c2a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4644),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("852690bb-1351-46c7-8c83-9bff507a98a1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4645),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("ef307576-b145-43f9-af85-c4372aa5dd19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4646),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("23dc9e69-5e09-4d3d-a9ab-560e3b3f3ae0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4647),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("c568ab33-87b6-4a89-b082-70962a6a5219"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4648),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("df03110d-b9f2-4c69-ac84-3a1616c3abce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4649),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("5f4bf169-0722-42c8-8460-2c5e530a3702"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4650),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("88741e8c-17cd-46c9-8791-9f3c8bf09ec1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4653),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("d3eb8142-d4f3-409b-8055-4f94d51656e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4654),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("ca3c1237-e565-4215-875d-f274e7bc0767"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4655),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("abbeb25d-e3fd-44d7-8a53-b28c49e138c4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4656),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22")
                        },
                        new
                        {
                            Id = new Guid("bddb2369-de51-4f50-bd62-cc85197a2fbf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4657),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("999a0ffd-1a36-4e21-acd3-c065b05f506d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4658),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("7f1a950e-c647-469f-a47b-c93f53b39bf6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4659),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("521c9fa7-8a76-4585-b21b-81ed1bad8bc4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4660),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("1f55cda8-bc7a-487d-85cd-1eb2b1aea5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4662),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("52607a01-e88a-4064-aa63-04fb9c1668ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4663),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf")
                        },
                        new
                        {
                            Id = new Guid("d6d7ab7c-9b71-4a8c-a570-53714a6e18d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4664),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("496b31cd-aa2b-470d-96ed-c53d941305b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4665),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("faa870e6-e5ed-4426-9bb9-5ae0c847d201"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4667),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("6774a1e3-2892-4854-993b-30a684df46cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4668),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("d7c02e0f-b4fa-414d-8f6f-27966019f8d1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4669),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("c46b5166-f13c-4744-9f81-567327fea16f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4670),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be")
                        },
                        new
                        {
                            Id = new Guid("159dd901-1359-45e1-8278-bf3f0656c30f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4672),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("30f650a2-f0b6-429a-9bce-f3b1c09c7216"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4673),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("a1b80840-6421-40c9-a376-9b4e048ad306"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4674),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("ca9ae0ae-8b24-487f-a79a-07aa224d9e4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4675),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("73a932f0-287c-45f9-9b98-37cfd9124924"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4676),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("3147910c-7c74-4f20-a2ed-0407e6fabe0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4677),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25")
                        },
                        new
                        {
                            Id = new Guid("a04644ac-e274-49f7-a2f7-8dbdf3c41a0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4678),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("60af8bc9-dd65-4fa7-be6f-79edc31fa944"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4679),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("bc2f18bc-8cc0-40ac-83c2-4535453c3479"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4682),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("422939a2-57e1-4a87-a84e-3174dc912750"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4683),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("9597319c-ddfa-43c2-988b-1e7eae8ca9cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4684),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("659c30df-1006-4f39-ae96-c095a1558cae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4685),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("be0e089c-41db-4d2c-9b00-71d8a25fba1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4686),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("05968f1d-5ee1-4fd2-b372-dad804c8f0b0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4687),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("489b86f7-c67b-4780-bee7-a95e9471c982"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4688),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("862f6cc8-7617-43e1-8096-b27bd463e126"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4689),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("9499fe86-93bb-44a3-bdbc-104ea6e54089"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4691),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7")
                        },
                        new
                        {
                            Id = new Guid("e9947549-4c6b-4d45-8192-ab1e2cd261fa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4692),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("7004e3db-3698-4bb1-b1e7-cbd9d2109739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4693),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("3babdacf-990a-42f9-a503-bf55d493387f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4695),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("5b043655-e023-4e80-b32e-98b4cc78b887"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4696),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("738fa68f-2056-40dd-ac99-d27f15a88f7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4697),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("e93fb30a-d690-45db-8c3c-30151a6da38e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4698),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("f0ff6c6b-64d9-4727-8b33-e5d2b6c36886"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4699),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970")
                        },
                        new
                        {
                            Id = new Guid("00d5c186-5955-49e7-b84b-ec16c33063ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4701),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("6c35883a-5cbb-4e64-b5b5-887dcd8c5de5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4702),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("a0cd2ec2-04e2-4c84-990e-eeed2d73b47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4703),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("edb008e3-ea33-4680-a91a-1f60b50d1a96"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4704),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("585cdbb7-69f8-4002-956c-806741bd0af0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4705),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b")
                        },
                        new
                        {
                            Id = new Guid("b93f8338-ac09-43d6-a007-e7cfca9d35d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4706),
                            IsDeleted = false,
                            Name = "Risk event reporting on the oprisk manager",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("e34fda00-8139-4077-98c3-01c96eb5393b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4713),
                            IsDeleted = false,
                            Name = "Loss Data Collection",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("fee301d4-9be7-4280-ae46-1c93243257ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4714),
                            IsDeleted = false,
                            Name = "MRC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("3f3162a3-cffd-4786-aea6-b4a62708ee73"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4716),
                            IsDeleted = false,
                            Name = "RCSA Process",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d27b23eb-6cc1-4315-8b70-fa8472a78b19"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4718),
                            IsDeleted = false,
                            Name = "ALCO Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("f8e530b6-1b03-4a43-9f62-932ba545886d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4719),
                            IsDeleted = false,
                            Name = "Risk Management Disclosures",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("90f4b9af-4461-47ce-bee9-1f94a800c5c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4720),
                            IsDeleted = false,
                            Name = "BARC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("18b6a643-dfa8-44b5-8a5f-662d64c3e7ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4721),
                            IsDeleted = false,
                            Name = "MFIC Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("d3be30af-c034-45a0-8b67-574975d75e64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4722),
                            IsDeleted = false,
                            Name = "Fianacial Risk Review and Reporting",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("7f6468fd-7129-47f5-a1f4-9781bf461157"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4723),
                            IsDeleted = false,
                            Name = "Pledge Review and Approval",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("2310c711-760a-4dc4-8077-ec39d640ea62"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4724),
                            IsDeleted = false,
                            Name = "New Product Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("c5c56f34-778c-488f-89ec-a6be8000d370"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4726),
                            IsDeleted = false,
                            Name = "Counterparty Review and Assessment",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("9df56f95-8ebe-4567-857c-9c2f64c8f027"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4727),
                            IsDeleted = false,
                            Name = "Business Continuity Management Tests",
                            UnitId = new Guid("003ed424-1724-44b1-bcb1-924abb94e338")
                        },
                        new
                        {
                            Id = new Guid("23235bb1-971c-4345-8af3-8901b32ab75f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4728),
                            IsDeleted = false,
                            Name = "Corporate strategy development",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("ec124d41-36c9-451b-9a0f-046c4c08d9a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4729),
                            IsDeleted = false,
                            Name = "Business strategy articulataion",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("da1a6b33-d512-4516-8a6c-928fac5f9823"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4731),
                            IsDeleted = false,
                            Name = "Strategy revision",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("3710fbda-defb-4e26-adaf-58eb730c0139"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4732),
                            IsDeleted = false,
                            Name = "Business strategy monitoring",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("cfca9100-c121-48d1-9fb6-a3d155fe8c22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4733),
                            IsDeleted = false,
                            Name = "Quarterly performance review session",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("7174c209-f428-437a-a853-4eb459bef9d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4734),
                            IsDeleted = false,
                            Name = "Report preparation",
                            UnitId = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033")
                        },
                        new
                        {
                            Id = new Guid("6bbb5ab1-f080-4fed-b4d1-6c7fbfe47686"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4736),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("95f96bf9-b94c-486e-86ad-b25ff1d3c293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4737),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("175e7ec1-9e6f-48cb-8205-be0f7aaf61d9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4738),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("3350e243-c906-4714-839e-54f42ecc1fdc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4739),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("93624ac9-6aaa-4265-93c8-585966ddfa49"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4740),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("ef6ac41f-9720-4ae7-858a-6660091a87cc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4741),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("7c940a22-a5ab-47c7-a8a7-07d67bfe0ea9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4742),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2")
                        },
                        new
                        {
                            Id = new Guid("d7d5f628-d23d-4f3a-af16-cfab937c6850"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4743),
                            IsDeleted = false,
                            Name = "Mutual Funds Account Creation",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("5a3cc1d7-cbad-4087-a091-a60b104e849e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4746),
                            IsDeleted = false,
                            Name = "Data Update",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("d004f3a0-3db9-4470-b640-7bc0da991682"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4747),
                            IsDeleted = false,
                            Name = "Embassy Letter",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("9b152cde-aad1-4059-ba0d-503487feddc2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4748),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("99320498-7747-433a-85c7-e98d135c087e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4749),
                            IsDeleted = false,
                            Name = "Processing Client Requests, complaints and enquiries (Walk-in, phone and emails)",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("8d9e0c07-b2fd-45c9-816c-4c85e64c0c80"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4750),
                            IsDeleted = false,
                            Name = "Client Communications",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("296b980b-19cd-4ee9-822f-b178a20da275"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4751),
                            IsDeleted = false,
                            Name = "Root Cause Analysis",
                            UnitId = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5")
                        },
                        new
                        {
                            Id = new Guid("5ba20fe3-c3dd-4224-ab7f-9f273d0f7a9e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4752),
                            IsDeleted = false,
                            Name = "Contract drafting and reviews",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("15f12c25-5dad-4d72-8d20-4b5eddde1dbb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4753),
                            IsDeleted = false,
                            Name = "Drafting Embassy letters ",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("680b8731-4c7e-48d0-bc69-de686f1ebd51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4756),
                            IsDeleted = false,
                            Name = "Legal Advisory",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("f5ddde37-82bd-488c-bdff-35b49a830ba4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4756),
                            IsDeleted = false,
                            Name = "Regulatory filings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("84a8f2fd-a71b-4e4a-9d3f-c4f20198c9de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4758),
                            IsDeleted = false,
                            Name = "Coordination of Boarding and Committee Meetings",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("80086680-0f38-481c-9c1f-634cc9859492"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4759),
                            IsDeleted = false,
                            Name = "Drafting of Minutes and other post meeting documents/Correspondence",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("526cd9c6-c536-4b02-8d70-4fae049ec105"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4760),
                            IsDeleted = false,
                            Name = "General secretarial activities",
                            UnitId = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739")
                        },
                        new
                        {
                            Id = new Guid("e771201a-644e-460d-8594-ffae448d8a8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4761),
                            IsDeleted = false,
                            Name = "Account Opening",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("a8fc8979-82d5-4124-812b-29f2b81d8563"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4762),
                            IsDeleted = false,
                            Name = "Filing of Regulatory Returns",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("066ca5b9-bfda-4c89-9298-2d6ccee60392"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4763),
                            IsDeleted = false,
                            Name = "Due Diligence on Clients and Vendors",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("a9b9c181-0b6f-48fe-b04d-2cd91c54cb5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4765),
                            IsDeleted = false,
                            Name = "SEC Registration of Sponsored individuals/Transfers and Applications",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("3774b0b0-25b3-4af1-baab-4f7067e62531"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4766),
                            IsDeleted = false,
                            Name = "Sanction Sceening on clients",
                            UnitId = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea")
                        },
                        new
                        {
                            Id = new Guid("d9b9e600-a0d3-4cf7-b726-0274d838df69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4767),
                            IsDeleted = false,
                            Name = "Stock & Institution creation, Issuer Creation, Mutual fund Creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("7a7ab5e3-f084-4453-9fc1-b615cbf2117a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4768),
                            IsDeleted = false,
                            Name = "Portfolio CSCS creation",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("575376d7-cca5-416b-b917-139ec3ffe7a6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4769),
                            IsDeleted = false,
                            Name = "Bank statement upload on AMS and  Fund injection processing on Deluxe",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("9ab5adf6-af2f-4b51-9fab-80b5272fc29d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4770),
                            IsDeleted = false,
                            Name = "Foreign exchnage upload. Price and rates upload (Bloomberg prices, FMDQ, NGX, FMAN, NASD)",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("aaa2ef04-1797-4c86-9e25-9219d5dfc85f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4771),
                            IsDeleted = false,
                            Name = "Portfolio, Transactional client, Scheme  withdrwals",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("f5e6f0bc-d261-400b-a465-9bf52929f051"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4773),
                            IsDeleted = false,
                            Name = "Accounting unit postings / adjsutements",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("1f763821-754e-46d3-b6a4-6ad59a3ff6d4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4775),
                            IsDeleted = false,
                            Name = "Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("a1fe2a97-658a-4b1b-b819-39ca425c9dba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4776),
                            IsDeleted = false,
                            Name = "Portfolio creation, System bank account creation, Bank account mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("27229029-dc72-4319-b9c4-539bc9038519"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4777),
                            IsDeleted = false,
                            Name = "RM creation and mapping ",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("3930b574-a55b-4fe2-94f7-737a948406a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4778),
                            IsDeleted = false,
                            Name = "Fee set up and fee mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("b2eda84d-aee0-428f-a8a2-3a188d174959"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4784),
                            IsDeleted = false,
                            Name = "Client creation and client mapping",
                            UnitId = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a")
                        },
                        new
                        {
                            Id = new Guid("998e1444-45de-4512-ba2e-a29ec93afac1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4785),
                            IsDeleted = false,
                            Name = "Receipt of client instruction",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("c7c01029-1896-4b5c-8b2b-46fc773bdd66"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4786),
                            IsDeleted = false,
                            Name = "Receipt of share certificates and verification documents",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("a7ddf6cb-b17a-435a-9c58-43e4ec214f5d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4787),
                            IsDeleted = false,
                            Name = "Inter-Member transfer request",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("37482307-e137-4e55-b3c9-f7f861967ec2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4789),
                            IsDeleted = false,
                            Name = "Unverified returned share certificates",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("f55ac3cc-8c20-45ba-a63c-0dbf803622da"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4790),
                            IsDeleted = false,
                            Name = "Corporate Action",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("1add727b-4ced-4542-a3f9-3b9355d8743c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4791),
                            IsDeleted = false,
                            Name = "Dividend Settlement",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("0edcd4ef-8a0a-48b0-aab1-004d244a2ae6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4792),
                            IsDeleted = false,
                            Name = "Portfolio stock reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("99c7506f-7bc1-4ad6-b19c-a3235352e290"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4794),
                            IsDeleted = false,
                            Name = "Transfer of portfolio to another party (broker)/Portfolio stock withdrawal",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("fb205876-2724-4dd4-af3d-226e07c35423"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4795),
                            IsDeleted = false,
                            Name = "Transfer of stocks between same client’s portfolios",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("b3e5c554-61e5-4e2d-bead-14920d713f73"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4796),
                            IsDeleted = false,
                            Name = "Custodian reconciliation",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("cb21ef14-98d0-46c0-9d15-e401e12edd23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4797),
                            IsDeleted = false,
                            Name = "Update of Instrument Information",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("3b454463-aca7-4c5f-84ba-2e35dc12e5f0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4799),
                            IsDeleted = false,
                            Name = "MMF Quarterly Dividend Reinvestment",
                            UnitId = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1")
                        },
                        new
                        {
                            Id = new Guid("68a2e740-cd96-4768-8887-6c4cd8c5a577"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4800),
                            IsDeleted = false,
                            Name = "Account Onboarding",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("a07b2702-da76-4958-ba3e-89286749ee88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4801),
                            IsDeleted = false,
                            Name = "Redemption Processing - Verification (Mutual Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("00c0addb-0975-4af8-ad98-d816518b303d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4802),
                            IsDeleted = false,
                            Name = "Withdrawal Processing (Portfolio Fund)",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("9d21791d-d5e0-41b4-a56b-6fb4f440d02f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4803),
                            IsDeleted = false,
                            Name = "Record Update",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("9743af2f-7808-418a-a2ad-81b14feb332f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4805),
                            IsDeleted = false,
                            Name = "Unit Transfer",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("d53efadc-f6ca-4a73-9671-703eb16ce201"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4806),
                            IsDeleted = false,
                            Name = "Standard Embassy Letter",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("c1c220ec-00e6-4134-8e88-f92588b0642c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4807),
                            IsDeleted = false,
                            Name = "Estate Transmission - Letter of Administration / Probate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("15d60423-4c55-4a0e-930e-df3c1c4823bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4809),
                            IsDeleted = false,
                            Name = "Deactivation of Mobile Number Re-assigned to a Third Party",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("867003e9-5737-48bf-bf3f-a20ffb36e0fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4810),
                            IsDeleted = false,
                            Name = "Unclaimed Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("9aa307a1-7465-442e-a26f-0d39e2ab4e95"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4811),
                            IsDeleted = false,
                            Name = "EOQ/Dividend Payment",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("d144ee01-e7ec-420e-8e78-9d58b077add5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4812),
                            IsDeleted = false,
                            Name = "Change of Dividend Mandate",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("8bf053bd-1114-4ab9-afe4-5d89d1f346b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4813),
                            IsDeleted = false,
                            Name = "NFIU Reporting",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("3f4e630c-0ab0-4617-9247-f5b448fc1adc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4814),
                            IsDeleted = false,
                            Name = "Sanction Screening",
                            UnitId = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9")
                        },
                        new
                        {
                            Id = new Guid("0e5abf34-d3af-4a28-8c74-6bd21669adf0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4815),
                            IsDeleted = false,
                            Name = "AMS pulls transactions from the Bank API",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("19a21bde-af8d-4629-b76a-9b251403931a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4816),
                            IsDeleted = false,
                            Name = "AMS automatch transactions with membership ID and integrates to NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("f6171a11-0f83-43cb-aee1-79298a5c0587"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4819),
                            IsDeleted = false,
                            Name = "Manual matching of inflow into clients account",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("8992ae0f-a39b-4b4a-902b-397b1f49fc4c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4820),
                            IsDeleted = false,
                            Name = "Manual Collation of inflows and uploads into core application- NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("ce85a1a2-67d1-4b19-b7ce-b2eb40ac2d4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4821),
                            IsDeleted = false,
                            Name = "Posting of all matched subscription on NAV",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("55faa872-c962-4541-9183-409a69a0e1fd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4822),
                            IsDeleted = false,
                            Name = "Posting of all verified redemptions and pass for payment",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("756bab52-24a0-459e-8172-9885bd091e6e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4823),
                            IsDeleted = false,
                            Name = "Initiation of Intra-fund unit transfers",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("659cd45b-fc3d-4d6d-9183-ad53496941db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4824),
                            IsDeleted = false,
                            Name = "Direct debit set up and Termination",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("d48ab9ca-ef47-4f65-a4a6-3a820d66ce23"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4825),
                            IsDeleted = false,
                            Name = "Posting of Buybacks",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("e5f44c1c-2ab5-45b1-97e6-9bf4e62aa411"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4826),
                            IsDeleted = false,
                            Name = "Memo for Transfer of fund across Bank",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("3b8a8589-2b05-4904-8613-7bc981be46ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4828),
                            IsDeleted = false,
                            Name = "Goal-related Transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("cd6e9e93-10f5-46af-8533-a8070eae7238"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4829),
                            IsDeleted = false,
                            Name = "Daily Movement of posted subscriptions at Bank(Cash Sweep)",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("6244cd43-becb-4b3a-9798-3451186fc7ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4830),
                            IsDeleted = false,
                            Name = "Daily Reconciliation of all Web transactions",
                            UnitId = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5")
                        },
                        new
                        {
                            Id = new Guid("09d21143-664d-4ad9-972e-674f7f178163"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4832),
                            IsDeleted = false,
                            Name = "Systems Maintenance",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("081bc587-1a72-4406-aab2-858e223224c9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4833),
                            IsDeleted = false,
                            Name = "Applications Development/Enhancement",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("5a1e669f-93bd-47c5-9e34-1f7d07188095"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4834),
                            IsDeleted = false,
                            Name = "Planning, Implementing and Closing IT Projects",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("22637ad5-fa5c-44cc-9fdc-7163773d2f3c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4835),
                            IsDeleted = false,
                            Name = "Data Backup",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("f81b0f9a-77a3-473f-a613-90594960ca3b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4836),
                            IsDeleted = false,
                            Name = "Data Recovery Steps",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("ad907069-b3fe-45b0-b9c8-a50ad852c17a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4838),
                            IsDeleted = false,
                            Name = "Simulating Disaster and Recovery",
                            UnitId = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e")
                        },
                        new
                        {
                            Id = new Guid("775a1634-fcfa-466d-849e-8dbc07da57db"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4840),
                            IsDeleted = false,
                            Name = "Development of Annual Audit Plan (IA Plan)",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("3f1ad3b0-cdd4-44f3-b7bb-e3bda097922f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4841),
                            IsDeleted = false,
                            Name = "Audit Review",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("f88c1915-0afb-4c08-95e6-bae636fcd71d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4842),
                            IsDeleted = false,
                            Name = "Investigation",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("0fc5e9ff-1dbc-4d89-a533-9e9b471016d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4843),
                            IsDeleted = false,
                            Name = "Follow Up",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("13def674-a646-4906-b25a-9b85322121f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4844),
                            IsDeleted = false,
                            Name = "Operational Performance Rating",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("aacdb840-de92-461a-a26b-4a7a68939baa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4845),
                            IsDeleted = false,
                            Name = "Board Audit and Risk Management Committee (BARC) Reporting",
                            UnitId = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5")
                        },
                        new
                        {
                            Id = new Guid("84bf345b-570f-4d1f-8fae-8bdf564fe9c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4846),
                            IsDeleted = false,
                            Name = "Cash call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("5adaf13f-b7a9-4655-b64d-13c47c5d6b16"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4848),
                            IsDeleted = false,
                            Name = "Trade call-over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("ba2b18ef-2de4-4444-83e7-9c7c89a6efae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4849),
                            IsDeleted = false,
                            Name = "Mutual Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("62d9793b-d04a-4402-9efd-ab1aa6064265"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4855),
                            IsDeleted = false,
                            Name = "Institutional Fund Pricing Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("c5e5e295-4ec6-4eeb-bf39-8f34d101ebc1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4857),
                            IsDeleted = false,
                            Name = "Portfolio Stock Account Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("622642da-e898-499d-8e72-501f94147479"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4858),
                            IsDeleted = false,
                            Name = "Fixed Income Trade Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("f4300f54-59a7-4dd3-bc75-35bd327f0a50"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4859),
                            IsDeleted = false,
                            Name = "BRD and UAT review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("129c0e49-3c90-49f9-acd9-63b93c9ddf70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4860),
                            IsDeleted = false,
                            Name = "User Rights Access Mgt",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("34cd9269-da75-4f53-b82a-089abdcf70d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4861),
                            IsDeleted = false,
                            Name = "Statutory Remittance Review",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("202f8900-a6f5-4665-acb9-3670afe994e3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4863),
                            IsDeleted = false,
                            Name = "Daily Teams Call Over",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("fd42c29a-d27e-4a80-b8bc-5ad89ac821b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4864),
                            IsDeleted = false,
                            Name = "CSCS Reconciliation",
                            UnitId = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21")
                        },
                        new
                        {
                            Id = new Guid("f16ff911-e892-4a09-b3f1-416de0ab8ef5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4865),
                            IsDeleted = false,
                            Name = "Agile Delivery Process",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("1390bb65-a1a7-450e-9293-cd6bbf482102"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4866),
                            IsDeleted = false,
                            Name = "DEVOPs Operations (Deployment to Production)",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("35fc1970-84dd-435e-bf81-d3b427c7fe7c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4867),
                            IsDeleted = false,
                            Name = "Functional Testing – User Acceptance Test",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        },
                        new
                        {
                            Id = new Guid("5a3dede2-48b3-4949-9d26-ac826ff07799"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(4868),
                            IsDeleted = false,
                            Name = "Post Go Live Support",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("PeriodTo")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("RiskControlSelfAssessment", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskControlSelfAssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("RiskControlSelfAssessmentId", "Id")
                        .IsUnique();

                    b.ToTable("RiskControlSelfAssessmentUnit", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionProgress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActionResolutionDate")
                        .HasColumnType("date");

                    b.Property<int>("ActionStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("ActionManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountImpacted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GrossLossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetLoss")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal>("RecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("date");

                    b.Property<string>("RecoveryDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RecoveryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalRecoveredAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("RiskEventId");

                    b.ToTable("LossManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RecoveryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RecoveryType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64c5f5ee-ff08-4c03-914b-57c7e01b391e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 511, DateTimeKind.Utc).AddTicks(7806),
                            IsDeleted = false,
                            Name = "recovery1"
                        },
                        new
                        {
                            Id = new Guid("c359ee33-8b9f-4543-8750-2738d0ea9ae1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 511, DateTimeKind.Utc).AddTicks(7809),
                            IsDeleted = false,
                            Name = "recovery2"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RiskDriver", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(6648),
                            IsDeleted = false,
                            Name = "People"
                        },
                        new
                        {
                            Id = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(6651),
                            IsDeleted = false,
                            Name = "Process"
                        },
                        new
                        {
                            Id = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(6653),
                            IsDeleted = false,
                            Name = "Systems"
                        },
                        new
                        {
                            Id = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(6655),
                            IsDeleted = false,
                            Name = "ExternalEvents"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4528),
                            IsDeleted = false,
                            Name = "Skills",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4542),
                            IsDeleted = false,
                            Name = "Motivation",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4545),
                            IsDeleted = false,
                            Name = "Capacity",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4546),
                            IsDeleted = false,
                            Name = "Industrial Action",
                            RiskDriverId = new Guid("f6ec7b08-f46f-4e00-a589-f15b3b24028d")
                        },
                        new
                        {
                            Id = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4548),
                            IsDeleted = false,
                            Name = "Process complexity",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4550),
                            IsDeleted = false,
                            Name = "Change management",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("269387bf-03b1-4b60-95fc-a62977783334"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4551),
                            IsDeleted = false,
                            Name = "Quality of controls",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4553),
                            IsDeleted = false,
                            Name = "Roles and responsibilities",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4555),
                            IsDeleted = false,
                            Name = "Adequacy of procedures",
                            RiskDriverId = new Guid("df0bcdd9-2a59-4de2-b061-63e193c5965e")
                        },
                        new
                        {
                            Id = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4558),
                            IsDeleted = false,
                            Name = "System adequacy",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4559),
                            IsDeleted = false,
                            Name = "System availability",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("2094ab76-2766-4a88-9a45-fd5444570151"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4561),
                            IsDeleted = false,
                            Name = "System security",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("96912526-6283-4f3c-9079-769b5d08f06d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4563),
                            IsDeleted = false,
                            Name = "System Complexity",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("00a54610-0522-4313-ac74-d39f550ff600"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4565),
                            IsDeleted = false,
                            Name = "Data protection",
                            RiskDriverId = new Guid("36507944-db19-40a0-ac53-5c70c5f4007d")
                        },
                        new
                        {
                            Id = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4567),
                            IsDeleted = false,
                            Name = "Outsourcing",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4568),
                            IsDeleted = false,
                            Name = "Regulatory",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4570),
                            IsDeleted = false,
                            Name = "Legal",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4572),
                            IsDeleted = false,
                            Name = "Social, and natural environment",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4574),
                            IsDeleted = false,
                            Name = "Client / customer relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        },
                        new
                        {
                            Id = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(4576),
                            IsDeleted = false,
                            Name = "Third-party Relations",
                            RiskDriverId = new Guid("27781fcf-bf63-4ac4-8ab5-c8530ab68abc")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RiskDriverCategoryId", "Name")
                        .IsUnique();

                    b.ToTable("RiskDriverSubCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("03140f9b-4386-4a2c-83ce-08e6971e6d30"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8465),
                            IsDeleted = false,
                            Name = "Staff selection (poor educational levels etc)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("81fb8d9a-6dd9-4700-b1bc-d262329ae8b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8473),
                            IsDeleted = false,
                            Name = "Inadequate skills development (e.g. training)",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("434eb9f3-66b0-4d0a-b76e-3aedee2a0a88"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8474),
                            IsDeleted = false,
                            Name = "Key man retention",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("a39f39ca-b525-433c-8cf0-06b495d34023"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8475),
                            IsDeleted = false,
                            Name = "Lack of management oversight",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("017b7f01-efba-40e5-a929-f6945c5fad13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8476),
                            IsDeleted = false,
                            Name = "Lack of staff experience in relation to performed tasks",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("af40b882-a0e5-4870-9d6f-3a3dd3131414"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8477),
                            IsDeleted = false,
                            Name = "Negligence of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("47390fc8-676c-4149-a687-1f435b4178c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8478),
                            IsDeleted = false,
                            Name = "Performance failure of Support unit",
                            RiskDriverCategoryId = new Guid("a5296a9f-bda3-4971-8796-8b8e262612bf")
                        },
                        new
                        {
                            Id = new Guid("16dec140-c1b5-431b-9d0e-57975b673c8f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8480),
                            IsDeleted = false,
                            Name = "Inadequate staff compensation (basic salaries, bonuses, reward-system for vigilance etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("a51b7f37-d38e-4fbd-aa11-f51ee63b500e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8481),
                            IsDeleted = false,
                            Name = "Working Atmosphere (level of stress, social climate, interpersonal relationships, malicious Intent)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("0df818b3-4bc6-4bf8-9811-85ed751138ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8483),
                            IsDeleted = false,
                            Name = "Workload perception (lack of clearly stated goals and objectives etc)",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("9a558aa4-f0db-4e6e-b02d-d552de792064"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8484),
                            IsDeleted = false,
                            Name = "Corruption / Criminal Intent",
                            RiskDriverCategoryId = new Guid("e9ac2f9f-42c4-4b61-8f58-f2a8f8828a31")
                        },
                        new
                        {
                            Id = new Guid("a3df31cb-dde6-4127-82f1-07d1783b3a11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8485),
                            IsDeleted = false,
                            Name = "Staff shortages within unit (lack of capacity in unit)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("48ffd1c8-6fac-4c4c-bc32-d7f90372b2b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8486),
                            IsDeleted = false,
                            Name = "Staff shortages within support units (lack of capacity in supporting units)",
                            RiskDriverCategoryId = new Guid("b528e800-47df-42c5-993c-c0b0ae1fff7f")
                        },
                        new
                        {
                            Id = new Guid("bd6c2714-610a-433d-b7df-0a7aca4976d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8488),
                            IsDeleted = false,
                            Name = "Disagreement on issues of mutual interest",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("9d7a0231-6a5f-4774-8db9-8223b4c9d620"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8489),
                            IsDeleted = false,
                            Name = "Failure to consult organised labour on HR policies",
                            RiskDriverCategoryId = new Guid("acda7790-6767-47b1-bee3-87566c8f6e04")
                        },
                        new
                        {
                            Id = new Guid("7e83dcbb-d05f-4355-9275-8b83f985e6fb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8490),
                            IsDeleted = false,
                            Name = "Complexity of policies / procedures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("4cf9f0a8-4d0c-4cb7-b585-19079fc1e597"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8491),
                            IsDeleted = false,
                            Name = "Complexity of client agreements",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("67158270-a7be-4f39-9220-0406d4c7d5be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8493),
                            IsDeleted = false,
                            Name = "Process inappropriate for geographic / physical location",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("8efe88e6-1b3b-4120-8383-23d4d9b35810"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8495),
                            IsDeleted = false,
                            Name = "Automated process failures",
                            RiskDriverCategoryId = new Guid("c8892fdd-4b7e-499f-8a80-9b7c1ec9f6c2")
                        },
                        new
                        {
                            Id = new Guid("14fbe636-d281-4f97-a45e-2abb12a88910"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8496),
                            IsDeleted = false,
                            Name = "Introduction of new processes and procedures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("ba239a6d-c834-438a-be09-c376904e58aa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8497),
                            IsDeleted = false,
                            Name = "Internal communication failures",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("9da09541-bc36-4dd9-980e-8d547e672fea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8498),
                            IsDeleted = false,
                            Name = "Lack of documented guidelines for new processes / services developed",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("48d7db19-164d-40bf-9c55-068371665f6b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8499),
                            IsDeleted = false,
                            Name = "Rate of change / diversification of products / services",
                            RiskDriverCategoryId = new Guid("f0c40deb-1d86-4f0d-9ad8-283f25ce56b8")
                        },
                        new
                        {
                            Id = new Guid("4177fd4d-4e83-42c0-b464-a6aa84693e69"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8500),
                            IsDeleted = false,
                            Name = "Inadequate controls in place (specific / pervasive / monitoring)",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("ea33d102-3183-460c-b402-9c47f35b72ec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8502),
                            IsDeleted = false,
                            Name = "Lack of reporting of control weaknesses / failures",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("6cbdd427-ffa2-4f4a-9544-999c8825bd12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8504),
                            IsDeleted = false,
                            Name = "Failure of automated controls",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("19c820fc-d9d7-4633-aacd-26d2b6cfb289"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8505),
                            IsDeleted = false,
                            Name = "Management ability to override controls or processes",
                            RiskDriverCategoryId = new Guid("269387bf-03b1-4b60-95fc-a62977783334")
                        },
                        new
                        {
                            Id = new Guid("d374a5db-f836-41a4-a77c-533d69773df0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8506),
                            IsDeleted = false,
                            Name = "Inadequate clarity of authority (ultimate decision maker) and reporting lines",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("a46583be-2793-400e-bd66-807f33d906e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8507),
                            IsDeleted = false,
                            Name = "Inadequate delegation of power (scope, limits, communication, reporting etc)",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("9ea2f10d-559d-47c2-9d2e-1c86f6a31a1a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8508),
                            IsDeleted = false,
                            Name = "Inadequate definition of duties and responsibilities",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("21944d8e-5beb-40cf-a8de-b14c11715125"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8509),
                            IsDeleted = false,
                            Name = "Inadequate segregation of duties",
                            RiskDriverCategoryId = new Guid("5fa8e2a4-6d28-4cab-93bf-5a4d13ca66c8")
                        },
                        new
                        {
                            Id = new Guid("1db1fc0b-2e09-4f15-a601-37afe8f1a7ce"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8510),
                            IsDeleted = false,
                            Name = "Lack of formal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("09cd6f54-6ccd-4b75-a1ab-929af650ba70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8511),
                            IsDeleted = false,
                            Name = "Inadequate / incomplete procedure (Internal communication failure)",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("61d2fd5d-687f-4e3b-9996-a2e4be200efa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8514),
                            IsDeleted = false,
                            Name = "Lack of access to internal procedures / guidelines",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("2c91615b-d8f7-49fe-b87f-7b8713cd7708"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8515),
                            IsDeleted = false,
                            Name = "Lack of SLA's between internal units",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("ee9bf54a-a006-44af-b1af-7ec8e8031317"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8516),
                            IsDeleted = false,
                            Name = "Non adherence to processes and procedures",
                            RiskDriverCategoryId = new Guid("037fef6e-a151-422e-be74-89efe99f6f6f")
                        },
                        new
                        {
                            Id = new Guid("5bfebfd9-524f-4087-9bc1-1512b5390892"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8517),
                            IsDeleted = false,
                            Name = "System inadequate for nature of required tasks",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("ff7a0776-3efd-4b48-a395-f3f71e724193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8518),
                            IsDeleted = false,
                            Name = "System inadequate for volume of activities (speed, storage etc)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("9af829cc-4bf7-4685-81e1-25e200e3f0ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8520),
                            IsDeleted = false,
                            Name = "Inadequate technical or functional documentation (user guides)",
                            RiskDriverCategoryId = new Guid("4ab36063-c149-4e0f-80c3-0fa76c8fa24c")
                        },
                        new
                        {
                            Id = new Guid("aea5e842-1d83-4f69-a5d2-12ebd933b293"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8521),
                            IsDeleted = false,
                            Name = "IT helpdesk inefficiencies",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("ae4610af-77af-4dc9-93f2-59e8b97465e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8522),
                            IsDeleted = false,
                            Name = "Technological obsolescence",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("ea0d5d8c-c14f-43cc-8c54-bd4ef5498050"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8524),
                            IsDeleted = false,
                            Name = "Software failure (Software / data corruption etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("e6948768-869e-44c2-828d-d74b300a20de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8525),
                            IsDeleted = false,
                            Name = "Hardware failure (Failure of wearing parts etc)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("b4eb9b2c-bbc4-4e61-8b89-b534e933dd53"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8526),
                            IsDeleted = false,
                            Name = "System unavailable due to extended period of power outage",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("8a40adf6-e4e5-4d9d-b6f9-3696660ba5c8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8527),
                            IsDeleted = false,
                            Name = "Other Equipment failure (Failure of other assets/ equipments other than IT related equipments etc.)",
                            RiskDriverCategoryId = new Guid("f0297818-9833-4ab3-995f-78cf6bb964e7")
                        },
                        new
                        {
                            Id = new Guid("3ffea9a2-deae-49fe-8ac7-c7f85d206202"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8528),
                            IsDeleted = false,
                            Name = "Inadequate security of user profiles (passwords etc)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("bff53207-f9bc-494b-88aa-5ca79d6507e9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8529),
                            IsDeleted = false,
                            Name = "Inadequate security over critical data areas",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("73e47aab-67a9-45f6-9b91-ac6aa0f94e5e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8530),
                            IsDeleted = false,
                            Name = "Inadequate logical system control checks (e.g. log monitoring)",
                            RiskDriverCategoryId = new Guid("2094ab76-2766-4a88-9a45-fd5444570151")
                        },
                        new
                        {
                            Id = new Guid("826d2e48-30e5-4040-ad38-94390191bd02"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8531),
                            IsDeleted = false,
                            Name = "Inadequate synergy between disparate systems with common users",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("1c151afb-ceb4-4746-9e19-369b63a958e7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8540),
                            IsDeleted = false,
                            Name = "Poor systems user interface",
                            RiskDriverCategoryId = new Guid("96912526-6283-4f3c-9079-769b5d08f06d")
                        },
                        new
                        {
                            Id = new Guid("a6962260-63f7-4e0d-82bf-d3bf14ea366a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8542),
                            IsDeleted = false,
                            Name = "Inadequate system / data backups",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("4d18c9b1-1645-40fc-96a4-52039ccf4d7b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8543),
                            IsDeleted = false,
                            Name = "Virus / Intrusion attacks",
                            RiskDriverCategoryId = new Guid("00a54610-0522-4313-ac74-d39f550ff600")
                        },
                        new
                        {
                            Id = new Guid("ab3e013d-fb2f-41f4-8826-56e3182657c3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8544),
                            IsDeleted = false,
                            Name = "Lack of formalization of relationship with outsourcer (duties, deliverables etc)",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("e7f9a82c-34d4-47d1-a173-46d5f5d7f44d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8545),
                            IsDeleted = false,
                            Name = "Performance failure of outsourced vendor / service provider",
                            RiskDriverCategoryId = new Guid("25302c84-c975-45f7-a46e-f9b0dd286b5c")
                        },
                        new
                        {
                            Id = new Guid("363c004b-96c4-4b08-8dc3-c33c3977f166"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8546),
                            IsDeleted = false,
                            Name = "Regulatory compliance breaches",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("f066eba2-a092-4f5e-9bac-25b52a40a433"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8547),
                            IsDeleted = false,
                            Name = "Government discretion to impose will and decisions without prior notice.",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("36d35c15-4ac3-4b80-aa3e-c89e9319087a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8548),
                            IsDeleted = false,
                            Name = "Ambiguity in Regulations",
                            RiskDriverCategoryId = new Guid("4a0e5abf-d42b-45a7-a98a-8d5dfba25983")
                        },
                        new
                        {
                            Id = new Guid("ba036db8-d750-4370-9b76-b29f628ee516"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8550),
                            IsDeleted = false,
                            Name = "Inadequate response to legal / contractual disputes",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("9d348055-5566-4dab-b5ab-354648809351"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8551),
                            IsDeleted = false,
                            Name = "Inadequate pre-agreement investigations",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("d5a18f93-50a0-40d1-b019-e5cab2f5107e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8552),
                            IsDeleted = false,
                            Name = "Inadequate legal structures",
                            RiskDriverCategoryId = new Guid("aee0a8ca-a49a-4ee4-b13f-10ae36b6788a")
                        },
                        new
                        {
                            Id = new Guid("5b753ecf-59e6-42f9-b691-cac45820dbd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8553),
                            IsDeleted = false,
                            Name = "Natural disasters (Fire, floods, etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("1cf02cee-7b6f-49b2-83c7-46f5a58be88e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8554),
                            IsDeleted = false,
                            Name = "External attacks (burglary, robberies, vandalism etc)",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("8586534c-3759-4a9a-9391-62decbe45390"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8555),
                            IsDeleted = false,
                            Name = "Political or social unrest",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("2c54249d-eb17-458a-a327-39ad1957bd11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8556),
                            IsDeleted = false,
                            Name = "Unethical Social and Business Environment",
                            RiskDriverCategoryId = new Guid("47c33a55-b546-4f6e-a47d-7afdfcbc4594")
                        },
                        new
                        {
                            Id = new Guid("22777290-3b9d-4a60-9f95-a27da7c7b31d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8557),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by the client",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("545d8cc1-c452-4e44-90aa-90f7b9664f71"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8560),
                            IsDeleted = false,
                            Name = "Client/Counterparty Failures",
                            RiskDriverCategoryId = new Guid("237bec3d-cee6-4134-a49c-df772ee78d2d")
                        },
                        new
                        {
                            Id = new Guid("23c9a9b8-7054-47ca-94f5-c00a47d408d6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 512, DateTimeKind.Utc).AddTicks(8561),
                            IsDeleted = false,
                            Name = "Inadequate/inappropriate information provided by third-parties",
                            RiskDriverCategoryId = new Guid("deefc21e-32fc-4ffa-94ef-884256816c81")
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RiskEffectCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1d28d9f-95ca-44e4-be9b-9ff68b0c6ca1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4772),
                            IsDeleted = false,
                            Name = "Legal Liability"
                        },
                        new
                        {
                            Id = new Guid("6e3ffd44-1a50-4d61-81de-3846909341cb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4774),
                            IsDeleted = false,
                            Name = "Regulatory Action"
                        },
                        new
                        {
                            Id = new Guid("1bd6133c-a6ca-4641-b149-3f36f8f412d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4775),
                            IsDeleted = false,
                            Name = "Loss or Damage to Assets"
                        },
                        new
                        {
                            Id = new Guid("3d3bda02-15da-4a60-8b1f-682c639600bf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4776),
                            IsDeleted = false,
                            Name = "Restitution"
                        },
                        new
                        {
                            Id = new Guid("1d63400d-f605-4f26-b353-959355165b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4783),
                            IsDeleted = false,
                            Name = "Loss of Recourse"
                        },
                        new
                        {
                            Id = new Guid("22249f9f-0c86-4fbb-84e3-f91f736f892e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4784),
                            IsDeleted = false,
                            Name = "Write-down"
                        },
                        new
                        {
                            Id = new Guid("846d5649-f0c3-4a75-aea5-7491bd3ffd34"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4785),
                            IsDeleted = false,
                            Name = "Outsourcing / Vendor Costs"
                        },
                        new
                        {
                            Id = new Guid("11362185-9e2e-4ad4-a261-165e1572dffa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4785),
                            IsDeleted = false,
                            Name = "Reputational Loss"
                        },
                        new
                        {
                            Id = new Guid("15fa019c-9b66-45db-9156-1b03578731f3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 504, DateTimeKind.Utc).AddTicks(4788),
                            IsDeleted = false,
                            Name = "Reduced operational capacity"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EffectCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EffectDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EffectType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LossValue")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RationaleForGrossLossValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EffectCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEffectManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssesmentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIdentification")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOccurence")
                        .HasColumnType("date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("EstimatedLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportedByUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RiskEventDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BusinessEntityId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UnitId");

                    b.ToTable("RiskEvent", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoundaryEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RiskDriverCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RiskDriverDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("RiskDriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskDriverSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RiskEventId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("EventCategoryId");

                    b.HasIndex("EventSubCategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("RiskDriverCategoryId");

                    b.HasIndex("RiskDriverId");

                    b.HasIndex("RiskDriverSubCategoryId");

                    b.HasIndex("RiskEventId");

                    b.ToTable("RiskEventManagement", (string)null);
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId", "Name")
                        .IsUnique();

                    b.ToTable("Unit", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6684),
                            DepartmentId = new Guid("d02e7cc9-5cae-4590-9ada-7e01e2eb0721"),
                            IsDeleted = false,
                            Name = "Research"
                        },
                        new
                        {
                            Id = new Guid("085af12a-41d1-4516-adc4-7e6aba212354"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6688),
                            DepartmentId = new Guid("76b853d0-f625-4e48-bdcd-5cfb930ff181"),
                            IsDeleted = false,
                            Name = "ARM Financial Advisers"
                        },
                        new
                        {
                            Id = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6694),
                            DepartmentId = new Guid("322bd236-2e60-409a-86e6-835c2689015f"),
                            IsDeleted = false,
                            Name = "Securities Operations"
                        },
                        new
                        {
                            Id = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6695),
                            DepartmentId = new Guid("e2ed9446-64f8-4150-abf0-2e170136c6aa"),
                            IsDeleted = false,
                            Name = "Trading / Bokerage"
                        },
                        new
                        {
                            Id = new Guid("d37b8f43-c24c-4ed7-a195-c34d16a04836"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6698),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("4e79a246-e60a-47eb-92af-ace48b36b5c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6700),
                            DepartmentId = new Guid("d2f7a060-2f44-4714-98bb-f03741d918d2"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6702),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("a0d8712a-f6dd-4f64-a9b0-dcc204e52287"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6703),
                            DepartmentId = new Guid("db8cd93a-2aee-465c-aee1-ebc408ad3501"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("556d5367-6794-4355-974f-e2ebb6447695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6706),
                            DepartmentId = new Guid("be805504-2141-44dd-b6f3-0718142df7ae"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("85e7d3b3-b00d-4ffe-897a-17af4b7677b7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6708),
                            DepartmentId = new Guid("5ba71bd0-7831-44f4-be2b-b4894ecd17df"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("6b2c5f66-56fe-4a29-9393-5a8b7623d880"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6711),
                            DepartmentId = new Guid("657ba2bd-1ca7-47f9-9518-b09103df8000"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("c8ba310f-753d-4317-bce6-1559fb079142"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6716),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("c1beeff0-0f52-40a7-8bd0-9f031ef1110a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6719),
                            DepartmentId = new Guid("fcf19754-f07e-41c0-8a3f-bd135f93c40f"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("840c5c87-0155-4c39-85f4-f3736f04e540"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6720),
                            DepartmentId = new Guid("43074297-ed5e-465c-be08-3a681e4404bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("3f4ee577-f743-4614-adda-5bd4e641c85c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6722),
                            DepartmentId = new Guid("b36eff41-501d-463f-b764-b7998a4d039e"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("a7f38bb3-596e-486d-b7ef-3e30b893a622"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6728),
                            DepartmentId = new Guid("3da5a658-20b1-4c7d-9817-669807b26cb3"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("dda976b6-ac1f-42ed-a9cf-860ab77826ac"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6729),
                            DepartmentId = new Guid("1107ea36-29cd-48ec-9e71-0867a3248d45"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("42c3cab6-ccbd-452e-8f84-45993337f2b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6732),
                            DepartmentId = new Guid("0dbc7eba-bc38-4b8d-af59-92769cd22afc"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("518a9fb8-50d8-48a3-824f-3f836305c3bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6735),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("2e1919c1-fdae-4023-b602-6c3584f2b95b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6737),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f849e3eb-bc9e-46f7-9d8e-45912925298d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6738),
                            DepartmentId = new Guid("e0649b38-ae55-4664-9b1e-07c93d4d0c47"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("2108a385-5b39-4953-97e7-216523683078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6739),
                            DepartmentId = new Guid("ea5061d7-5ff1-419b-aa65-3f6e820d215b"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6741),
                            DepartmentId = new Guid("81b3631c-84bd-4357-8919-ce9a18c42720"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("575a8a92-112f-4752-a875-24999b3f69ca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6742),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Institutional"
                        },
                        new
                        {
                            Id = new Guid("6e7c4307-421c-4f26-9216-a740663cdebd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6744),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Abuja"
                        },
                        new
                        {
                            Id = new Guid("0aacc5ae-ea42-41e1-98c9-9b28d3628d08"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6745),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Lagos"
                        },
                        new
                        {
                            Id = new Guid("bfe9d961-8677-4fe2-9727-65f633759353"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6748),
                            DepartmentId = new Guid("c5cc333f-018a-4f43-9a77-1b3d2a8b565e"),
                            IsDeleted = false,
                            Name = "Wealth & Relationship Management -Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("eaa2f32a-bd71-4b87-a692-6b7eae9f560f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6749),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6751),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("0845fb19-2120-461d-b291-74e1aafa9adb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6752),
                            DepartmentId = new Guid("f5bbaf6f-6593-4b31-87fa-8704088ecff3"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6755),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6757),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6760),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6762),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6765),
                            DepartmentId = new Guid("2bcee133-d95c-4662-b71a-40197ae725a0"),
                            IsDeleted = false,
                            Name = "Operation Controls"
                        },
                        new
                        {
                            Id = new Guid("af33d7c8-cf9b-4753-b6bb-7839adaaefd1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6767),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c8153bcc-3c1c-4a28-98a5-0230194396d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6769),
                            DepartmentId = new Guid("e7ca403b-763d-4bc2-9ba9-ddf0c07db0f0"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6771),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("941c57d3-66c5-4083-85b9-20bf746b0def"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6773),
                            DepartmentId = new Guid("52353d55-0c2c-48b8-b8fe-67c4c76380c0"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6774),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6776),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6777),
                            DepartmentId = new Guid("f6c2a424-bf74-4f64-a6ea-eb1466730bf1"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a16649cf-8b89-4027-9628-8af108db66fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6781),
                            DepartmentId = new Guid("08679d84-cd66-4415-85ea-c4ceb9fdc008"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("9b8a0856-7a3f-4276-8c5f-4491aba5ea32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6783),
                            DepartmentId = new Guid("40a08501-139d-4f64-9ceb-d4746af51fb1"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("e3eaede4-d14c-4c91-b986-f19350038ab4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6785),
                            DepartmentId = new Guid("db791aa9-d9b5-435c-aa4f-efd668a6fe62"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0af7e7ae-8a58-44b4-97eb-b018f46f9aa0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6786),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("389e0846-2dfd-4e66-91c7-b7c37a565c70"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6788),
                            DepartmentId = new Guid("74ea2a08-c9e4-4d76-853c-fea704def351"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("bae03f16-d1e7-410b-ad67-46bfe376c873"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6789),
                            DepartmentId = new Guid("1b733991-ba99-460e-96eb-f2e669afb4e2"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("a6dc58d2-3ca3-442c-a2f2-74a3e2f861e5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6791),
                            DepartmentId = new Guid("4b242a25-387f-4193-9d1f-04e715479802"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("6944d275-92d3-400f-bf70-00f6d9a271ba"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6793),
                            DepartmentId = new Guid("f5bdf107-f9c6-4c13-b41f-b1ba55568906"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("67552124-7cee-4f19-8e6c-4b9598f1510f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6796),
                            DepartmentId = new Guid("f1baaf91-b927-4ed0-ae14-9446760caf96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("456575f1-a8db-4fd9-885f-8e84e096c860"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6797),
                            DepartmentId = new Guid("aadf66e4-2e68-42dc-9fee-dfc99e037236"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("ef9e9e15-3901-4d43-bb4f-fd7145b9dc31"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6798),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("9085fd66-97e2-4f6f-91c1-84fa719168c7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6800),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("201b2b9b-55a4-49eb-82b7-05afb9110eae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6801),
                            DepartmentId = new Guid("7ad4c706-19c0-4e01-a9b5-1686059e0180"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("209cfd77-d2b6-4264-963c-bd02558837e4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6803),
                            DepartmentId = new Guid("5c23a138-65a5-4c07-9dc1-1fc581abeba1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("07d965be-1bd6-40df-bfe9-9679b6a4a3c1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6804),
                            DepartmentId = new Guid("428fa69d-36cf-4fd3-9bba-d4a45dff366b"),
                            IsDeleted = false,
                            Name = "Proprietary and Principal Transactions"
                        },
                        new
                        {
                            Id = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6806),
                            DepartmentId = new Guid("a39a7edb-e4d2-4bd1-959c-9a82b03ded14"),
                            IsDeleted = false,
                            Name = "HoldCo Sales"
                        },
                        new
                        {
                            Id = new Guid("9ec38d97-5e77-4410-90fd-30c179766021"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6814),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("07455948-f63a-4d6b-b88f-9b1038b89ccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6815),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("e5c86213-9222-4efd-9b33-253c2c3a3719"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6817),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("659d183c-6ea8-4d2d-bee2-5e3374903ff6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6818),
                            DepartmentId = new Guid("8c9b5665-1e3b-45c5-8f08-1d4836487b12"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("167b697a-f58e-42cb-8eeb-8bf0180696e6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6820),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("c4ced74d-0564-4a17-80c6-48677d2a3f38"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6821),
                            DepartmentId = new Guid("b425cf7c-40b2-4419-89df-8bc891b2e15e"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("fb274136-84fe-430d-bab9-6647909a1a48"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6823),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("d638462f-bde3-4555-889b-2af892201b07"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6824),
                            DepartmentId = new Guid("374cc2c3-1692-4211-a438-9c84f096c998"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("e1671ffd-98d2-4063-b883-310378ac972a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6828),
                            DepartmentId = new Guid("b3dd1e0b-7fb0-41e7-ac57-a7dc6fd35190"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("6a60b06e-8252-4478-b5ca-ed38e56c56bc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6829),
                            DepartmentId = new Guid("4ef41c3b-77f4-41e8-89ce-05869eb3fac8"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("eaaafeef-5b77-4370-bd8f-21fd1b9e1b94"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6831),
                            DepartmentId = new Guid("332e2c96-7873-4e7e-a417-855c6cf61512"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("bddcf236-c134-41a2-9946-02a335f9b53d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6832),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("52ae7cc8-1382-4c45-833a-84e78a2de191"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6834),
                            DepartmentId = new Guid("2a650f64-bb8c-4529-a02c-d9e6ded8dd77"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("156818e3-1ea6-42b0-a785-7dfaac6f5371"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6835),
                            DepartmentId = new Guid("0529a58d-3fec-47d9-baf0-5f588014ab1d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("e60519ac-2af8-40be-94ed-2218e244d1d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6837),
                            DepartmentId = new Guid("778caba2-5bc9-44e7-ab17-74fcf528d9e7"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("19331c05-77f0-4f49-bb90-2af3a78a7793"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6838),
                            DepartmentId = new Guid("3bcf36b7-e55e-4f3e-8edc-4c537f74d9d1"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("9fb66e98-951d-462e-a559-4f19a955bd5b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6841),
                            DepartmentId = new Guid("d035fddb-c8b1-46ac-bad0-0c6433c32a96"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("ac2f5e03-e11a-4f64-8439-6dee0012376b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6842),
                            DepartmentId = new Guid("5d470b46-3059-4868-b413-f84c6b73f38d"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("7597c6ec-e19f-4ad2-add8-e32b1df75663"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6844),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("957f6bf9-1d02-4600-b676-6200eb6c4de3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6845),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("f4c145fb-e830-4fa2-ba1d-77963b39eccf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6847),
                            DepartmentId = new Guid("9f6edbba-294b-4526-9175-e8ec4950a564"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("598f6cac-69ce-47bb-8be4-f0697c1eb47e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6848),
                            DepartmentId = new Guid("1bc03880-d977-40df-b4f7-02b031cf7a13"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6849),
                            DepartmentId = new Guid("7222488c-5f14-4d9f-9d53-d1cf0ee621f4"),
                            IsDeleted = false,
                            Name = "Private Trust"
                        },
                        new
                        {
                            Id = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6851),
                            DepartmentId = new Guid("3b4b6872-94ef-45c4-93de-39a35fbce365"),
                            IsDeleted = false,
                            Name = "Commercial Trust"
                        },
                        new
                        {
                            Id = new Guid("54578f13-6ee3-418d-aede-e77041ef4878"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6853),
                            DepartmentId = new Guid("6dcf8606-8ba4-4310-8acc-2a6ad3e7ff57"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("3b4fb588-4847-4f9b-9f6b-5a8364ff86fc"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6855),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("2d541dca-d8d3-43e1-9ac1-d215cf89c085"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6856),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("16bedab4-1eb0-484a-9845-e1581085f146"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6858),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("01ac6f97-9040-439b-abd4-77c79f873d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6859),
                            DepartmentId = new Guid("cee03620-24b8-4293-bf43-03d8d0e570d5"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("0be0c18a-7705-4468-a2b4-38b5c61592d8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6861),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7e6554fc-5a0b-4bb0-bc61-2f8dff033a13"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6862),
                            DepartmentId = new Guid("0d7ec4b9-58ff-4dd1-b29c-9bf526cae665"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("90cd9708-b7b4-4203-ba98-6ce8c66e623e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6864),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("8f3b081b-f835-4577-aa13-9aefd6559760"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6866),
                            DepartmentId = new Guid("b56de526-2e34-41c7-9cd3-3e38408404d2"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("bb28a222-8895-4def-a8a2-1320ad8eb17b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6868),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("ada4d1eb-bcaf-40b1-9790-82c54a225fc3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6869),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("e35aaace-aeba-48df-867c-750aef56d05f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6871),
                            DepartmentId = new Guid("ebb477e8-093d-47f2-baf0-cd77f2884705"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("77635858-f888-45c8-9a6f-df2f5ac50670"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6872),
                            DepartmentId = new Guid("45cdfa60-9130-49ed-9fdf-845f34eca48b"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("afaf7dd5-e4f9-4fb3-af99-ce7d5409d9e0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6874),
                            DepartmentId = new Guid("fbe396d7-8f37-4344-8767-6a1e343c73ad"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("db3aeece-97b4-42b0-bf58-0f02b87ae4cd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6875),
                            DepartmentId = new Guid("6a5cdada-9119-496c-92b1-051ad5794c7e"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("cd5cf9e3-20cf-4c82-b030-5a705320b6e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6877),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("d0b29a0f-69c0-42df-8af9-490ebc733c64"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6880),
                            DepartmentId = new Guid("26f0bc25-7466-46ba-b420-215d49d37ccf"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("f60b1ae5-e26f-41bc-a5f3-814f19bdaf0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6882),
                            DepartmentId = new Guid("52e9802f-2408-435f-9f5f-5d4a10de82bf"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("dcea9d1b-56d2-47b3-901e-1e6b8a6365d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6888),
                            DepartmentId = new Guid("7503c8dc-27d2-4364-92f4-086444244e47"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("7fc65d4a-e0ad-4274-b1ba-c447f49cd208"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6889),
                            DepartmentId = new Guid("c76cf258-40da-497b-b3ca-5035438c23c5"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("e3ccc14e-8d7b-4817-a4c2-8d7eca698d72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6891),
                            DepartmentId = new Guid("d9b9f300-6378-4d18-b511-36b88d40cdb2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("444a03bb-a3d4-4cec-a76c-eeabda66003a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6892),
                            DepartmentId = new Guid("013f1c1f-994f-4178-a82a-98293abf3fd9"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("1f04d0c7-a755-4a59-8b72-7711bbc53d11"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6893),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("985b91e0-b7c5-4521-8c9a-d312a250d497"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6895),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d09befe1-8e69-4e76-9735-88597aeb09a4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6898),
                            DepartmentId = new Guid("54fe23d5-e9fc-4ec2-82d6-f294ae6aba1f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("cb66fa72-3399-4483-9766-bf35f2033862"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6899),
                            DepartmentId = new Guid("f3a518ad-7fd9-4b61-8329-d5202365376a"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6901),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Infrastructure Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("6d33101c-f8c2-44f0-8774-5eda11b05df3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6903),
                            DepartmentId = new Guid("cc56bbaa-4c91-45a8-bd01-276b89a49028"),
                            IsDeleted = false,
                            Name = "ARM Harith Investment Ltd"
                        },
                        new
                        {
                            Id = new Guid("b1ea8e93-9858-4d81-82c0-7c320e34fb2d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6904),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("f1e70d82-133f-491d-9cd9-a2b0a698689e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6906),
                            DepartmentId = new Guid("d6f89132-a0c8-4ffe-9d31-438a62821397"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("ad83f6ba-ea3b-4d12-a50a-5f00899e3f0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6907),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("3bc7f31c-9502-492b-8a0d-4204be7a5614"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6909),
                            DepartmentId = new Guid("02eb6692-18d6-49cd-9404-1225dfe8bcc1"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("32a964ce-a439-4c80-9a36-f7774706ee32"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6912),
                            DepartmentId = new Guid("203d9306-73ee-4f90-b4b5-84da8c23d7f4"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("73b718ca-eecf-45eb-bf74-283ff17073b5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6913),
                            DepartmentId = new Guid("7eee5e9e-f47d-4f90-bc9c-b8502f55298f"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("36e6ae73-2270-40ea-ae16-64d610c1e5b8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6915),
                            DepartmentId = new Guid("e082844a-52c9-4719-a2da-a10cf49f82e6"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("53d0cdd2-2aca-417f-ad11-92364253defd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6917),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("65757b71-e2fb-490d-ba49-20e94ee3623d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6918),
                            DepartmentId = new Guid("4ee4f005-2ab1-43a9-a714-78649319e467"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("087015b4-acdb-4487-a687-0f084390f387"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6920),
                            DepartmentId = new Guid("7f042f8c-2e1c-410b-9892-525d3cdc7bcc"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("2289ecd3-d422-42e9-95d1-aa91425d1c0d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6921),
                            DepartmentId = new Guid("00805aae-25cb-4540-83a4-5f8891e6687a"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("9a3f56c3-6249-46eb-880d-01b01cbe7078"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6922),
                            DepartmentId = new Guid("07a11106-3e41-417e-bc54-7f29a335c51e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7979d030-e342-426c-b1e6-6ce2ba29cb20"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6925),
                            DepartmentId = new Guid("92708b32-f123-452e-9589-8d191e51f524"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("9f4432a0-9002-4553-997d-633869423d79"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6927),
                            DepartmentId = new Guid("f28ded07-03e1-4706-a28f-fad22856265c"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("99e13568-607e-4a0f-bf1a-734ebe4310fe"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6928),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("e4789074-ab43-463f-b18f-42606e28db63"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6930),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d79f8f8d-8fe1-4ff4-94f0-2550f51d8186"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6931),
                            DepartmentId = new Guid("0eb79555-2e7e-4e98-95a3-8b09e35c8f65"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("ea600662-5dbb-4ad6-8200-cc3b2cf39a10"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6933),
                            DepartmentId = new Guid("d6718e8a-104b-4fbc-a48d-1e5d6f9d12d1"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("1df86816-2842-4941-8710-36822d6240e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6934),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6935),
                            DepartmentId = new Guid("8de5a8ea-0f58-494f-b022-8a403e34d840"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6938),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6940),
                            DepartmentId = new Guid("f27e8e75-fbbc-49e0-b7a5-48d3772c170c"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("eb862f6f-9693-4a7a-b2b8-df539e26a8c0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6941),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("be3396b5-e02e-48ac-ae55-d64dad1cbd76"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6942),
                            DepartmentId = new Guid("464713f9-0a6a-4da1-b5b9-ccd01200fa13"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6944),
                            DepartmentId = new Guid("fa7d1d89-8a78-49ec-86fd-7ec5310a2545"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6945),
                            DepartmentId = new Guid("95fa75c8-5e83-4696-a739-bec98c3bd9ea"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("8581332b-8d77-4f1c-8a3b-79a996ff575f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6947),
                            DepartmentId = new Guid("8c800862-9634-44b8-b597-5273d8f025d5"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6948),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6951),
                            DepartmentId = new Guid("e31ff356-9785-4e9f-ab1c-018b4bc65483"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6952),
                            DepartmentId = new Guid("0b6029b0-97b5-4dcb-af24-ea214143b795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6954),
                            DepartmentId = new Guid("c19e5f07-3325-447e-a0b8-ab67aaba1390"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6955),
                            DepartmentId = new Guid("d6601e9a-645c-4b34-86fd-96379b4cda73"),
                            IsDeleted = false,
                            Name = "Procurement and Administration"
                        },
                        new
                        {
                            Id = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6957),
                            DepartmentId = new Guid("bb58cf62-0d7a-4738-be3f-5bb05bb2d54d"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6963),
                            DepartmentId = new Guid("203a95e8-1dbb-4957-ad3d-e2199facd3df"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6964),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6965),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("30306755-5207-4d72-9c62-359afa8a5f0e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6968),
                            DepartmentId = new Guid("2cd5e5f8-67c2-4216-9684-2550888f86d1"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6969),
                            DepartmentId = new Guid("dfe3332e-0098-412b-bcd6-9599bef354ea"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6971),
                            DepartmentId = new Guid("694ecc27-72e5-4aba-bf1b-d169e3c82eeb"),
                            IsDeleted = false,
                            Name = "Information Security"
                        },
                        new
                        {
                            Id = new Guid("3ff75ac7-8e21-4e8a-8895-a77a4dfb5dee"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6972),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ARM Agric Fund"
                        },
                        new
                        {
                            Id = new Guid("5e3f8a3a-4451-4153-8871-eaf7f24aa0e2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6974),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "ODA"
                        },
                        new
                        {
                            Id = new Guid("789c6900-e5a3-44d4-9e6e-f165c0f94650"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6975),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "Advisory"
                        },
                        new
                        {
                            Id = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6977),
                            DepartmentId = new Guid("1ac6a090-f8d8-4c57-b604-036f61257463"),
                            IsDeleted = false,
                            Name = "RFL"
                        },
                        new
                        {
                            Id = new Guid("2abce038-72a5-4fd5-9cfc-deef8348f4d0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6978),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("38bf0e6d-58f3-47f8-8324-4938c42ac62b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6981),
                            DepartmentId = new Guid("098ddce3-8aea-42d3-a3aa-e2c7b3a40bbe"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("7d22672e-a552-4944-a418-d7678717c193"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6983),
                            DepartmentId = new Guid("53c3f01b-9c1d-435a-8f98-59a2f16f91c6"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("5ec15a12-324e-429a-87d7-af5b945a4859"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6984),
                            DepartmentId = new Guid("c7db68c2-9dd0-429d-bdad-dbd5af1a1978"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("ad196f3c-1065-439f-a8d4-4a88a6933949"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6986),
                            DepartmentId = new Guid("769375cb-e998-4055-a75f-58a9039a8229"),
                            IsDeleted = false,
                            Name = "Real Estate"
                        },
                        new
                        {
                            Id = new Guid("a2449964-8bd7-4773-8b33-449dfcb9a538"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6988),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("2324ca19-a743-485a-b49a-d04b5a1ec0a0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6989),
                            DepartmentId = new Guid("8948b589-f3d6-4166-9c85-083eccf50ef0"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("2570f9e3-7c71-41de-9a32-0981e29c14b3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6990),
                            DepartmentId = new Guid("2b4a09bb-d50b-4af2-b635-b7df21581795"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("bec6c783-ba3c-4180-9d8a-052ce433f695"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6992),
                            DepartmentId = new Guid("6b930a61-222f-445a-b3dc-b38c7b9465a8"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("33cdd2bc-364b-4975-a2ba-3f40cecca022"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6994),
                            DepartmentId = new Guid("1ef96ef9-a51f-4632-8aa1-eb844abce381"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("5efbbf5f-3081-4492-9ec4-b8880b3eb06e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6996),
                            DepartmentId = new Guid("2c04365f-3fd6-491d-9ef1-13751fbe8b32"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("bba02c89-3bf2-4596-857c-54c4f86e9a27"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(6998),
                            DepartmentId = new Guid("29f35a84-0491-415e-9583-0acc53696230"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("f24666d4-a288-47ac-99d2-e2b11c62c879"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7000),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("23f36ca8-a0ce-49bf-be0c-66366eff3c51"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7001),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("d6194902-48f8-4bed-bb0d-0aae5b24df4d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7002),
                            DepartmentId = new Guid("7252a7d7-b535-4461-82c8-10ce3cda075f"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("bedd46ce-899c-4c9d-a098-bb49c3633b35"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7004),
                            DepartmentId = new Guid("57bdc355-223c-471e-b5d1-a9381721e815"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("9e089a8d-603a-4c72-a278-0aeb843f9015"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7005),
                            DepartmentId = new Guid("fd320c62-42b4-430d-bab5-accbb1f501c5"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Sales"
                        },
                        new
                        {
                            Id = new Guid("4914b69b-1b5e-499a-8350-9fcf5b2e4dca"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7008),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Summerville / Lakowe"
                        },
                        new
                        {
                            Id = new Guid("185e0a8b-5aa5-43e5-8828-edeae97cd121"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7009),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Enclave"
                        },
                        new
                        {
                            Id = new Guid("2d544b75-9bda-4aff-a212-a2998fc28cfa"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7011),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Platform 30"
                        },
                        new
                        {
                            Id = new Guid("2470d7cf-0bea-49c7-a2c7-04c9fa36ade6"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7013),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "Village"
                        },
                        new
                        {
                            Id = new Guid("30c9c38f-23b7-4694-acd9-bac0da70eb4e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7014),
                            DepartmentId = new Guid("16201b11-7d0d-4d2c-a632-4408439672da"),
                            IsDeleted = false,
                            Name = "RDP"
                        },
                        new
                        {
                            Id = new Guid("cc9fd72b-9a83-43f9-b28f-f8376af33ac0"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7016),
                            DepartmentId = new Guid("4efd2543-e778-4610-b003-c7dd46c91920"),
                            IsDeleted = false,
                            Name = "Hospitality and Retail Management"
                        },
                        new
                        {
                            Id = new Guid("8618dc34-8edc-471a-8bab-e7d8b0670462"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7017),
                            DepartmentId = new Guid("36b7af25-5670-422b-a961-d19591210791"),
                            IsDeleted = false,
                            Name = "Mixta Nigeria Operations"
                        },
                        new
                        {
                            Id = new Guid("fa110f66-701d-43b3-9cea-35ca0aaeece1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7018),
                            DepartmentId = new Guid("a30367f4-d362-4f4d-b8f9-0ddf8446d02e"),
                            IsDeleted = false,
                            Name = "Technical / Projects"
                        },
                        new
                        {
                            Id = new Guid("a9e024ce-d1e7-42c6-b833-73bb43471c8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7022),
                            DepartmentId = new Guid("c55dd501-c81a-40d6-a087-c0db735c280c"),
                            IsDeleted = false,
                            Name = "Facility Management"
                        },
                        new
                        {
                            Id = new Guid("db1294f5-ada3-42c3-bc59-cd554818e099"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7023),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Procurement and Contracting"
                        },
                        new
                        {
                            Id = new Guid("64e5f632-d1a0-4ed0-b133-629f6c5d05c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7025),
                            DepartmentId = new Guid("7be57b73-24b7-4e03-8c75-ba06181ac887"),
                            IsDeleted = false,
                            Name = "Design"
                        },
                        new
                        {
                            Id = new Guid("4771bfd1-bcba-463a-84ed-f6e8a53f207a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7026),
                            DepartmentId = new Guid("97966912-7879-4358-b802-c71cfd610871"),
                            IsDeleted = false,
                            Name = "Adiva"
                        },
                        new
                        {
                            Id = new Guid("659a83bc-cee9-4939-8669-d2c5617b7845"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7028),
                            DepartmentId = new Guid("bb950e8a-57d5-4795-b027-7ef594142df2"),
                            IsDeleted = false,
                            Name = "Beechwood"
                        },
                        new
                        {
                            Id = new Guid("1e382c5d-6b22-43a6-9ce9-521244c1f555"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7029),
                            DepartmentId = new Guid("d05f8a34-201b-458e-af3f-d546aa51ba93"),
                            IsDeleted = false,
                            Name = "Greater Port Harcour Golf Club"
                        },
                        new
                        {
                            Id = new Guid("ad6a7903-fb1b-4bf2-a55c-2d06f83e7707"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7030),
                            DepartmentId = new Guid("9c2b6429-7224-4b41-9078-24ec7f29619d"),
                            IsDeleted = false,
                            Name = "TSD Ltd"
                        },
                        new
                        {
                            Id = new Guid("8a454ad0-80d6-4ded-a89e-c5e9023357ed"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7037),
                            DepartmentId = new Guid("44dc2e6a-def4-4fa1-a130-5e755ff04522"),
                            IsDeleted = false,
                            Name = "Oakland Limited"
                        },
                        new
                        {
                            Id = new Guid("12fc7195-2c3f-4bca-88b4-beef3f234d01"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7040),
                            DepartmentId = new Guid("51850e25-0a19-4bfa-9cee-b3ea1cd09ec1"),
                            IsDeleted = false,
                            Name = "Lakowe Lakes Golf Club Ltd"
                        },
                        new
                        {
                            Id = new Guid("491cdc51-64aa-4f6b-b5ba-b036b0174852"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7042),
                            DepartmentId = new Guid("a8e98921-579a-4824-9bb8-ec5f4254b32c"),
                            IsDeleted = false,
                            Name = "Townsville"
                        },
                        new
                        {
                            Id = new Guid("d6733360-b4e1-4b88-9cbb-364cf2c3fd9c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7043),
                            DepartmentId = new Guid("c005c30e-ebc3-4ec1-a1b3-0d23f4d06b60"),
                            IsDeleted = false,
                            Name = "Farapark"
                        },
                        new
                        {
                            Id = new Guid("5d296ac9-f9f9-4f69-bb40-0f8b616a6d0c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7044),
                            DepartmentId = new Guid("15c808a9-658c-4a88-885a-59654f6d376f"),
                            IsDeleted = false,
                            Name = "Crosstown Iju"
                        },
                        new
                        {
                            Id = new Guid("35a7256f-7c2a-45ea-8cbb-2e7509b1cd21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7046),
                            DepartmentId = new Guid("5f813a8d-b1f6-4271-a8f1-1fe8da637b31"),
                            IsDeleted = false,
                            Name = "Business Planning"
                        },
                        new
                        {
                            Id = new Guid("3d1ba0a1-ce2d-4806-b60e-4002c054f341"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7047),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("5b77ef60-1c4a-474a-a320-30b120509229"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7049),
                            DepartmentId = new Guid("32bc8c7e-cb36-42f0-88f3-96da17bc5b80"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("aa0a3489-560d-4e02-b270-ca08a45d2fcf"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7050),
                            DepartmentId = new Guid("c08d35a4-8107-4d76-8c7a-cc588b5ff552"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("04bd1a1c-a506-4ce7-b0ce-5f3c1e812c22"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7053),
                            DepartmentId = new Guid("62645a9d-45d7-4470-95d3-30e12c649e5d"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("55937fd0-e454-4dfb-a652-cf4ff41078d7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7054),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("a77067b1-9217-4a5b-b16d-70e211f22c25"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7055),
                            DepartmentId = new Guid("d9955013-91b9-4200-897e-cb3cc9ec45aa"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("8eb2aa8b-3cd7-41b1-9628-436aaace8df5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7057),
                            DepartmentId = new Guid("9790b206-c748-48d8-8e3d-92e1848d181b"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("79f64fe8-0a3e-4f2a-b499-8f48e6ea37e8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7058),
                            DepartmentId = new Guid("67f97d9b-6a96-431f-a6ee-080e58220b8d"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("2f7f4b7b-25de-490c-9db4-5ecbb9265268"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7060),
                            DepartmentId = new Guid("efcc9848-f2b7-43f3-a5a5-880ff82af57f"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("7c0261cb-0d3e-496d-aa86-9cf5f37da1ae"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7061),
                            DepartmentId = new Guid("74ed3363-3053-4e12-afda-8aa3a9ba5394"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("6cfdabd5-52e6-465b-8cca-5b23aead61be"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7063),
                            DepartmentId = new Guid("8c756839-450f-4ba7-bb42-aa26399d452f"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("cb0e55cc-f82b-4e63-ada3-e067be4df970"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7065),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("4221d035-01ed-4439-8829-d9b73f9e5a4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7066),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("757ecc97-7a10-420e-b919-2ac7aa557b3e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7068),
                            DepartmentId = new Guid("2dbd67f5-a20d-4ce7-a147-707e1e8bc31d"),
                            IsDeleted = false,
                            Name = "Co.Sec"
                        },
                        new
                        {
                            Id = new Guid("19704b51-99bb-439f-a4db-6603c6089a58"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7069),
                            DepartmentId = new Guid("27446c0d-a9af-471f-8a83-7e9a31ade74d"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        },
                        new
                        {
                            Id = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7071),
                            DepartmentId = new Guid("86bfe07d-57d0-4c7e-b778-6c4b3967ba49"),
                            IsDeleted = false,
                            Name = "Digital Financial Services"
                        },
                        new
                        {
                            Id = new Guid("5a96a0a8-8d71-45dc-9736-befceefbecb4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7073),
                            DepartmentId = new Guid("e29ab0a4-f3d8-4ee6-a03e-acba120fd7cc"),
                            IsDeleted = false,
                            Name = "Investment Management"
                        },
                        new
                        {
                            Id = new Guid("baef19b2-cb1a-4a73-86d0-f187cbd9502a"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7074),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Account"
                        },
                        new
                        {
                            Id = new Guid("a12793d5-baa7-4c20-8555-06c46c0c08c5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7076),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Retail Operations"
                        },
                        new
                        {
                            Id = new Guid("51e640b2-bee2-4b4c-8aa0-4286737b8ec9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7078),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Registrars"
                        },
                        new
                        {
                            Id = new Guid("9c4c1904-45e3-4068-bdc4-0edaad048df1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7080),
                            DepartmentId = new Guid("f3506495-7e1a-41b1-ae2a-4bedd308c2b1"),
                            IsDeleted = false,
                            Name = "Fund Admin"
                        },
                        new
                        {
                            Id = new Guid("7b36de44-d363-4d42-b02e-bafeb0c905d5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7081),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Call Centre"
                        },
                        new
                        {
                            Id = new Guid("2d49e611-2b7f-4515-86cc-6e67723405b2"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7083),
                            DepartmentId = new Guid("8bcaabe1-68e8-48d9-993c-037bb38b1a0c"),
                            IsDeleted = false,
                            Name = "Customer Service"
                        },
                        new
                        {
                            Id = new Guid("329d8cac-d18b-4a9b-bd38-8535e19d2b60"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7084),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Financial Control"
                        },
                        new
                        {
                            Id = new Guid("e0df9434-41f4-454a-a02b-45d644b4d08d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7085),
                            DepartmentId = new Guid("9e8c92bb-3e4b-4dc7-a5e6-bb3a8562b3d3"),
                            IsDeleted = false,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = new Guid("83d63b3c-f20b-4e30-8384-6d603fd67bd4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7087),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Abuja"
                        },
                        new
                        {
                            Id = new Guid("f6f9b36b-1d78-475e-b7e0-ffdd9f6e45e1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7088),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Port Harcourt"
                        },
                        new
                        {
                            Id = new Guid("b88ebfeb-5f91-4718-aa00-ec6ef714f50e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7091),
                            DepartmentId = new Guid("44d0991b-952e-4c8f-ba3e-3290fe2606be"),
                            IsDeleted = false,
                            Name = "Lagos"
                        },
                        new
                        {
                            Id = new Guid("a5ab3b91-07f8-47d7-8ad7-3dfdbf005f8e"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7092),
                            DepartmentId = new Guid("3495caee-2674-4590-a0b1-05ed02f7c5d3"),
                            IsDeleted = false,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = new Guid("003ed424-1724-44b1-bcb1-924abb94e338"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7094),
                            DepartmentId = new Guid("8d7eedf4-3714-4ab6-bd81-c6d87058407b"),
                            IsDeleted = false,
                            Name = "Risk Management"
                        },
                        new
                        {
                            Id = new Guid("5a64f00c-b288-46b3-aa77-ecc4d35b212d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7095),
                            DepartmentId = new Guid("7e9ed9b4-f4cc-4ae3-800f-dc2e0b614f8f"),
                            IsDeleted = false,
                            Name = "Project Management Office"
                        },
                        new
                        {
                            Id = new Guid("0ad594c4-73bb-4ee8-a533-c9ba80814d21"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7097),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Control"
                        },
                        new
                        {
                            Id = new Guid("b84c6b8d-5fe4-4e4a-9143-16e25509bfb5"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7098),
                            DepartmentId = new Guid("01b5cda8-819c-49d6-ac53-d6d38fde3b99"),
                            IsDeleted = false,
                            Name = "Internal Audit"
                        },
                        new
                        {
                            Id = new Guid("a39f7dfe-55bb-433d-aabd-70476e81a9f1"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7100),
                            DepartmentId = new Guid("a307d88a-0271-4630-a127-e15b01d4fb0d"),
                            IsDeleted = false,
                            Name = "ARM Academy"
                        },
                        new
                        {
                            Id = new Guid("6c300c5e-fba6-467e-952f-4bb3d1d15ea4"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7101),
                            DepartmentId = new Guid("1bab317b-253a-4b3d-b5c6-21f1ea4e95b5"),
                            IsDeleted = false,
                            Name = "Coporate Transformation"
                        },
                        new
                        {
                            Id = new Guid("b8bc161a-36be-433c-b9b2-2502b40786de"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7103),
                            DepartmentId = new Guid("c5fdcbd4-7c92-4838-90e4-1d22f52d596e"),
                            IsDeleted = false,
                            Name = "Administration"
                        },
                        new
                        {
                            Id = new Guid("36998696-f319-43d4-bcbf-61b52d0556bd"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7105),
                            DepartmentId = new Guid("500cd5ee-7fac-4285-80d3-9e3a86869ba2"),
                            IsDeleted = false,
                            Name = "Marketing and Corporate Communications"
                        },
                        new
                        {
                            Id = new Guid("5cf04c21-a4c1-45f2-a80c-9ccd03aec033"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7112),
                            DepartmentId = new Guid("f56e3da6-b318-4ade-89e4-f6d03aec0973"),
                            IsDeleted = false,
                            Name = "Corporate Strategy"
                        },
                        new
                        {
                            Id = new Guid("129ff73a-c11c-4ac7-bd7c-0029d80ef739"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7114),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Legal"
                        },
                        new
                        {
                            Id = new Guid("7116856a-f88c-4bdf-b7d4-92e8e241c8ea"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7115),
                            DepartmentId = new Guid("6f4bde6b-21ac-4631-b7da-0d3bd0ce2a95"),
                            IsDeleted = false,
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("b0c9d7c8-a875-4f67-b386-d3475c0b2585"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 513, DateTimeKind.Utc).AddTicks(7117),
                            DepartmentId = new Guid("83f8177c-f3a4-4766-85ee-415608202a64"),
                            IsDeleted = false,
                            Name = "Human Capital Management"
                        });
                });

            modelBuilder.Entity("Arm.GrcTool.Infrastructure.Data.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModuleItemType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EmailId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("EmailId"));

                    b.ToTable("Email", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionOwnerUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionToPreventReoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionToResolve")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkerPaperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkerPaperId")
                        .IsUnique();

                    b.ToTable("AuditFindings");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuditProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExceptionsNoted")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAuditFindingInitiated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueRating")
                        .HasColumnType("int");

                    b.Property<string>("IssueSummary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reoccurrence")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RootCause")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuditProgramId")
                        .IsUnique();

                    b.ToTable("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.SessionManagement.SessionTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LockDuration")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("NumberOfTry")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionTracker", (string)null);
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Business")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd2801bc-1472-4e3b-a1c8-70540b3dc2e7"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6228),
                            Email = "chukwuebuka.obieri@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwuebuka Obieri",
                            Unit = "Risk management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d291eef8-54ee-43d4-bc4c-d424cafef9dd"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6232),
                            Email = "iwasam.elemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Iwasam Elemi",
                            Unit = "Risk management",
                            UnitId = new Guid("2a2e8cc2-24bc-4adf-acf7-57e73ac28756"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("de1081f4-7ac7-4a15-9ed4-2dce96761f6c"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6239),
                            Email = "Nehizena.Ibhawoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("ca5833b2-7e68-4311-88e3-f7c95cd29d4e"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6241),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Unit = "Legal",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("79df351f-2641-4007-8429-77ddd5e2ee1c"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6247),
                            Email = "Ediagbonya.Osayomwanbo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ediagbonya Osayomwanbo",
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d477694b-a5a4-4d6d-a670-b98298819fa9"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6249),
                            Email = "james.ewah@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Ewah",
                            Unit = "WRM (Abuja)",
                            UnitId = new Guid("5b7bf6bf-cd9b-44bd-b88e-57bfb256f784"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("141713e0-5133-4cf9-9a5f-f2fb746064ce"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6250),
                            Email = "Olayemi.Toye@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olayemi Toye",
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("cbfce792-9ea8-44fd-825b-6dd973eaa233"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6257),
                            Email = "phoebe.ohiembor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Phoebe Ohiembor",
                            Unit = "Information Technology",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("e4984dc7-47df-4e56-b849-e8abd6ca414b"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6259),
                            Email = "Ethan.Okwara@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ethan Okwara",
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d950dbc6-7fa9-48c5-ac3f-bf0843817257"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6261),
                            Email = "ubi.torsam@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ubi Torsam",
                            Unit = "Marketing and Corporate Communications",
                            UnitId = new Guid("ad291e41-ea05-4e3d-ba6a-e970c8d6ec8c"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("24883956-5430-4912-9687-daa60f26f00c"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6263),
                            Email = "Stephen.Igwenwanne@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephen Igwenwanne",
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("33a7f95a-2d3b-4d00-9087-87c2d01c78f2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6265),
                            Email = "ndubuisi.anya@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ndubuisi Anya",
                            Unit = "WRM (PortHarcourt)",
                            UnitId = new Guid("80245081-74bc-4124-87f5-d6008b28706b"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("c54357c5-67a4-4785-95e7-dc9e928322d4"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6266),
                            Email = "Hassan.AdeObafemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hassan AdeObafemi",
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("679b86cd-5265-4de5-9125-dc08807d8472"),
                            Business = "ARM Agricbusiness Fund Manager Ltd",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6268),
                            Email = "david.akinboade@arm.com.ng",
                            IsDeleted = false,
                            Name = "David Akinboade",
                            Unit = "RFL",
                            UnitId = new Guid("c6583d8f-0c97-480f-9030-3853a8ce9e72"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("8b0e0099-43cd-4c05-a3a4-9a1ff5ed02af"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6270),
                            Email = "Eddy.Ayikimi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Eddy Ayikimi",
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("96ee5104-a0f8-4086-b6b6-e275606efd6d"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6271),
                            Email = "akpesiri.kodu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Akpesiri Kodu",
                            Unit = "Customer Experience",
                            UnitId = new Guid("7b5d5f83-12ea-44ab-aa57-354c23f25819"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("4c01f273-92c6-4493-8a9f-d47674af7d50"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6273),
                            Email = "Adeleye.Adewusi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adeleye Adewusi",
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("23549187-557a-4b09-a7b3-f147d64e54e4"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6275),
                            Email = "Igbagbo.Ilori@arm.com.ng",
                            IsDeleted = false,
                            Name = "Igbagbo Ilori",
                            Unit = "ARM Academy",
                            UnitId = new Guid("68f11193-1923-40d1-87d3-5a7b4de0b96e"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("7c39f386-6294-47b1-94ef-066cbc228ee2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6279),
                            Email = "bimbo.moses@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("3dd28c68-2c28-4ba6-9be3-c2350d6b7254"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6280),
                            Email = "Aminat.Ashafa@arm.com.ng",
                            IsDeleted = false,
                            Name = "Aminat Ashafa",
                            Unit = "Retail Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("e8536b03-df80-4287-869b-25615c06f82f"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6282),
                            Email = "Oluwaferanmi.Olorunleke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Seun idowu",
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("86386545-5989-40fd-b910-10e41af9919a"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6283),
                            Email = "nnamdi.okeke@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nnamdi Okeke",
                            Unit = "ARM Private Trust",
                            UnitId = new Guid("78c8f28f-f245-4e6c-bd59-dddd06ce248c"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("fc05089c-ac9d-44e8-ba85-165afa5b24dc"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6286),
                            Email = "Ibukun.Ajose@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ibukun Ajose",
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("cd6b5879-7bcb-456e-a663-e34f67d38579"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6287),
                            Email = "Kevian.Kevin@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kevian Kevin",
                            Unit = "Treasury",
                            UnitId = new Guid("f39cf3fc-5069-4d4c-88e6-981b622dd805"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("b797bc7a-e81a-4023-83fb-ec6c4533e3bb"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6289),
                            Email = "Isaac.Elakhe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("cc5a6432-df38-4c56-a803-0deb9fb2d28b"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6291),
                            Email = "raymond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raymond Akorah",
                            Unit = "ARM Registrars",
                            UnitId = new Guid("482b69b1-3bb8-4caa-969f-ca8c74986b12"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("4ae54ae3-1c86-4a8e-9a60-1f893ed7f7d1"),
                            Business = "ARM Digital Financial Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6294),
                            Email = "Ina.Alogwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ina Alogwu",
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("5417c6ad-7f14-481d-a183-05cc2d2433bf"),
                            Business = "ARM Digital Financial Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6296),
                            Email = "folaranmi.adefila@arm.com.ng",
                            IsDeleted = false,
                            Name = "Folaranmi Adefila",
                            Unit = "Digital Financial Services",
                            UnitId = new Guid("42bb02b3-075d-4414-9d51-4592aa1b18a8"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("e8deca2a-876b-46a4-b079-0654740abbb5"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6298),
                            Email = "oritsegbemi.agbajor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oritsegbemi Agbajor",
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("8a3f6dc5-5c2f-482d-8a05-7c47480b0f7a"),
                            Business = "ARM Trustees",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6299),
                            Email = "oritsegbemi.agbajor@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oritsegbemi Agbajor",
                            Unit = "ARM Commercial Trust",
                            UnitId = new Guid("05652a26-461c-4c78-be42-f212fc5fd083"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("e0f016fd-b654-4d4c-b18e-4e7f2e531fe0"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6301),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("ea9a8ac6-b40c-4f94-b9c4-44110fb6c2fb"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6303),
                            Email = "joy.oyekan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("e4c0a0a2-6f6f-46e7-ae21-7800fbceeac7"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6304),
                            Email = "Oluwabunmi.Abiodun-Wright@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwabunmi Abiodun-Wright",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("711f3323-c879-4850-b34c-7ccb9e86b58f"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6306),
                            Email = "Ezekiel.solomon@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ezekiel Solomon",
                            Unit = "Internal Audit",
                            UnitId = new Guid("3b8d7739-f07b-4196-89a1-fc679fc2994a"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("5f25c605-a523-44cb-b122-40dab1277c77"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6308),
                            Email = "Rotimi.Olubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rotimi Olubi",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("73549293-8c39-4b40-9fcc-ab2203297e24"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6310),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("677e87e7-e43f-4334-9f07-fb806340a519"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6311),
                            Email = "Carol.Ariyibi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Carol Ariyibi",
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("38196a7e-65d1-454a-b089-7b7078f62643"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6313),
                            Email = "Olaoluwa.Omolayole@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olaoluwa Omolayole",
                            Unit = "Corporate Transformation",
                            UnitId = new Guid("850b308d-bef3-41ad-b812-413b868e7621"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("77eae8f9-911e-4baa-b570-f63f195c042c"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6314),
                            Email = "Jacqueline.Adefeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Jacqueline Adefeso",
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("308ca4ff-4186-4188-8cdc-97e80817d3f2"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6315),
                            Email = "moradeke.odugbesan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moradeke Odugbesan",
                            Unit = "Procurement and Administration",
                            UnitId = new Guid("bae8a609-e0f7-4e17-8671-5f599cf213f9"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("94312899-d963-40e4-983b-848bff477db6"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6317),
                            Email = "Dare.Shobajo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Dare Shobajo",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("eb5e3d44-0834-41cd-96df-ee244589cdb2"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6319),
                            Email = "moshood.hassan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moshood Hassan",
                            Unit = "Human Capital Management",
                            UnitId = new Guid("5d423f0c-ace3-4f86-8c10-1b6155bd748a"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("c1151aa4-842b-4406-8386-b226a7601dc8"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6321),
                            Email = "rotimi.olubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rotimi Olubi",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("2dfd88ce-062d-4fa3-ad78-dcbaccb56374"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6323),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("6b823235-e2eb-492b-b560-33a3e2a0834b"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6324),
                            Email = "doyinsola.ola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Doyinsola Ola",
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("3a6c39b3-bba1-4468-a821-5f08a8859468"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6325),
                            Email = "rasheed.adebola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rasheed Adebola",
                            Unit = "WRM (Lagos)",
                            UnitId = new Guid("500fc670-2f14-4786-9092-f7f82b8ae507"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("291bba30-8376-457e-89e1-c0a4feb2bb1d"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6327),
                            Email = "oluyemi.omodayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluyemi Omodayo",
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("785f865e-919b-4580-9ad6-224988a84aab"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6328),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Unit = "Compliance",
                            UnitId = new Guid("a470f202-ca90-4fc9-8617-358311885a1c"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("6ecc0f45-d3ca-4688-a7a9-e865037b25e7"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6330),
                            Email = "rotimi.olubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Rotimi Olubi",
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("c99c92ba-be9b-42ea-b9b8-afa48532736f"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6331),
                            Email = "moyosore.taiwo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Moyosore Taiwo",
                            Unit = "Research",
                            UnitId = new Guid("a6409616-e559-4ff8-a877-0925be18ff3d"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("113dd2c8-2452-4033-b214-eef5e853dffe"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6340),
                            Email = "tariye.gbadegesin@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tariye Gbadegesin",
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("cfd7806e-2930-4339-8c7e-7ea7e2162e7b"),
                            Business = "ARM Harith Infracstrure Investement Limited",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6341),
                            Email = "oyedele.oyinbojuni@armharith.com",
                            IsDeleted = false,
                            Name = "Oyedele Oyinbojuni",
                            Unit = "ARM Harith Infrastructure Investment Ltd",
                            UnitId = new Guid("44fe054d-83dd-41da-b90a-a53631af453d"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("37a8783b-f15e-4767-ad29-d010535ca503"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6345),
                            Email = "isaac.elakhe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Isaac Elakhe",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("c268eaf7-ee0b-46db-a1a8-09297e267e89"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6346),
                            Email = "oladupe.oshinuga@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oladupe Oshinuga",
                            Unit = "Fund Admin",
                            UnitId = new Guid("2a9a1019-aaf4-493e-bb1e-16324b8b0e04"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("393d9c0a-916a-4c84-bcf8-aeeedb0b11d9"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6348),
                            Email = "adetayo.adebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Adetayo Adebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("40d37fb0-3d38-4908-a4e0-6c584b2a728b"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6350),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("2c461e0d-39a8-4412-9b27-029c902b18c7"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6351),
                            Email = "itunu.olatunde-folaji@arm.com.ng",
                            IsDeleted = false,
                            Name = "Itunu Olatunde-Folaji",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("a302fc44-9b79-41ac-9cf5-b0f61020595a"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6353),
                            Email = "tosin.adesope@arm.com.ng",
                            IsDeleted = false,
                            Name = "Tosin Adesope",
                            Unit = "Internal Control",
                            UnitId = new Guid("128a206a-4da3-4e49-9b73-8b817eea61d2"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("2360de98-71f3-4a3f-ab91-97578577cdc1"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6356),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("37741ec4-15bd-4d78-948a-1d8331810c22"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6357),
                            Email = "faith.sani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Unit = "Information Security",
                            UnitId = new Guid("037019bf-ce11-4307-a984-170b02ca17a9"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("989b899a-61f3-4ff7-aefc-4061ca3afde8"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6359),
                            Email = "mounir.bouba@arm.com.ng",
                            IsDeleted = false,
                            Name = "Mounir Bouba",
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("374f8704-e7a4-40b5-9c7a-5353171fe68f"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6360),
                            Email = "chukwufumnanya.chizea@arm.com.ng",
                            IsDeleted = false,
                            Name = "Chukwufumnanya Chizea",
                            Unit = "Investment Managment",
                            UnitId = new Guid("4082fe29-5966-476e-951f-c44e306ca50f"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("d98b4e79-df1a-4506-a9c4-c208414c9119"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6362),
                            Email = "raphael.emenyonu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Raphael Emenyonu",
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d40339f4-f8ec-4553-a96f-1a4bbd76cd76"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6364),
                            Email = "hamed.omotayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Hamed Omotayo",
                            Unit = "Retail Sales",
                            UnitId = new Guid("f6c8474e-084e-474a-9164-f912b62cdbd3"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("a15feaf6-faf6-4abf-9a5a-acd3c44e3e4a"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6365),
                            Email = "anuoluwapo.sebanjo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Anuoluwapo Sebanjo",
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("d36db2b5-ada6-4a49-a97b-c74bad4c85c0"),
                            Business = "Shared Services",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6366),
                            Email = "philip.aikinomiora @arm.com.ng",
                            IsDeleted = false,
                            Name = "Philip Aikinomiora",
                            Unit = "Corporate Strategy",
                            UnitId = new Guid("1152377f-b194-4f27-8c7e-fb8b3b733a75"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("3b8af910-965d-474c-bcb4-cb3dee23c8db"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6370),
                            Email = "gbeminiyi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbeminiyi Onipede",
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("4ef0ae84-450e-4d1a-bc21-71883b42da25"),
                            Business = "ARM HoldCo",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6372),
                            Email = "gbeminiyi.onipede@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbeminiyi Onipede",
                            Unit = "HoldCo Sales",
                            UnitId = new Guid("772f854e-c9f6-4428-bad1-53db881e28bb"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("8091df08-95a8-4c03-8323-ddf3edca0dde"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6373),
                            Email = "opeyemi.oshinyemi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Oshinyemi",
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            UserRoleId = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b")
                        },
                        new
                        {
                            Id = new Guid("0454d069-cf1e-4077-a24a-d385015dfe07"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6375),
                            Email = "james.agu@arm.com.ng",
                            IsDeleted = false,
                            Name = "James Agu",
                            Unit = "Operations Control",
                            UnitId = new Guid("285bdc67-c5b3-4802-9f08-b9fe2557432d"),
                            UserRoleId = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b")
                        },
                        new
                        {
                            Id = new Guid("a405b7b5-bb4a-4ba9-990e-11e83897bc14"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6377),
                            Email = "opeyemi.babasola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Opeyemi Babasola",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("bcd7b323-5134-4368-9aa0-3d9d93e22364"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6378),
                            Email = "gbenga.sonubi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Gbenga Sonubi",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("4f05960e-3db3-4a7f-8b63-7ff44d8130f5"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6380),
                            Email = "oluwatobi.oyebiyi@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatobi Oyebiyi",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("ecb17fc9-82ab-4652-ad43-5e01011911d3"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6381),
                            Email = "kareem.bashir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kareem Bashir",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("063b9b8c-b0ba-4497-9b36-69dd4c718f57"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6384),
                            Email = "patrick.ayele@arm.com.ng",
                            IsDeleted = false,
                            Name = "Patrick Ayele",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("aa5da2df-acf4-42ff-86a2-63a36cc8f9e2"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6385),
                            Email = "oluyemi.omodayo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluyemi Omodayo",
                            Unit = "Fund Account",
                            UnitId = new Guid("57019e9f-390a-47a5-b7ec-1c9da2fd8111"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("6140fee4-cd5f-44ae-b1e9-76c38a51637a"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6386),
                            Email = "oluwatosin.adeboyejo@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Adeboyejo",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("5d6a8e13-4cbe-4ca6-81f7-ebb2ffce0935"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6388),
                            Email = "elizabeth.alloy@arm.com.ng",
                            IsDeleted = false,
                            Name = "Elizabeth Alloy",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("45de106c-5e26-46e4-82fd-c3023fafe9a3"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6389),
                            Email = "stephanie.gber@arm.com.ng",
                            IsDeleted = false,
                            Name = "Stephanie Gber",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("ef4c0ed2-985a-4bc5-88fe-927b385137bd"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6391),
                            Email = "temitope.akinola@arm.com.ng",
                            IsDeleted = false,
                            Name = "Temitope Akinola",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("159b1338-0215-459d-8132-7fe4024cfabd"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6395),
                            Email = "bimbo.moses@arm.com.ng",
                            IsDeleted = false,
                            Name = "Bimbo Moses",
                            Unit = "Securities Operations",
                            UnitId = new Guid("ab0802de-a04a-4e10-90d4-3ec2cfdf2b0a"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("47a53149-a6d4-41d9-9342-d53080d546e9"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6398),
                            Email = "valerie.okosun@arm.com.ng",
                            IsDeleted = false,
                            Name = "Valerie Okosun",
                            Unit = "Securities Operations,Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            Id = new Guid("d2ff627e-8c5c-4529-83ad-e7b10a4e3c50"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6400),
                            Email = "kingsley.ottah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kingsley Ottah",
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            Id = new Guid("cc83dd65-f79a-41f1-a27f-ffb6ffcec948"),
                            Business = "ARM IM",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6402),
                            Email = "lincoln.ogigai@arm.com.ng",
                            IsDeleted = false,
                            Name = "Lincoln Ogigai",
                            Unit = "Financial Control",
                            UnitId = new Guid("dc1638be-a2ea-4eec-9616-0a8feee5ae76"),
                            UserRoleId = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c")
                        },
                        new
                        {
                            Id = new Guid("c27c07cc-e950-4f95-9635-15baed3dd4e9"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6403),
                            Email = "ramond.akorah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Ramond Akorah",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("196c8b41-5984-4c88-95a1-ff8476889cb2"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6405),
                            Email = "oluwatosin.afolayan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Oluwatosin Afolayan",
                            Unit = "Securities Operations",
                            UnitId = new Guid("c1569f0f-9643-43d6-bdca-e7296d044604"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("baad7a93-5004-4f62-a34a-dedccd18acab"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6407),
                            Email = "evelyn.nwogu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Evelyn Nwogu",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("f78e92b8-891e-4ecd-ab2f-e5d1d67137a1"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6408),
                            Email = "olawale.bakir@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olawale Bakir",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("c006ec88-448b-483e-afe8-3cf7c74c4baf"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6409),
                            Email = "babatunde.osho@arm.com.ng",
                            IsDeleted = false,
                            Name = "Babatunde Osho",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("fd5ea9a6-23b0-430f-b7aa-c169d041f6f5"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6411),
                            Email = "olugbenga.ajigbotafe@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olugbenga Ajigbotafe",
                            Unit = "Financial Control",
                            UnitId = new Guid("451c2ef5-4298-4697-af78-5e328e18ef31"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("fdcf2a92-6ed3-49c7-881c-8ff4aa7f2100"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6414),
                            Email = "vwede.edah@arm.com.ng",
                            IsDeleted = false,
                            Name = "Vwede Edah",
                            Unit = "Trading & Brokerage",
                            UnitId = new Guid("b4a85a6e-f9db-4af1-ac85-175574f703f7"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("4cfe42fd-573c-4023-86a9-1dac1cbb5a68"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6416),
                            Email = "abayomi.apoeso@arm.com.ng",
                            IsDeleted = false,
                            Name = "Abayomi Apoeso",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("bbdc84d0-6ad4-4c8d-bb58-a13b2d776073"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6417),
                            Email = "joy.oyekan@arm.com.ng",
                            IsDeleted = false,
                            Name = "Joy Oyekan",
                            Unit = "Financial Control",
                            UnitId = new Guid("a89fca23-939c-45d4-adcd-540e94a47eec"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("f84d072d-33c2-46db-8238-13ee32d7fcf3"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6423),
                            Email = "faith.sani@arm.com.ng",
                            IsDeleted = false,
                            Name = "Faith Sani",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("6fc1a646-a174-4824-88a8-5bcd30231838"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6425),
                            Email = "augustine.chukwu@arm.com.ng",
                            IsDeleted = false,
                            Name = "Augustine Chukwu",
                            Unit = "Information Security",
                            UnitId = new Guid("b8e4ea11-e826-4eb9-8a10-d46a6830bbcb"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("e9ba5cac-3a2f-46fc-bb4c-10e50e34b583"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6426),
                            Email = "olabisi.adesina@arm.com.ng",
                            IsDeleted = false,
                            Name = "Olabisi Adesina",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("329fbca6-1391-4f8b-b656-69072b132251"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6428),
                            Email = "kiadum.nwakoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Kiadum Nwakoh",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        },
                        new
                        {
                            Id = new Guid("ddfff507-a500-47fc-b76f-c375ccc0b174"),
                            Business = "ARM Securities",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(6429),
                            Email = "nehizena.ibhawoh@arm.com.ng",
                            IsDeleted = false,
                            Name = "Nehizena Ibhawoh",
                            Unit = "Legal,Compliance",
                            UnitId = new Guid("14bc990b-65e8-468a-ad31-338bb36b07e1"),
                            UserRoleId = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d")
                        });
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d667eed-04db-481c-9ae0-1c7e614e4507"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(8708),
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6d834a22-463e-4553-a2ac-030b1a21f88b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(8711),
                            IsDeleted = false,
                            Name = "UnitHead"
                        },
                        new
                        {
                            Id = new Guid("4d94774a-bd57-491a-bcec-b1e6c547bb4b"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(8713),
                            IsDeleted = false,
                            Name = "RiskChampion"
                        },
                        new
                        {
                            Id = new Guid("a8cac012-b665-481a-8028-90ed1c4226f9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(8714),
                            IsDeleted = false,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = new Guid("9998f0e2-81ba-4c0b-96b2-419b8040a47d"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(8716),
                            IsDeleted = false,
                            Name = "OtherComplianceUser"
                        },
                        new
                        {
                            Id = new Guid("e8a6dd2a-a84f-4061-a772-318ff57ed62c"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedOnUtc = new DateTime(2024, 8, 15, 7, 37, 50, 517, DateTimeKind.Utc).AddTicks(8718),
                            IsDeleted = false,
                            Name = "ComplianceOfficer"
                        });
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusinessDepartment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", "ComplianceDepartment")
                        .WithMany("ComplianceBusinessDepartment")
                        .HasForeignKey("ComplianceDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", "ComplianceRegulator")
                        .WithMany("ComplianceRules")
                        .HasForeignKey("ComplianceRegulatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceRegulator");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRulesBusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", "ComplianceBusiness")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", "ComplianceRule")
                        .WithMany("ComplianceRulesBusiness")
                        .HasForeignKey("ComplianceRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComplianceBusiness");

                    b.Navigation("ComplianceRule");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHILL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHILLEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseARMShared", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("ARMShared")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseARMShared", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseAcademy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTU", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CTU")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCTU", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCorporatestrategy", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("CustomerExperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseCustomerExperience", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDigitalFinanceService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("DigitalFinanceService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseDigitalFinanceService", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseHCM", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseIT", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInformationSecurity", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseInternalControl", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseLegal", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseMCC", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseProcurementAndAdmin", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseRiskManagement", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverseTreasury", "ARMSharedAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", "AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeEMCRating", "EMCConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditAnnouncementMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditAnnouncementMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditFindingAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("AuditFinding")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditPlanningMemoAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditPlanningMemoAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("AuditProgramAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgriFinancialControlAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("FinancialControlAAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgriFinancialControlAAFML", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgriFinancialControlRFL", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("FinancialControlRFL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgriFinancialControlRFL", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusiness", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessAAFML", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", null)
                        .WithOne("RFL")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMAgribusinessRFL", "ARMAgribusinessAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHill", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillCompliance", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillFinancialControl", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillInvestmentPortfolio", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", null)
                        .WithOne("InvestmentPortfolio")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHillInvestmentPortfolio", "ARMHillAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoCompliance", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoFinancialControl", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasuryOperation", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldCoTreasurySale", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMHoldingCompany", "ARMHoldingCompanyAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMBDPWMIAMIMRetail", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMCompliance", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFinancialControl", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAccount", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMFundAdmin", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMIMUnit", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationControl", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMOperationSettlement", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRegistrar", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMRetailOperation", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMTreasuryInvestment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", null)
                        .WithOne("TreasuryInvestment")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMIMTreasuryInvestment", "ARMIMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurity", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityCompliance", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityFinacialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("FinacialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityFinacialControl", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityFinancialAdvisory", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("FinancialAdvisory")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityFinancialAdvisory", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityResearch", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecuritySecurityOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("SecurityOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecuritySecurityOperation", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMSecurityStockBroking", "ARMSecurityAnnualAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAM", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAMFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAMFinancialControl", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAMTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTAMTreasuryOperation", "ARMTAMAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrustee", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCommercialTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeCompliance", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteeFinancialControl", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditUniverseARMTrusteePrivateTrust", "ARMTrusteeAuditUniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CitationAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("Citation")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", "AnualAuditUniverseRiskRating")
                        .WithMany()
                        .HasForeignKey("AnualAuditUniverseRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnualAuditUniverseRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRating", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingAAFML", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("FinancialControlAAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingFinancialControlAAFML", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("FinancialControlRFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingFinancialControlRFl", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusinessRatingRFl", "ComplianceAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRating", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRatingFinancialControl", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRatingTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessTAMRatingTreasuryOperation", "ComplianceBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRating", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRatingCompliance", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceHillRatingFinancialControl", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRating", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingARMRegistrar", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingBDPWMIAMIMRetail", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingCompliance", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFinancialControl", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAccount", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingFundAdmin", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationControl", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingOperationSettlement", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingRetailOperation", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingTreasuryInvestment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", null)
                        .WithOne("TreasuryInvestment")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMRatingTreasuryInvestment", "ComplianceIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceInvestmentPortfolio", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", null)
                        .WithOne("InvestmentPortfolio")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceInvestmentPortfolio", "ComplianceBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRating", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingCompliance", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingFinancialAdvisory", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("FinancialAdvisory")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingFinancialAdvisory", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingFinancialControl", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingResearch", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingSecurityOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("SecurityOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingSecurityOperation", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurityRatingStockBroking", "ComplianceSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRating", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingAcademy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTU", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("CTU")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCTU", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCorporatestrategy", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingCustomerexperience", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingDigitalFinanceService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("DigitalFinanceService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingDigitalFinanceService", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingHCM", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingIT", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInformationSecurity", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingInternalControl", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingLegal", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingMCC", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingProcurementAndAdmin", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingRiskManagement", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedServiceRatingTreasury", "ComplianceSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRating", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCommercialTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingCompliance", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingFinancialControl", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceTrusteeRatingPrivateTrust", "ComplianceBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessCompliance", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessFinancialControl", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessRiskRatingARMHoldCo", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasuryOperation", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CompliancesBusinessTreasurySale", "ComplianceBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFindingActionDetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", "ConsolidatedAuditFinding")
                        .WithMany("ActionDetail")
                        .HasForeignKey("ConsolidatedAuditFindingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsolidatedAuditFinding");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("EngagementLetterAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecutionDuration", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterAuditExecutionDuration")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterReportDistributionList", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", "EngagementLetterAuditExecution")
                        .WithMany("EngagementLetterReportDistributionList")
                        .HasForeignKey("EngagementLetterAuditExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRating", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingAAFML", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("FinancialControlAAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingFinancialControlAAFML", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("FinancialControlRFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingFinancialControlRFl", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialAgribusinessRatingRFl", "FinancialAgribusinessReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialBusinessTAMRating", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRating", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingCompliance", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingFinancialControl", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingInvestmentPortfolio", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", null)
                        .WithOne("InvestmentPortfolio")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialHillRatingInvestmentPortfolio", "FinancialHillReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMBusinessRating", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingARMRegistrar", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingBDPWMIAMIMRetail", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingCompliance", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFinancialControl", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAccount", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingFundAdmin", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationControl", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingOperationSettlement", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingRetailOperation", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingTreasuryInvestment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", null)
                        .WithOne("TreasuryInvestment")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialIMRatingTreasuryInvestment", "FinancialIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessCompliance", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessFinancialControl", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessTreasuryOperation", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingARMHoldCo", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialRatingBusinessratingTreasurySale", "FinancialReportingBusinessratingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRating", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingCompliance", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingFinancialAdvisory", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("FinancialAdvisory")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingFinancialAdvisory", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingFinancialControl", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingResearch", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingSecurityOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("SecurityOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingSecurityOperation", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSecurityRatingStockBroking", "FinancialSecurityReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRating", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingAcademy", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCTU", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("CTU")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCTU", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCorporatestrategy", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingCustomerexperience", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingDigitalFinanceService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("DigitalFinanceService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingDigitalFinanceService", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingHCM", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingIT", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingInformationSecurity", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingInternalControl", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingLegal", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingMCC", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingProcurementAndAdmin", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingRiskManagement", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialSharedServiceRatingTreasury", "FinancialSharedServiceReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTAMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTAMRatingFinancialControl", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTAMRatingTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTAMRatingTreasuryOperation", "FinancialBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRating", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCommercialTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingCompliance", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingFinancialControl", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinacialTrusteeRatingPrivateTrust", "FinancialTrusteeReportingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("FinancialReporting")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", "CommenceEngagementAuditexecution")
                        .WithOne("InformationRequirementAuditExecution")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InformationRequirementAuditExecution", "CommenceEngagementAuditexecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommenceEngagementAuditexecution");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditRatingReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("InternalAuditRating")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMIM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", "ManagementConcernRiskRating")
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", "ManagementConcernRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", "ManagementConcernARMAgribusiness")
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMAgribusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("BusinessAndBusinessUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernBusinessUnitARMTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMAgribusinessRating", "ManagementConcernARMAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMHillRating", "ManagementConcernARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMIMRating", "ManagementConcernARMIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", "ManagementConcernARMSecurity")
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARMSecurityRating", "ManagementConcernARMSecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManagementConcernARMSecurity");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", null)
                        .WithOne("SharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernSharedServiceARTrusteeRating", "ManagementConcernARMTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementResponseAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ManagementResponse")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ObservationListAuditReport", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", "InternalAuditReport")
                        .WithMany("ObservationList")
                        .HasForeignKey("InternalAuditReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalAuditReport");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRating", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingAAFML", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("FinancialControlAAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingFinancialControlAAFML", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("FinancialControlRFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingFinancialControlRFl", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusinessRatingRFl", "OperationAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessArmHolco", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessCompliance", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessFinancialControl", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRating", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRatingFinancialControl", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRatingTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTAMRatingTreasuryOperation", "OperationBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasuryOperation", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessTreasurySale", "OperationBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRating", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingCompliance", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingFinancialControl", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingInvestmentPortfolio", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", null)
                        .WithOne("InvestmentPortfolio")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationHillRatingInvestmentPortfolio", "OperationBusinessRatingHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingARMRegistrar", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingBDPWMIAMIMRetail", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingCompliance", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFinancialControl", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAccount", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingFundAdmin", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationControl", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingOperationSettlement", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingRetailOperation", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingTreasuryInvestment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("TreasuryInvestment")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMRatingTreasuryInvestment", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMUnitRating", "OperationIMBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRating", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingCompliance", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingFinancialAdvisory", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("FinancialAdvisory")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingFinancialAdvisory", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingFinancialControl", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingResearch", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingSecurityOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("SecurityOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingSecurityOperation", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityRatingStockBroking", "OperationSecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRating", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingAcademy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTU", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("CTU")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCTU", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCorporatestrategy", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingCustomerexperience", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingDigitalFinanceService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("DigitalFinanceService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingDigitalFinanceService", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingHCM", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingIT", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInformationSecurity", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingInternalControl", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingLegal", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingMCC", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingProcurementAndAdmin", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingRiskManagement", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedServiceRatingTreasury", "OperationSharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Operations")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRating", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCommercialTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingCompliance", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingFinancialControl", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrusteeRatingPrivateTrust", "OperationTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.RatedBusinessRiskRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", "BusinessRiskRating")
                        .WithMany()
                        .HasForeignKey("BusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", "ARMAgribusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMAgribusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("ARMAgribusiness")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRating", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("AAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingAAFML", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingFinancialControlAAFML", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("FinancialControlAAFML")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingFinancialControlAAFML", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingFinancialControlRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("FinancialControlRFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingFinancialControlRFl", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", null)
                        .WithOne("RFl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusinessRatingRFl", "StrategyAgribusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", "ARMTAMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTAMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("ARMHoldingCompany")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessArmHoldCo", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "StrategyBusinessRatingARMHoldCo")
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessCompliance", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "StrategyBusinessRatingARMHoldCo")
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessFinancialControl", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StrategyBusinessRatingARMHoldCo");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", "ARMHillRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHillRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", "ARMHoldingCompanyBusinessRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMHoldingCompanyBusinessRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", "ARMTrusteeRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMTrusteeRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("ARMTAM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRating", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRatingFinancialControl", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRatingTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTAMRatingTreasuryOperation", "StrategyBusinessARMTAMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasuryOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("TreasuryOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasuryOperation", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", null)
                        .WithOne("TreasurySale")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessTreasurySale", "StrategyBusinessRatingARMHoldCoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("ARMHill")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRating", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingCompliance", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingFinancialControl", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingInvestmentPortfolio", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", null)
                        .WithOne("InvestmentPortfolio")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyHillRatingInvestmentPortfolio", "StrategyBusinessRatingARMHillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("IMUnit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRating", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("ARMRegistrar")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingARMRegistrar", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("BDPWMIAMIMRetail")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingBDPWMIAMIMRetail", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingCompliance", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFinancialControl", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAccount")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAccount", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("FundAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingFundAdmin", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationControl", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("OperationSettlement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingOperationSettlement", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("RetailOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingRetailOperation", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingTreasuryInvestment", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", null)
                        .WithOne("TreasuryInvestment")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyIMRatingTreasuryInvestment", "StrategyImBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", "ARMIMBusinessRiskRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMIMBusinessRiskRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", "ARMSecurityRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSecurityRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("ARMSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRating", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingCompliance", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingFinancialAdvisory", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("FinancialAdvisory")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingFinancialAdvisory", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingFinancialControl", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingResearch", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("Research")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingResearch", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingSecurityOperation", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("SecurityOperation")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingSecurityOperation", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", null)
                        .WithOne("StockBroking")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityRatingStockBroking", "StrategySecurityBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", "ARMSharedServiceRating")
                        .WithOne("Strategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ARMSharedServiceRating");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("ARMSharedService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRating", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Academy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingAcademy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTU", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("CTU")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCTU", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Corporatestrategy")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCorporatestrategy", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Customerexperience")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingCustomerexperience", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingDigitalFinanceService", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("DigitalFinanceService")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingDigitalFinanceService", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("HCM")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingHCM", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("IT")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingIT", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InformationSecurity")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInformationSecurity", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("InternalControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingInternalControl", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Legal")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingLegal", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("MCC")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingMCC", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("ProcurementAndAdmin")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingProcurementAndAdmin", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("RiskManagement")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingRiskManagement", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", null)
                        .WithOne("Treasury")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedServiceRatingTreasury", "StrategySharedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("ARMTrustee")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRating", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("CommercialTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCommercialTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCompliance", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("Compliance")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingCompliance", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingFinancialControl", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("FinancialControl")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingFinancialControl", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", null)
                        .WithOne("PrivateTrust")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyTrusteeRatingPrivateTrust", "StrategyBusinessRatingTrusteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAgribusinessAudit", "ARMAgribusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditBusinessRatingARMHoldCo", "ARMHoldingCompanyBusinessRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastAuditIMBusinessRating", "ARMIMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastBusinessARMTAMAudit", "ARMTAMBusinessRiskRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastHillAudit", "ARMHillRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSecurityAudit", "ARMSecurityRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastSharedServiceAudit", "ARMSharedServiceRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", null)
                        .WithOne("TimeSinceLastAudit")
                        .HasForeignKey("Arm.GrcApi.Modules.RiskManagement.AuditPlan.TimeSinceLastTrusteeAudit", "ARMTrusteeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductAssessRisk", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", "ProductRiskAssessment")
                        .WithMany("ProductAssessRisks")
                        .HasForeignKey("ProductRiskAssementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRiskAssessment");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BIAUnitProcessDetails")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetailsBusinessUnitToRunProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", "BIAUnitProcessDetails")
                        .WithMany("BusinessUnitsToRunProcess")
                        .HasForeignKey("BIAUnitProcessDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", "BusinessImpactAnalysis")
                        .WithMany("BusinessImpactAnalysisUnits")
                        .HasForeignKey("BusinessImpactAnalysisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysis");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnitLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", "BusinessImpactAnalysisUnit")
                        .WithMany("BusinessImpactAnalysisUnitLogs")
                        .HasForeignKey("BusinessImpactAnalysisUnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinessImpactAnalysisUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", "BusinessEntity")
                        .WithMany("Departments")
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessEntity");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", "RiskEventType")
                        .WithMany("RiskEventTypeCategories")
                        .HasForeignKey("RiskEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventType");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", "RiskEventTypeCategory")
                        .WithMany("RiskEventTypeSubCategories")
                        .HasForeignKey("RiskEventTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskEventTypeCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", "RiskControlSelfAssessmentUnit")
                        .WithOne("DocumentRSCAProcess")
                        .HasForeignKey("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "RiskControlSelfAssessmentUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessmentUnit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcessLog", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRSCAProcess")
                        .WithMany("DocumentRSCAProcessLogs")
                        .HasForeignKey("DocumentRSCAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRSCAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.ProcessInherentRiskControl", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", "DocumentRCSAProcess")
                        .WithMany("ProcessInherentRiskControls")
                        .HasForeignKey("DocumentRCSAProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentRCSAProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RSCAProcess", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany("RSCAProcess")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", "RiskControlSelfAssessment")
                        .WithMany("RiskControlSelfAssessmentUnits")
                        .HasForeignKey("RiskControlSelfAssessmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskControlSelfAssessment");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.ActionManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.LossManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", "RiskDriver")
                        .WithMany("RiskDriverCategories")
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriver");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", "RiskDriverCategory")
                        .WithMany("RiskDriverSubCategories")
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskDriverCategory");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEffectManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEffectCategory", null)
                        .WithMany()
                        .HasForeignKey("EffectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEvent", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.BusinessEntity", null)
                        .WithMany()
                        .HasForeignKey("BusinessEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Unit", null)
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskEventManagement", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", null)
                        .WithMany()
                        .HasForeignKey("EventCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventTypeSubCategory", null)
                        .WithMany()
                        .HasForeignKey("EventSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.Risk.RiskEventType", null)
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriver", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskDriverSubCategory", null)
                        .WithMany()
                        .HasForeignKey("RiskDriverSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arm.GrcTool.Domain.RiskEvent.RiskEvent", null)
                        .WithMany()
                        .HasForeignKey("RiskEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.HasOne("Arm.GrcTool.Domain.Department", "Department")
                        .WithMany("Units")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", b =>
                {
                    b.HasOne("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "WorkPaper")
                        .WithOne("AuditFindings")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.AuditFindings", "WorkerPaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPaper");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.HasOne("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", "AuditProgramAuditExecution")
                        .WithOne("workPaper")
                        .HasForeignKey("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", "AuditProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution");
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.User", b =>
                {
                    b.HasOne("GrcApi.Modules.Shared.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceBusines", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");

                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceDepartment", b =>
                {
                    b.Navigation("ComplianceBusinessDepartment");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRegulator", b =>
                {
                    b.Navigation("ComplianceRules");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.Compliance.CompliancePlanning.ComplianceRules", b =>
                {
                    b.Navigation("ComplianceRulesBusiness");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessAuditUniverse", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("FinancialControlAAFML")
                        .IsRequired();

                    b.Navigation("FinancialControlRFL")
                        .IsRequired();

                    b.Navigation("RFL")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMAgribusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillAuditUniverse", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("InvestmentPortfolio")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHillRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyAnnualAuditUniverse", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMHoldingCompanyBusinessRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMAuditUniverse", b =>
                {
                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();

                    b.Navigation("TreasuryInvestment")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMIMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityAnnualAuditUniverse", b =>
                {
                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinacialControl")
                        .IsRequired();

                    b.Navigation("FinancialAdvisory")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("SecurityOperation")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSecurityRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedAuditUniverse", b =>
                {
                    b.Navigation("ARMShared")
                        .IsRequired();

                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTU")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("CustomerExperience")
                        .IsRequired();

                    b.Navigation("DigitalFinanceService")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMSharedServiceRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMAuditUniverse", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTAMBusinessRiskRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeAuditUniverse", b =>
                {
                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ARMTrusteeRating", b =>
                {
                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialReporting")
                        .IsRequired();

                    b.Navigation("Operations")
                        .IsRequired();

                    b.Navigation("Strategy")
                        .IsRequired();

                    b.Navigation("TimeSinceLastAudit")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AnualAuditUniverseRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.AuditProgramAuditExecution", b =>
                {
                    b.Navigation("workPaper")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.BusinessRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.CommenceEngagementAuditexecution", b =>
                {
                    b.Navigation("AuditAnnouncementMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditPlanningMemoAuditExecution")
                        .IsRequired();

                    b.Navigation("AuditProgramAuditExecution")
                        .IsRequired();

                    b.Navigation("EngagementLetterAuditExecution")
                        .IsRequired();

                    b.Navigation("InformationRequirementAuditExecution")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("FinancialControlAAFML")
                        .IsRequired();

                    b.Navigation("FinancialControlRFl")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("InvestmentPortfolio")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceBusinessRatingTrustee", b =>
                {
                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceIMBusinessRating", b =>
                {
                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();

                    b.Navigation("TreasuryInvestment")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSecurity", b =>
                {
                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialAdvisory")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("SecurityOperation")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ComplianceSharedService", b =>
                {
                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTU")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DigitalFinanceService")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ConsolidatedAuditFinding", b =>
                {
                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EMCConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHILL")
                        .IsRequired();

                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.EngagementLetterAuditExecution", b =>
                {
                    b.Navigation("EngagementLetterAuditExecutionDuration");

                    b.Navigation("EngagementLetterReportDistributionList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialAgribusinessReporting", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("FinancialControlAAFML")
                        .IsRequired();

                    b.Navigation("FinancialControlRFl")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialHillReporting", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("InvestmentPortfolio")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialIMBusinessRating", b =>
                {
                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();

                    b.Navigation("TreasuryInvestment")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialReportingBusinessratingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSecurityReporting", b =>
                {
                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialAdvisory")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("SecurityOperation")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialSharedServiceReporting", b =>
                {
                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTU")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DigitalFinanceService")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.FinancialTrusteeReporting", b =>
                {
                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.InternalAuditReport", b =>
                {
                    b.Navigation("AuditFinding");

                    b.Navigation("Citation");

                    b.Navigation("InternalAuditRating");

                    b.Navigation("ManagementResponse");

                    b.Navigation("ObservationList");
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMAgribusiness", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMHill", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMIM", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMSecurity", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernARMTrustee", b =>
                {
                    b.Navigation("BusinessAndBusinessUnit")
                        .IsRequired();

                    b.Navigation("SharedService")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.ManagementConcernRiskRating", b =>
                {
                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("ARMIM")
                        .IsRequired();

                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("ARMTrustee")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("FinancialControlAAFML")
                        .IsRequired();

                    b.Navigation("FinancialControlRFl")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationBusinessRatingHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("InvestmentPortfolio")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationIMBusinessRating", b =>
                {
                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();

                    b.Navigation("TreasuryInvestment")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSecurityBusinessRating", b =>
                {
                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialAdvisory")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("SecurityOperation")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationSharedService", b =>
                {
                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTU")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DigitalFinanceService")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.OperationTrustee", b =>
                {
                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyAgribusiness", b =>
                {
                    b.Navigation("AAFML")
                        .IsRequired();

                    b.Navigation("ARMAgribusiness")
                        .IsRequired();

                    b.Navigation("FinancialControlAAFML")
                        .IsRequired();

                    b.Navigation("FinancialControlRFl")
                        .IsRequired();

                    b.Navigation("RFl")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessARMTAM", b =>
                {
                    b.Navigation("ARMTAM")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHill", b =>
                {
                    b.Navigation("ARMHill")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("InvestmentPortfolio")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingARMHoldCo", b =>
                {
                    b.Navigation("ARMHoldingCompany")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("TreasuryOperation")
                        .IsRequired();

                    b.Navigation("TreasurySale")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyBusinessRatingTrustee", b =>
                {
                    b.Navigation("ARMTrustee")
                        .IsRequired();

                    b.Navigation("CommercialTrust")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("PrivateTrust")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategyImBusinessRating", b =>
                {
                    b.Navigation("ARMRegistrar")
                        .IsRequired();

                    b.Navigation("BDPWMIAMIMRetail")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("FundAccount")
                        .IsRequired();

                    b.Navigation("FundAdmin")
                        .IsRequired();

                    b.Navigation("IMUnit")
                        .IsRequired();

                    b.Navigation("OperationControl")
                        .IsRequired();

                    b.Navigation("OperationSettlement")
                        .IsRequired();

                    b.Navigation("RetailOperation")
                        .IsRequired();

                    b.Navigation("TreasuryInvestment")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySecurityBusinessRating", b =>
                {
                    b.Navigation("ARMSecurity")
                        .IsRequired();

                    b.Navigation("Compliance")
                        .IsRequired();

                    b.Navigation("FinancialAdvisory")
                        .IsRequired();

                    b.Navigation("FinancialControl")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("SecurityOperation")
                        .IsRequired();

                    b.Navigation("StockBroking")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.AuditPlan.StrategySharedService", b =>
                {
                    b.Navigation("ARMSharedService")
                        .IsRequired();

                    b.Navigation("Academy")
                        .IsRequired();

                    b.Navigation("CTU")
                        .IsRequired();

                    b.Navigation("Corporatestrategy")
                        .IsRequired();

                    b.Navigation("Customerexperience")
                        .IsRequired();

                    b.Navigation("DigitalFinanceService")
                        .IsRequired();

                    b.Navigation("HCM")
                        .IsRequired();

                    b.Navigation("IT")
                        .IsRequired();

                    b.Navigation("InformationSecurity")
                        .IsRequired();

                    b.Navigation("InternalControl")
                        .IsRequired();

                    b.Navigation("Legal")
                        .IsRequired();

                    b.Navigation("MCC")
                        .IsRequired();

                    b.Navigation("ProcurementAndAdmin")
                        .IsRequired();

                    b.Navigation("RiskManagement")
                        .IsRequired();

                    b.Navigation("Treasury")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcApi.Modules.RiskManagement.PRA.ProductRiskAssessment", b =>
                {
                    b.Navigation("ProductAssessRisks");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessEntity", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BIAUnitProcessDetails", b =>
                {
                    b.Navigation("BusinessUnitsToRunProcess");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysis", b =>
                {
                    b.Navigation("BusinessImpactAnalysisUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.BusinessImpactAnalysis.BusinessImpactAnalysisUnit", b =>
                {
                    b.Navigation("BIAUnitProcessDetails");

                    b.Navigation("BusinessImpactAnalysisUnitLogs");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Department", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventType", b =>
                {
                    b.Navigation("RiskEventTypeCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Risk.RiskEventTypeCategory", b =>
                {
                    b.Navigation("RiskEventTypeSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.DocumentRSCAProcess", b =>
                {
                    b.Navigation("DocumentRSCAProcessLogs");

                    b.Navigation("ProcessInherentRiskControls");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessment", b =>
                {
                    b.Navigation("RiskControlSelfAssessmentUnits");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskControlSelfAssessment.RiskControlSelfAssessmentUnit", b =>
                {
                    b.Navigation("DocumentRSCAProcess")
                        .IsRequired();
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriver", b =>
                {
                    b.Navigation("RiskDriverCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.RiskEvent.RiskDriverCategory", b =>
                {
                    b.Navigation("RiskDriverSubCategories");
                });

            modelBuilder.Entity("Arm.GrcTool.Domain.Unit", b =>
                {
                    b.Navigation("RSCAProcess");
                });

            modelBuilder.Entity("GrcApi.Modules.RiskManagement.AuditPlan.WorkPaper", b =>
                {
                    b.Navigation("AuditFindings")
                        .IsRequired();
                });

            modelBuilder.Entity("GrcApi.Modules.Shared.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
